{"version":3,"sources":["webpack:///src/app/Features/skill/evaluate-skill/evaluate-skill.component.ts","webpack:///src/app/Features/skill/evaluate-skill/evaluate-skill.component.html","webpack:///src/app/Features/skill/my-skill/my-skill.component.ts","webpack:///src/app/Features/skill/my-skill/my-skill.component.html","webpack:///src/app/Features/skill/skill-routing.module.ts","webpack:///src/app/Features/skill/skill.component.ts","webpack:///src/app/Features/skill/skill.component.html","webpack:///src/app/Features/skill/skill.module.ts","webpack:///src/app/Features/skill/skill.service.ts"],"names":["EvaluateSkillComponent","selector","templateUrl","styleUrls","MySkillComponent","fb","skillService","userService","messageService","GetSkillName","id","index","SkillsList","length","skill","skillId","skillName","GetSkillFormGroup","skillArray","controls","MapSkill","data","skillForm","content","skillProficiency","employeeId","LoggedInUser","Id","activateFlag","skillMpgId","console","log","MapEmployeeWithSkill","subscribe","res","errorCode","patchValue","mode","dataObj","add","severity","summary","detail","errorMsg","err","GetSkillsMappedToEmployee","UnMapSkillForEmployee","RemoveMappingForSkill","removeAt","GetAllTheSkills","EmployeeSkills","AddRequiredSkills","SkillsFormGroup","group","SkillsArray","RequiredSkills","push","required","CreateSkillAndMap","state","forEach","value","CheckIfSkillExists","CreateSkill","UpdateSkill","element","error","event","filtered","query","i","toLowerCase","indexOf","FilteredSkillsList","skillsFormArray","array","count","get","AddNewSkillFormGroup","routes","path","component","Title","ShowHeader","ShowNavBar","SkillRoutingModule","forChild","imports","exports","SkillComponent","SkillModule","declarations","SkillService","httpclient","post","PortalName","getSkill","skillNamedata","addSkill","createdBy","mapEmployeeSkill","employeeIdData","getEmployeeSkill","SkillName","updateSkill","providedIn"],"mappings":"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","file":"Features-skill-skill-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-evaluate-skill',\r\n  templateUrl: './evaluate-skill.component.html',\r\n  styleUrls: ['./evaluate-skill.component.css']\r\n})\r\nexport class EvaluateSkillComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n    <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"table-full-width\">\r\n                        <ul class=\"feedback-list\">\r\n                            <li>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter you Skills</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Skill Name e.g. HTML\" value=\"HTML\">\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter your Skills Proficiency</label><br><br>\r\n                                        <div class=\"skill-slider\">\r\n                                            <span>Html</span>\r\n                                            <span id=\"ex1CurrentSliderValLabel\" class=\"skill-value\"><span id=\"ex1SliderVal\">100</span>%</span>\r\n                                            <input id=\"ex1\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"100\" data-slider-step=\"1\" data-slider-value=\"100\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\" style=\"margin-top: 20px;\">\r\n                                        <button class=\"btn btn-success color-green\">Rate Employee Skill</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Rate Employee skill</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Skill Name e.g. HTML\" value=\"Html\">\r\n                                    </div>\r\n                                     <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter Employees Skill Proficiency</label><br><br>\r\n                                        <div class=\"skill-slider\">\r\n                                            <span>Skill</span>\r\n                                            <span id=\"ex3CurrentSliderValLabel\" class=\"skill-value\"><span id=\"ex3SliderVal\">10</span>%</span>\r\n                                            <input id=\"ex3\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"100\" data-slider-step=\"1\" data-slider-value=\"10\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <i class=\"icon-success\"></i>\r\n                                        <i class=\"icon-edit\"></i>\r\n                                        <i class=\"icon-delete\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter you Skills</label>\r\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Skill Name e.g. HTML\">\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter your Skills Proficiency</label><br><br>\r\n                                        <div class=\"skill-slider\">\r\n                                            <span>Skill</span>\r\n                                            <span id=\"ex3CurrentSliderValLabel\" class=\"skill-value\"><span id=\"ex2SliderVal\">10</span>%</span>\r\n                                            <input id=\"ex2\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"100\" data-slider-step=\"1\" data-slider-value=\"10\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\" style=\"margin-top: 20px;\">\r\n                                        <button class=\"btn btn-success color-green\">Rate Employee Skill</button>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { SkillService } from '../skill.service';\r\nimport { UserService } from '../../../Services/user.service';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-my-skill',\r\n  templateUrl: './my-skill.component.html',\r\n  styleUrls: ['./my-skill.component.css']\r\n})\r\nexport class MySkillComponent implements OnInit {\r\n\r\n  SkillsFormGroup: FormGroup;\r\n  EmployeeSkills: any[];\r\n  SkillsList: any[];\r\n  FilteredSkillsList:any[];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private skillService: SkillService,\r\n    public userService: UserService,\r\n    private messageService: MessageService\r\n  ) { }\r\n  ngOnInit(): void {\r\n    this.skillService.GetAllTheSkills()\r\n      .subscribe(res => {\r\n        this.SkillsList = res.dataObj;\r\n        this.skillService.GetSkillsMappedToEmployee(this.userService.LoggedInUser.Id)\r\n          .subscribe(res => {\r\n            if (res.errorCode == 0) {\r\n              console.log(res.dataObj);\r\n              this.EmployeeSkills = res.dataObj;\r\n              this.AddRequiredSkills();\r\n            }\r\n            else {\r\n\r\n            }\r\n          });\r\n      }\r\n        , err => {\r\n\r\n        });\r\n  }\r\n\r\n  AddRequiredSkills() {\r\n    console.log(\"test\");\r\n    this.SkillsFormGroup = this.fb.group({\r\n      SkillsArray: this.RequiredSkills\r\n    });\r\n  }\r\n\r\n  get RequiredSkills() {\r\n    var skillsFormArray = this.fb.array([]);\r\n    var count = 0;\r\n    console.log(this.EmployeeSkills);\r\n    count = this.EmployeeSkills.length;\r\n    console.log(count);\r\n    this.EmployeeSkills.forEach(skill => {\r\n      console.log(skill);\r\n      skillsFormArray.push(this.fb.group({\r\n        skillName: [this.GetSkillName(skill.skillId)],\r\n        skillId: [skill.skillId],\r\n        skillProficiency: [skill.skillProficiency],\r\n        skillMpgId: [skill.skillMpgId],\r\n        mode: [\"view\"]\r\n      }))\r\n    });\r\n    for (let index = count; index < 3; index++) {\r\n      skillsFormArray.push(this.fb.group({\r\n        skillName: ['', Validators.required],\r\n        skillProficiency: [0],\r\n        mode: [\"edit\"],\r\n        skillMpgId: [''],\r\n        skillId: [0]\r\n      }));\r\n    }\r\n    return skillsFormArray;\r\n  }\r\n\r\n\r\n  GetSkillName = function (id) {\r\n    for (let index = 0; index < this.SkillsList.length; index++) {\r\n      const skill = this.SkillsList[index];\r\n      if (skill.skillId == id) {\r\n        return skill.skillName;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetSkillFormGroup = function (index) {\r\n    return this.skillArray.controls[index] as FormGroup;\r\n  }\r\n\r\n  get skillArray() {\r\n    return this.SkillsFormGroup.get(\"SkillsArray\") as FormArray;\r\n  }\r\n\r\n  AddNewSkillFormGroup() {\r\n    this.skillArray.push(this.fb.group({\r\n      skillName: ['', Validators.required],\r\n      skillProficiency: [0],\r\n      mode: [\"edit\"],\r\n      skillMpgId: [''],\r\n      skillId: [0]\r\n    }));\r\n  }\r\n\r\n  EditIconClicked(skillForm: FormGroup) {\r\n    skillForm.patchValue({\r\n      mode: \"edit\"\r\n    })\r\n  }\r\n\r\n  DeleteIconClicked(skill, index) {\r\n    if (skill.skillId == 0) {\r\n      this.skillArray.removeAt(index);\r\n      return;\r\n    }\r\n\r\n    this.UnMapSkillForEmployee(skill,index);\r\n  }\r\n\r\n  SaveIconClicked(index) {\r\n    var skillForm = this.skillArray.controls[index] as FormGroup;\r\n\r\n    this.CreateSkillAndMap(index);\r\n\r\n  }\r\n\r\n  CancelIconClicked(data) {\r\n\r\n  }\r\n\r\n  ChangeMode(state) {\r\n\r\n  }\r\n\r\n\r\n  CheckIfSkillExists(skillName) {\r\n    this.SkillsList.forEach((skill) => {\r\n      if (skill == skillName) {\r\n        return true;\r\n      }\r\n    })\r\n    return false;\r\n  }\r\n\r\n  CreateSkillAndMap(index) {\r\n\r\n    var skillForm = this.skillArray.controls[index] as FormGroup;\r\n\r\n    var data = skillForm.value;\r\n\r\n    if (data.skillId == 0) {\r\n      if (this.CheckIfSkillExists(data.skillName)) {\r\n        this.MapSkill(data, skillForm);\r\n      }\r\n      else {\r\n        this.skillService.CreateSkill(data.skillName).subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully Created skill' });\r\n            this.SkillsList.push(res.dataObj);\r\n            data.skillId = res.dataObj.skillId;\r\n            this.MapSkill(data, skillForm);\r\n          }\r\n          else {\r\n            this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n\r\n          }\r\n        }, (err) => {\r\n          this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed in api\" });\r\n        });\r\n      }\r\n    }\r\n    else{\r\n      this.skillService.UpdateSkill(data.skillId,data.skillName).subscribe((res) => {\r\n        this.MapSkill(data, skillForm);\r\n        if (res.errorCode == 0) {\r\n          for (let index = 0; index < this.SkillsList.length; index++) {\r\n            const element = this.SkillsList[index];\r\n\r\n            if (element.skillId == res.dataObj.skillId) {\r\n              this.SkillsList[index] = res.dataObj;\r\n            }\r\n          }\r\n          this.messageService.add({ severity: 'success', summary: 'Skill updated', detail: 'Skill updated successfully' });\r\n        }\r\n        else {\r\n          this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n        }\r\n      }, (error) => {\r\n        console.log(error);\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: 'Something went wrong please try after some time' });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  MapSkill = function (data, skillForm) {\r\n    var content = {\r\n      skillId: data.skillId,\r\n      skillProficiency: data.skillProficiency,\r\n      employeeId: this.userService.LoggedInUser.Id,\r\n      activateFlag: 1,\r\n      skillMpgId:data.skillMpgId\r\n    }\r\n\r\n    console.log(\"Map triggered\")\r\n    this.skillService.MapEmployeeWithSkill(content).subscribe((res) => {\r\n      if (res.errorCode == 0) {\r\n        skillForm.patchValue({\r\n          mode: \"view\",\r\n          skillProficiency:res.dataObj.skillProficiency\r\n        });\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully mapped skill' });\r\n\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n\r\n      }\r\n    }, (err) => {\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed in api\" });\r\n\r\n    }\r\n    );\r\n  }\r\n\r\n  GetSkillsMappedToEmployee = function () {\r\n\r\n  }\r\n\r\n  UnMapSkillForEmployee = function (data,index) {\r\n    var content = {\r\n      \"skillMpgId\": data.skillMpgId,\r\n      \"skillId\": data.skillId,\r\n      \"skillProficiency\": data.skillProficiency,\r\n      \"employeeId\": this.userService.LoggedInUser.Id,\r\n      \"activateFlag\": 0\r\n    }\r\n    this.skillService.RemoveMappingForSkill(content).subscribe((res) => {\r\n\r\n      if (res.errorCode == 0) {\r\n        this.skillArray.removeAt(index);\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully removed skill' });\r\n\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n\r\n      }\r\n\r\n    }, (err) => {\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed in api\" });\r\n    });\r\n  }\r\n\r\n  FilterSkills(event) {\r\n    let filtered : any[] = [];\r\n    let query = event.query;\r\n    for(let i = 0; i < this.SkillsList.length; i++) {\r\n        let skill = this.SkillsList[i];\r\n        if (skill.skillName.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n            filtered.push(skill.skillName);\r\n        }\r\n    }\r\n\r\n    this.FilteredSkillsList = filtered;\r\n}\r\n\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n    <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n        <p-toast></p-toast>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\" *ngIf=\"SkillsFormGroup\" [formGroup]=\"SkillsFormGroup\">\r\n                    <ul class=\"feedback-list\" FormArrayName=\"skillsFormArray\">\r\n                        <li *ngFor=\"let skill of skillArray.controls;let skillIndex=index\">\r\n                            <div class=\"row\">\r\n                                <ng-container [formGroup]=\"skill\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter you Skills</label>\r\n                                             <p-autoComplete formControlName=\"skillName\" placeholder=\"Skill Name e.g. HTML\" [suggestions]=\"FilteredSkillsList\" (completeMethod)=\"FilterSkills($event)\" [disabled]=\"skill.controls.mode.value!='edit'\" ></p-autoComplete>\r\n                                            <span class=\"error\" *ngIf=\"!skill.controls['skillName'].valid&&(skill.controls['skillName'].dirty|| skill.controls['skillName'].touched)\"><i\r\n                                              class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide skill name</span>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <label for=\"\">Enter your Skills Proficiency</label><br><br>\r\n                                        <div class=\"skill-slider\">\r\n                                            <span>{{skill.controls.skillName.value}}</span>\r\n                                            <span\r\n                                                class=\"skill-value\"><span>{{skill.controls.skillProficiency.value}}</span>%</span>\r\n                                            <p-slider formControlName=\"skillProficiency\" [min]=\"0\" [max]=\"100\" [disabled]=\"skill.controls.mode.value!='edit'\">\r\n                                            </p-slider>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 text-right\">\r\n                                        <i class=\"icon-edit\" *ngIf=\"skill.controls.mode.value=='view'\" (click)=\"EditIconClicked(skill)\" ></i>\r\n                                        <i class=\"icon-success\" *ngIf=\"skill.controls.mode.value=='edit'\" (click)=\"SaveIconClicked(skillIndex)\" ></i>\r\n                                        <i class=\"icon-delete\" *ngIf=\"skill.controls.mode.value=='view' || skill.controls.mode.value=='edit'\" (click)=\"DeleteIconClicked(skill.value,skillIndex)\" ></i>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"col-lg-3\" style=\"text-align:center\">\r\n                    <input type=\"button\" (click)=\"AddNewSkillFormGroup()\" value=\"Add New Skills\"\r\n                        class=\"subbtn btn btn-primary\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SkillComponent } from './skill.component';\r\nimport { MySkillComponent } from './my-skill/my-skill.component';\r\nimport { EvaluateSkillComponent } from './evaluate-skill/evaluate-skill.component';\r\n\r\nconst routes: Routes = [{ path: 'MySkill', component: MySkillComponent,data :{ Title:'My Skills' ,ShowHeader:true,ShowNavBar:true} },\r\n{ path: 'EvaluateSkill', component: EvaluateSkillComponent,data :{ Title:'Team List' ,ShowHeader:true,ShowNavBar:true} }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SkillRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-skill',\r\n  templateUrl: './skill.component.html',\r\n  styleUrls: ['./skill.component.css']\r\n})\r\nexport class SkillComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>skill works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport { SkillRoutingModule } from './skill-routing.module';\r\nimport { SkillComponent } from './skill.component';\r\nimport { MySkillComponent } from './my-skill/my-skill.component';\r\nimport { EvaluateSkillComponent } from './evaluate-skill/evaluate-skill.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport {ToastModule} from 'primeng/toast';\r\n@NgModule({\r\n  declarations: [SkillComponent, MySkillComponent, EvaluateSkillComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SkillRoutingModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    SliderModule,\r\n    ToastModule,\r\n    AutoCompleteModule\r\n  ]\r\n})\r\nexport class SkillModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport { UserService } from 'src/app/Services/user.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SkillService {\r\n\r\n  constructor(private httpclient:HttpClient,private userService:UserService) { }\r\n\r\n    GetAllTheSkills=function(){\r\n      return this.httpclient.post(this.userService.LoggedInUser.PortalName+ environment.getSkill,{});\r\n    }\r\n\r\n    CreateSkill=function(skillNamedata){\r\n      return this.httpclient.post(this.userService.LoggedInUser.PortalName+ environment.addSkill,{skillName: skillNamedata,createdBy:this.userService.LoggedInUser.Id});\r\n    }\r\n\r\n    RemoveMappingForSkill=function(data){\r\n      return this.httpclient.post(this.userService.LoggedInUser.PortalName+ environment.mapEmployeeSkill,[data]);\r\n    }\r\n\r\n    MapEmployeeWithSkill=function(data){\r\n      return this.httpclient.post(this.userService.LoggedInUser.PortalName+ environment.mapEmployeeSkill,[data])\r\n    }\r\n\r\n    GetSkillsMappedToEmployee=function(employeeIdData)\r\n    {\r\n      return this.httpclient.post(this.userService.LoggedInUser.PortalName+ environment.getEmployeeSkill,{employeeId:employeeIdData});\r\n    }\r\n\r\n    UpdateSkill=function(skillId,SkillName)\r\n    {\r\n      return this.httpclient.post(this.userService.LoggedInUser.PortalName+ environment.updateSkill,{skillId:skillId,skillName:SkillName});\r\n    }\r\n}\r\n"]}