{"version":3,"sources":["webpack:///node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-progressbar.js","webpack:///src/app/Features/signup/email-verification/email-verification.component.ts","webpack:///src/app/Features/signup/email-verification/email-verification.component.html","webpack:///src/app/Features/signup/signup-routing.module.ts","webpack:///src/app/Features/signup/signup.component.ts","webpack:///src/app/Features/signup/signup.component.html","webpack:///src/app/Features/signup/signup.module.ts","webpack:///src/app/Features/signup/signup.service.ts"],"names":["ProgressBar_div_2_Template","rf","ctx","ctx_r0","value","unit","_c0","a1","a2","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","ProgressBar","showValue","mode","ɵfac","ProgressBar_Factory","t","ɵcmp","type","selectors","inputs","style","styleClass","decls","vars","consts","template","ProgressBar_Template","directives","encapsulation","prototype","ProgressBarModule","ɵmod","ɵinj","factory","ProgressBarModule_Factory","imports","args","selector","changeDetection","Default","ngJitMode","declarations","exports","EmailVerificationComponent","route","signupService","router","loading","message","queryParamMap","subscribe","params","token","get","console","log","ValidateToken","res","errorCode","getElements","dataObj","companyInfo","res1","ElementsData","getOperations","res2","OperationsData","empData","GetEmpData","CreateEmployee","res3","verified","navigate","err","error","data","Empobj","designationId","departmentId","employeeFname","name","employeeEmail","email","employeePassword","employeeCode","userId","employeeMname","gender","employeeMobileNo","employeeProfileImg","employeeElementMappingList","index","ele","element","elementId","employeeElementOprationList","index2","ops","opertaion","operationId","push","templateUrl","styleUrls","routes","path","component","Title","ShowHeader","ShowNavBar","SignupRoutingModule","forChild","SignupComponent","layoutservice","fb","messageService","ShowValidationMessage","ShowCompanyValidationMessage","OnSubmit","portalName","userData","userRole","password","SignupFunction","company","companyName","industryType","adminMobile","adminEmail","companyDomain","contactPerson","apiURLPrefix","companyWebsite","companySize","addCompany","add","severity","summary","errorMsg","events","event","ngOnInit","SignupForm","group","required","compose","minLength","pattern","termsCheckBox","CheckPortalName","SignupModule","SignupService","httpClient","userService","url","post","signup","emailVerification","urlPrefix","urlSuffix","AddEmployee","validatePortalName","providedIn"],"mappings":"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","file":"Features-signup-signup-module-es5.js","sourcesContent":["import { Input, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction ProgressBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"display\", ctx_r0.value != null ? \"block\" : \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\"\", ctx_r0.value, \"\", ctx_r0.unit, \"\");\n} }\nconst _c0 = function (a1, a2) { return { \"ui-progressbar ui-widget ui-widget-content ui-corner-all\": true, \"ui-progressbar-determinate\": a1, \"ui-progressbar-indeterminate\": a2 }; };\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet ProgressBar = class ProgressBar {\n    constructor() {\n        this.showValue = true;\n        this.unit = '%';\n        this.mode = 'determinate';\n    }\n};\nProgressBar.ɵfac = function ProgressBar_Factory(t) { return new (t || ProgressBar)(); };\nProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ProgressBar, selectors: [[\"p-progressBar\"]], inputs: { showValue: \"showValue\", unit: \"unit\", mode: \"mode\", value: \"value\", style: \"style\", styleClass: \"styleClass\" }, decls: 3, vars: 11, consts: [[\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 3, \"ngStyle\", \"ngClass\"], [1, \"ui-progressbar-value\", \"ui-progressbar-value-animate\", \"ui-widget-header\", \"ui-corner-all\", 2, \"display\", \"block\"], [\"class\", \"ui-progressbar-label\", 3, \"display\", 4, \"ngIf\"], [1, \"ui-progressbar-label\"]], template: function ProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, ProgressBar_div_2_Template, 2, 4, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c0, ctx.mode === \"determinate\", ctx.mode === \"indeterminate\"));\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.value);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.value + \"%\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf], encapsulation: 2 });\n__decorate([\n    Input()\n], ProgressBar.prototype, \"value\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"showValue\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"style\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"styleClass\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"unit\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"mode\", void 0);\nlet ProgressBarModule = class ProgressBarModule {\n};\nProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ProgressBarModule });\nProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ProgressBarModule_Factory(t) { return new (t || ProgressBarModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'p-progressBar',\n                template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" role=\"progressbar\" aria-valuemin=\"0\" [attr.aria-valuenow]=\"value\" aria-valuemax=\"100\"\n            [ngClass]=\"{'ui-progressbar ui-widget ui-widget-content ui-corner-all': true, 'ui-progressbar-determinate': (mode === 'determinate'), 'ui-progressbar-indeterminate': (mode === 'indeterminate')}\">\n            <div class=\"ui-progressbar-value ui-progressbar-value-animate ui-widget-header ui-corner-all\" [style.width]=\"value + '%'\" style=\"display:block\"></div>\n            <div class=\"ui-progressbar-label\" [style.display]=\"value != null ? 'block' : 'none'\" *ngIf=\"showValue\">{{value}}{{unit}}</div>\n        </div>\n    `,\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return []; }, { showValue: [{\n            type: Input\n        }], unit: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressBarModule, { declarations: function () { return [ProgressBar]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ProgressBar]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [ProgressBar],\n                declarations: [ProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressBar, ProgressBarModule };\n\n//# sourceMappingURL=primeng-progressbar.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { SignupService } from '../signup.service';\r\nimport { EmployeePermissions } from '../../../Entities/EmployeePermissions';\r\nimport { EmployeeRoleElement } from '../../../Entities/EmployeeRoleElement';\r\nimport { ElementOperation } from '../../../Entities/ElementOperation';\r\n\r\n\r\n@Component({\r\n  selector: 'app-email-verification',\r\n  templateUrl: './email-verification.component.html',\r\n  styleUrls: ['./email-verification.component.css']\r\n})\r\nexport class EmailVerificationComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private signupService: SignupService, private router: Router) { }\r\n  loading: boolean = false;\r\n  message: string = \"\";\r\n  verified: boolean;\r\n  OperationsData: any[];\r\n  ElementsData: any[];\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var token = params.get(\"tokenId\");\r\n      console.log(token);\r\n      this.signupService.ValidateToken(token)\r\n        .subscribe(res => {\r\n          if (res.errorCode == 0) {\r\n            this.signupService.getElements(res.dataObj.companyInfo)\r\n              .subscribe((res1) => {\r\n                if (res1.errorCode == 0) {\r\n                  this.ElementsData = res1.dataObj;\r\n                  this.signupService.getOperations(res.dataObj.companyInfo).subscribe((res2) => {\r\n                    if (res2.errorCode == 0) {\r\n                      this.OperationsData = res2.dataObj;\r\n                      var empData = this.GetEmpData(res.dataObj);\r\n                      this.signupService.CreateEmployee(res.dataObj.companyInfo, empData).subscribe((res3) => {\r\n                        if (res3.errorCode == 0) {\r\n                          this.loading = false;\r\n                          this.message = \"Successfully verified\";\r\n                          this.verified = true;\r\n                          this.router.navigate(['login']);\r\n                        }\r\n                        else {\r\n                        }\r\n                      }, (err) => {\r\n                      });\r\n                    };\r\n                  });\r\n                }\r\n              });\r\n          }\r\n          else {\r\n            this.verified = false;\r\n            this.message = \"Failed to verified, please try again\";\r\n          }\r\n        }, error => {\r\n          this.loading = false;\r\n          this.verified = false;\r\n          console.log(error);\r\n          this.message = \"Failed to verified, please try again\";\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  GetEmpData(data) {\r\n    var Empobj = new EmployeePermissions();\r\n    Empobj.designationId = -1;\r\n    Empobj.departmentId = -1;\r\n    Empobj.employeeFname = data.name;\r\n    Empobj.employeeEmail = data.email;\r\n    Empobj.employeePassword = \"\";\r\n    Empobj.employeeCode = data.userId;\r\n    Empobj.employeeMname=\"\";\r\n    Empobj.gender=\"Male\";\r\n    Empobj.employeeMobileNo=\"12345\";\r\n    Empobj.employeeProfileImg=\"\";\r\n    Empobj.employeeElementMappingList = [];\r\n\r\n\r\n    for (let index = 0; index < this.ElementsData.length; index++) {\r\n      const ele = this.ElementsData[index];\r\n      var element = new EmployeeRoleElement();\r\n      element.elementId = ele.elementId;\r\n      element.employeeElementOprationList = [];\r\n      for (let index2 = 0; index2 < this.OperationsData.length; index2++) {\r\n        const ops = this.OperationsData[index2];\r\n        var opertaion = new ElementOperation();\r\n        opertaion.operationId = ops.operationId;\r\n        element.employeeElementOprationList.push(opertaion);\r\n      }\r\n      Empobj.employeeElementMappingList.push(element);\r\n    }\r\n    return Empobj;\r\n\r\n  }\r\n\r\n}\r\n","<div class=\" login-bg\" class=\"extraMargins\">\r\n\r\n    <div class=\"main-panel\">\r\n        <div class=\"login\">\r\n            <div class=\"welcome-heading\" style=\"text-align: center;\">\r\n                <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n                <br>\r\n                <br>\r\n                <div *ngIf=\"loading==true\">\r\n                    <div class=\"welcome-heading\" style=\"font-size: larger;\"><b>Verifying your account</b></div>\r\n                    <div style=\"text-align: center;\">\r\n                        <p-progressBar mode=\"indeterminate\"></p-progressBar>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"loading!=true\">\r\n                    <div class=\"welcome-heading\" style=\"font-size: larger;\"><b>{{message}}</b></div>\r\n                    <div style=\"text-align: center;\">\r\n                        <i *ngIf=\"verified==true\" class=\"fa fa-check-circle\" style=\"font-size:60px;color: #007775;\"></i>\r\n                        <i *ngIf=\"verified==false\" class=\"fa fa-times-circle\" style=\"font-size:60px;color:red\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"clearfix\"></div>\r\n                <div class=\"form-wrapper\">\r\n                \r\n                </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup.component';\r\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\r\n\r\nconst routes: Routes = [{ path: '', component: SignupComponent,data :{ Title:'' ,ShowHeader:false,ShowNavBar:false} },\r\n{ path: 'EmailVerification', component: EmailVerificationComponent,data :{ Title:'' ,ShowHeader:false,ShowNavBar:false} }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignupRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from '../../Services/layout.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SignupService } from './signup.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  SignupForm: FormGroup;\r\n  ShowValidationMessage: boolean = false;\r\n  ShowCompanyValidationMessage: boolean = false;\r\n  constructor(private layoutservice: LayoutService, private fb: FormBuilder, private signupService: SignupService\r\n    , private router: Router\r\n    , private messageService: MessageService\r\n  ) {\r\n    this.router.events.subscribe(\r\n      (event) => {\r\n        if (event instanceof NavigationEnd) {\r\n          this.ngOnInit();\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.SignupForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      companyName: ['', Validators.required],\r\n      companyWebsite:[''],\r\n      portalName: ['', Validators.required],\r\n      industryType: ['', Validators.required],\r\n      companySize:['', Validators.required],\r\n      adminMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern('[0-9]+')])],\r\n      termsCheckBox: [false]\r\n    });\r\n  }\r\n\r\n  OnSubmit = function (data) {\r\n\r\n\r\n\r\n    console.log(data.portalName);\r\n\r\n    var userData = {\r\n      userRole: \"ADMIN\",\r\n      companyInfo: data.portalName,\r\n      name: data.name,\r\n      password: data.password,\r\n      email: data.email\r\n    }\r\n\r\n    this.signupService.SignupFunction(userData).subscribe((res) => {\r\n      if (res.errorCode == 0) {\r\n        var company = {\r\n          companyName: data.companyName,\r\n          portalName: data.portalName,\r\n          industryType: data.industryType,\r\n          adminMobile: data.adminMobile,\r\n          adminEmail: data.email,\r\n          companyDomain: '',\r\n          contactPerson: res.dataObj.userId,\r\n          apiURLPrefix: data.companyWebsite,\r\n          companySize:data.companySize\r\n        }\r\n\r\n        this.signupService.addCompany(company).subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            this.messageService.add({ severity: 'success', summary: \"Comapny added successfully\" });\r\n            this.ShowValidationMessage = true;\r\n          }\r\n          else {\r\n            this.messageService.add({ severity: 'error', summary: res.errorMsg });\r\n          }\r\n        }, (err) => {\r\n          this.messageService.add({ severity: 'error', summary: \"Something went wrong, please try later\" });\r\n        })\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: res.errorMsg });\r\n      }\r\n    }, (error) => {\r\n      this.messageService.add({ severity: 'error', summary: \"Something went wrong, please try later\" });\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  checkPortalName(data)\r\n  {\r\n    this.signupService.CheckPortalName(data).subscribe((res)=>{\r\n      if(res.errorCode==0)\r\n      {\r\n        this.ShowCompanyValidationMessage=false;\r\n      }\r\n      else{\r\n          this.ShowCompanyValidationMessage=true;\r\n      }\r\n    }),\r\n    (err)=>{\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\" login-bg\">\r\n  <div class=\"overlay\">\r\n    <div class=\"sidebar\">\r\n      <div class=\"sidebar-wrapper\">\r\n        <ul class=\"nav\">\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"main-panel\">\r\n      <div class=\"login\" [ngClass]=\"{'extraMargin': ShowValidationMessage}\">\r\n        <div class=\"welcome-heading\">\r\n          <h3 class=\"heading-1 signuplh\">Start your Free Trial</h3>\r\n\r\n          <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n        </div>\r\n\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"form-wrapper\">\r\n          <form *ngIf=\"ShowValidationMessage==false\" [formGroup]=\"SignupForm\" (ngSubmit)=\"OnSubmit(SignupForm.value)\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Name</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Full Name\" formControlName=\"name\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['name'].valid&&(SignupForm.controls['name'].dirty || SignupForm.controls['name'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Name</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Email</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"email\" placeholder=\"Enter Your Email Address\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['email'].valid&&(SignupForm.controls['email'].dirty || SignupForm.controls['email'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Email</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Password</label>\r\n              <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter Your Password\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['password'].valid&&(SignupForm.controls['password'].dirty || SignupForm.controls['password'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Password</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Company Name *</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Company Name\"\r\n                formControlName=\"companyName\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['companyName'].valid&&(SignupForm.controls['companyName'].dirty || SignupForm.controls['companyName'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide company name</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Company Website *</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Company Website\"\r\n                formControlName=\"companyWebsite\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Unique Portal Name*</label>\r\n              <input type=\"text\" id=\"portal\" class=\"form-control\" placeholder=\"ex. gomapIndia\"\r\n                formControlName=\"portalName\" (blur)=\"checkPortalName(SignupForm.controls['portalName'].value)\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!ShowCompanyValidationMessage && !SignupForm.controls['portalName'].valid&&(SignupForm.controls['portalName'].dirty || SignupForm.controls['portalName'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide valid Portal Name</span>\r\n              <span class=\"error\"\r\n                *ngIf=\"ShowCompanyValidationMessage\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Portal name already exists, please enter a different name</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Industry *</label>\r\n              <select class=\"form-control\" formControlName=\"industryType\">\r\n                <option value=\"\">Select industry</option>\r\n                <option value=\"IT Services\">IT Services</option>\r\n                <option value=\"Finance\">Finance</option>\r\n                <option value=\"Manufacturing\">Manufacturing</option>\r\n                <option value=\"Hospitality\">Hospitality</option>\r\n                <option value=\"Health Care\">Health Care</option>\r\n              </select>\r\n              <span\r\n                *ngIf=\"!SignupForm.controls['industryType'].valid&&(SignupForm.controls['industryType'].dirty|| SignupForm.controls['industryType'].touched)\"\r\n                class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                select Industy type</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Company Size*</label>\r\n              <select class=\"form-control\" formControlName=\"companySize\">\r\n                <option value=\"\">Select Team Size</option>\r\n                <option value=\"1-50\">1-50</option>\r\n                <option value=\"51-150\">51-150</option>\r\n                <option value=\"151-250\">151-250</option>\r\n                <option value=\"251-500\">251-500</option>\r\n                <option value=\"500 and more\">500 and more</option>\r\n              </select>\r\n              <span\r\n                *ngIf=\"!SignupForm.controls['companySize'].valid&&(SignupForm.controls['companySize'].dirty|| SignupForm.controls['companySize'].touched)\"\r\n                class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Company Size</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Office Phone No *</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Mobile Number\"\r\n                formControlName=\"adminMobile\">\r\n              <span\r\n                *ngIf=\"!SignupForm.controls['adminMobile'].valid&&(SignupForm.controls['adminMobile'].dirty|| SignupForm.controls['adminMobile'].touched)\"\r\n                class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide valid phone No.</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <div class=\"checkbox\">\r\n                <input id=\"checkbox1\" type=\"checkbox\" formControlName=\"termsCheckBox\">\r\n                <label for=\"checkbox1\">I agree to the <a href=\"#\">Terms of services</a> and <a href=\"#\">Privacy\r\n                    Policy.</a>\r\n                </label>\r\n              </div><br>\r\n              <input type=\"submit\" name=\"submit\" class=\"btn btn-primary\"\r\n                [disabled]=\"!SignupForm.valid || !SignupForm.controls['termsCheckBox'].value\">\r\n            </div>\r\n            <div class=\"frpass\">I already have an account <a [routerLink]=\"['/login']\">Login</a></div>\r\n          </form>\r\n          <div *ngIf=\"ShowValidationMessage==true\" style=\"font-size: larger;text-align: center;font-weight: bolder;\">\r\n            <div>Successfully registered <br> please check your email for verification link</div>\r\n            <div style=\"text-align: center;\">\r\n              <i class=\"fa fa-check-circle\" style=\"font-size:60px;color: #007775;\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignupRoutingModule } from './signup-routing.module';\r\nimport { SignupComponent } from './signup.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\n\r\n@NgModule({\r\n  declarations: [SignupComponent, EmailVerificationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SignupRoutingModule,ReactiveFormsModule,ProgressBarModule\r\n  ]\r\n})\r\nexport class SignupModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { UserService } from '../../Services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupService {\r\n\r\n  url: string = environment.url;\r\n  constructor(private httpClient: HttpClient, private userService: UserService) { }\r\n\r\n  SignupFunction = function (data) {\r\n    return this.httpClient.post(this.url + environment.signup, data);\r\n  }\r\n\r\n  ValidateToken = function (token) {\r\n    return this.httpClient.get(this.url + environment.emailVerification + token);\r\n  }\r\n\r\n  addCompany = function (data) {\r\n    return this.httpClient.post(environment.url + environment.addCompany, data);\r\n  }\r\n\r\n  CreateEmployee = function (company, data) {\r\n    return this.httpClient.post(environment.urlPrefix + company + environment.urlSuffix + environment.AddEmployee, data)\r\n  }\r\n  getOperations = function (company) {\r\n    return this.httpClient.get(environment.urlPrefix + company + environment.urlSuffix + environment.getOperations);\r\n  }\r\n\r\n  getElements = function (company) {\r\n    return this.httpClient.get(environment.urlPrefix + company + environment.urlSuffix + environment.getElements);\r\n  }\r\n\r\n  CheckPortalName = function (name) {\r\n    return this.httpClient.get(environment.url+environment.validatePortalName+name)\r\n  }\r\n\r\n}\r\n"]}