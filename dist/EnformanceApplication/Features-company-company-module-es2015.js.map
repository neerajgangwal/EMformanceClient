{"version":3,"sources":["./src/app/Features/company/company-routing.module.ts","./src/app/Features/company/company.component.ts","./src/app/Features/company/company.component.html","./src/app/Features/company/company.module.ts","./src/app/Features/company/company.service.ts","./src/app/Features/company/update-company/update-company.component.ts","./src/app/Features/company/update-company/update-company.component.html"],"names":[],"mappings":"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","file":"Features-company-company-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompanyComponent } from './company.component';\r\nimport { UpdateCompanyComponent } from './update-company/update-company.component';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nconst routes: Routes = [{ path: '', component: CompanyComponent },\r\n\r\n{ path: 'update', pathMatch: 'full', component: UpdateCompanyComponent,data :{ Title:'' ,ShowHeader:false,ShowNavBar:false} }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes),\r\n    ReactiveFormsModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {CompanyService} from './company.service';\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.css']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n\r\n  constructor(private companyService:CompanyService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n}\r\n","<p>company works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';\r\nimport { CompanyComponent } from './company.component';\r\nimport { UpdateCompanyComponent } from './update-company/update-company.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyComponent, UpdateCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,ReactiveFormsModule\r\n  ]\r\n})\r\nexport class CompanyModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport { UserService } from 'src/app/Services/user.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  constructor(private httpClient:HttpClient ,private userService:UserService) { }\r\n\r\n  addCompany=function(data)\r\n  {\r\n    return this.httpClient.post(environment.url+environment.addCompany,data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, NgForm } from '@angular/forms';\r\nimport { CompanyService } from '../company.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { emit } from 'process';\r\n\r\n@Component({\r\n  selector: 'app-update-company',\r\n  templateUrl: './update-company.component.html',\r\n  styleUrls: ['./update-company.component.css']\r\n})\r\nexport class UpdateCompanyComponent implements OnInit {\r\n\r\n  CompanyForm: FormGroup;\r\n  LoginForm: FormGroup;\r\n  constructor(private fb: FormBuilder, private companyService: CompanyService, private router: Router, private route: ActivatedRoute) {\r\n    this.router.events.subscribe(\r\n      (event) => {\r\n             if (event instanceof NavigationEnd) {\r\n               this.ngOnInit();\r\n             }\r\n      });\r\n  \r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var id = params.get(\"userId\");\r\n      var email = params.get(\"emailId\");\r\n      this.CompanyForm = this.fb.group({\r\n        companyName: ['', Validators.required],\r\n        portalName: ['', [Validators.required,Validators.pattern('(https?://)([\\\\da-z.-]+)')]],\r\n        industryType: ['', Validators.required],\r\n        adminMobile: ['', Validators.compose([Validators.required, Validators.minLength(10),Validators.pattern('[0-9]+')])],\r\n        adminEmail: [email],\r\n        companyDomain: [''],\r\n        contactPerson: [id],\r\n        apiURLPrefix: ['']\r\n      });\r\n    });\r\n  }\r\n\r\n  OnSubmit = function (data) {\r\n    console.log(data);\r\n    this.companyService.addCompany(data).subscribe((res) => {\r\n      console.log(res);\r\n      if (res.errorCode == 0) {\r\n        this.router.navigateByUrl('/login');\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'company update failed', detail: 'Via MessageService' });\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"login-bg\">\r\n    <div class=\"overlay\">\r\n        <div class=\"main-panel\">\r\n            <div class=\"login\">\r\n                <div class=\"welcome-heading\">\r\n                    <h3 class=\"heading-1\">Company information\r\n                        <span class=\"text-left\">Help us setup your account</span></h3>\r\n\r\n                    <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n                </div>\r\n\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-wrapper\">\r\n                    <form [formGroup]=\"CompanyForm\" (ngSubmit)=\"OnSubmit(CompanyForm.value)\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Company Name *</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Company Name\"\r\n                                formControlName=\"companyName\">\r\n                            <span class=\"error\" *ngIf=\"!CompanyForm.controls['companyName'].valid&&(CompanyForm.controls['companyName'].dirty || CompanyForm.controls['companyName'].touched)\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                provide company name</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Company Website *</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Portal Name\"\r\n                                formControlName=\"portalName\">\r\n                            <span *ngIf=\"!CompanyForm.controls['portalName'].valid&&(CompanyForm.controls['portalName'].dirty|| CompanyForm.controls['portalName'].touched)\" class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                provide valid company Website</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Industry *</label>\r\n                            <div class=\"Industry\">\r\n                                <select class=\"form-control\" formControlName=\"industryType\">\r\n                                    <option value=\"\">Select industry</option>\r\n                                    <option value=\"IT Services\">IT Services</option>\r\n                                    <option value=\"Finance\">Finance</option>\r\n                                    <option value=\"Manufacturing\">Manufacturing</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Hospitality\">Hospitality</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Health Care\">Health Care</option>\r\n                                </select>\r\n                            </div>\r\n                            <span *ngIf=\"!CompanyForm.controls['industryType'].valid&&(CompanyForm.controls['industryType'].dirty|| CompanyForm.controls['industryType'].touched)\" class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                select Industy type</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Office Phone No *</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Mobile Number\"\r\n                                formControlName=\"adminMobile\">\r\n                                <span *ngIf=\"!CompanyForm.controls['adminMobile'].valid&&(CompanyForm.controls['adminMobile'].dirty|| CompanyForm.controls['adminMobile'].touched)\" class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                    provide valid phone No.</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <input type=\"submit\" name=\"submit\" value=\"Update\" class=\"btn btn-primary\" [disabled]=\"!CompanyForm.valid\" >\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}