{"version":3,"sources":["./src/app/Entities/UpdateElementOperation.ts","./src/app/Entities/UpdateEmployeePermissions.ts","./src/app/Entities/UpdateEmployeeRoleElement.ts","./src/app/Features/employee/create-employee/create-employee.component.ts","./src/app/Features/employee/create-employee/create-employee.component.html","./src/app/Features/employee/edit-employee/edit-employee.component.ts","./src/app/Features/employee/edit-employee/edit-employee.component.html","./src/app/Features/employee/employee-list/employee-list.component.ts","./src/app/Features/employee/employee-list/employee-list.component.html","./src/app/Features/employee/employee-routing.module.ts","./src/app/Features/employee/employee.component.ts","./src/app/Features/employee/employee.component.html","./src/app/Features/employee/employee.module.ts","./src/app/Features/employee/employee.service.ts","./src/app/Features/employee/view-employee/view-employee.component.ts","./src/app/Features/employee/view-employee/view-employee.component.html"],"names":[],"mappings":"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","file":"Features-employee-employee-module-es2015.js","sourcesContent":["export class ElementOperation\r\n{\r\n    operationId:number;\r\n    employeeElementOperationId:number;\r\n}\r\n","import {EmployeeRoleElement} from './UpdateEmployeeRoleElement';\r\n\r\nexport class EmployeePermissions\r\n{\r\n    departmentId:number;\r\n    employeeFname:string;\r\n    employeeMname:string;\r\n    employeeUserId:string;\r\n    employeeId:number;\r\n    designationId:number;\r\n    employeeEmail:string;\r\n    employeePassword:string;\r\n    employeeMobileNo:string;\r\n    employeeProfileImg:string;\r\n    employeeElementMappingList:EmployeeRoleElement[];\r\n    gender:string\r\n}\r\n","import {ElementOperation} from './UpdateElementOperation';\r\nexport class EmployeeRoleElement\r\n{\r\n    elementId:number;\r\n    employeeElementOprationList:ElementOperation[];\r\n    employeeElementMpgId:number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from '../../../Services/layout.service'\r\nimport { EmployeeService } from '../employee.service';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { EmployeePermissions } from 'src/app/Entities/EmployeePermissions';\r\nimport { EmployeeRoleElement } from 'src/app/Entities/EmployeeRoleElement';\r\nimport { ElementOperation } from 'src/app/Entities/ElementOperation';\r\nimport { RolePermissions } from 'src/app/Entities/RolePermissions';\r\nimport { RoleElement } from 'src/app/Entities/RoleElement';\r\nimport { UserService } from 'src/app/Services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-employee',\r\n  templateUrl: './create-employee.component.html',\r\n  styleUrls: ['./create-employee.component.css']\r\n})\r\nexport class CreateEmployeeComponent implements OnInit {\r\n  EmployeeForm: FormGroup\r\n  DepartmentList: any[];\r\n  DesignationList: any[];\r\n  OperationsData: any[];\r\n  ElementsData: any[];\r\n  RolePermissions: RoleElement[] = [];\r\n  PermissionsData: Map<number, number[]>\r\n\r\n  constructor(private layoutService: LayoutService, private employeeService: EmployeeService, private fb: FormBuilder,\r\n    private messageService: MessageService,\r\n    private userService: UserService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  CreateHashMap(data) {\r\n    this.PermissionsData = new Map<number, number[]>();\r\n    for (let index = 0; index < data.length; index++) {\r\n      const element = data[index];\r\n      var operations = [];\r\n      for (let index2 = 0; index2 < element.roleElementOprationList.length; index2++) {\r\n        const operation = element.roleElementOprationList[index2];\r\n        operations.push(operation.operationId);\r\n      }\r\n      this.PermissionsData.set(element.elementId, operations);\r\n    }\r\n  }\r\n\r\n  CheckPermission(elementId, operationId) {\r\n    if (this.PermissionsData) {\r\n      var list = this.PermissionsData.get(elementId);\r\n      if (list) {\r\n        if (list.indexOf(operationId) > -1) {\r\n          return true;\r\n        };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.employeeService.GetDepartments().subscribe((res) => {\r\n      this.DepartmentList = res.dataObj;\r\n      console.log(this.DepartmentList);\r\n    });\r\n    this.employeeService.getElements()\r\n      .subscribe((res) => {\r\n        if (res.errorCode == 0) {\r\n          this.ElementsData = res.dataObj;\r\n          this.employeeService.getOperations().subscribe((res2) => {\r\n            if (res2.errorCode == 0) {\r\n              this.OperationsData = res2.dataObj;\r\n              this.InitializeForm();\r\n              console.log(this.EmployeeForm.value);\r\n            };\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  InitializeForm = function () {\r\n    if (this.EmployeeForm) {\r\n      var employee = this.EmployeeForm.value;\r\n      this.EmployeeForm = this.fb.group({\r\n        designationId: [employee.designationId, Validators.required],\r\n        departmentId: [employee.departmentId, Validators.required],\r\n        employeeFname: [employee.employeeFname, Validators.required],\r\n        employeeMname: [employee.employeeMname, Validators.required],\r\n        employeeEmail: [employee.employeeEmail, [Validators.required, Validators.email]],\r\n        employeePassword: [employee.employeePassword, Validators.required],\r\n        employeeMobileNo: [employee.employeeMobileNo, Validators.required],\r\n        employeeProfileImg: [employee.employeeProfileImg],\r\n        employeeUserId: [employee.employeeUserId, Validators.required],\r\n        gender: [employee.gender, Validators.required],\r\n        employeeElementMappingList: this.Elements\r\n      });\r\n    }\r\n    else {\r\n      this.EmployeeForm = this.fb.group({\r\n        designationId: ['', Validators.required],\r\n        departmentId: ['', Validators.required],\r\n        employeeFname: ['', Validators.required],\r\n        employeeMname: ['', Validators.required],\r\n        employeeEmail: ['', [Validators.required, Validators.email]],\r\n        employeePassword: ['', Validators.required],\r\n        employeeMobileNo: ['', Validators.required],\r\n        employeeProfileImg: [''],\r\n        employeeUserId: ['', Validators.required],\r\n        gender: ['Male', Validators.required],\r\n        employeeElementMappingList: this.Elements\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  SelectRoleChanged(id) {\r\n    this.employeeService.getRolePermissions(id).subscribe(res => {\r\n      this.CreateHashMap(res.dataObj.designationElementMappingList);\r\n      console.log(id);\r\n      this.InitializeForm();\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  get Elements(): FormArray {\r\n    var elementsArray = this.fb.array([]);\r\n    this.ElementsData.forEach(element => {\r\n      elementsArray.push(this.fb.group({\r\n        elementId: [element.elementId],\r\n        elementName: [element.elementName],\r\n        employeeElementOperationList: this.Operations(element.elementId)\r\n      }))\r\n    })\r\n    return elementsArray;\r\n  }\r\n\r\n  Operations(elementId): FormArray {\r\n    var operationsArray = this.fb.array([]);\r\n    this.OperationsData.forEach(element => {\r\n      operationsArray.push(this.fb.group({\r\n        operationId: [element.operationId],\r\n        operationName: [element.operationName],\r\n        value: [this.CheckPermission(elementId, element.operationId)],\r\n      }))\r\n    });\r\n    return operationsArray;\r\n  };\r\n\r\n  get ElementsList() {\r\n    return this.EmployeeForm.get('employeeElementMappingList') as FormArray;\r\n  }\r\n\r\n  ElementOperationsList(elementIndex) {\r\n    return this.ElementsList.controls[elementIndex].get('employeeElementOperationList') as FormArray;\r\n  }\r\n\r\n\r\n  SelectDepartmentChanged = function (id) {\r\n    this.employeeService.GetRolesForDepartmentId(id).subscribe((res) => {\r\n      this.EmployeeForm.patchValue({\r\n        designationId: ''\r\n      });\r\n      this.DesignationList = res.dataObj;\r\n      console.log(this.DesignationList);\r\n    });\r\n  }\r\n\r\n  CreateEmployee = function (data) {\r\n    console.log(\"TestData\");\r\n    console.log(data);\r\n    var convertedData = this.MapDataToEntity(data);\r\n    this.employeeService.CreateEmployee(convertedData).subscribe((res) => {\r\n      console.log(res);\r\n      if (res.errorCode == 0) {\r\n        console.log(\"success\");\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully created employee' });\r\n        this.resetForm();\r\n        this.CancelButtonClick();\r\n        this.EmployeeForm.patchValue({\r\n          gender: 'Male'\r\n        });\r\n        var signupData = {\r\n          userRole: \"NON-ADMIN\",\r\n          companyInfo: this.userService.LoggedInUser.CompanyInfo,\r\n          name: data.employeeFname,\r\n          password: data.employeePassword,\r\n          email: data.employeeEmail\r\n        }\r\n        this.employeeService.CreateSignUp(signupData).subscribe((res2) => {\r\n          if (res2.errorCode == 0) {\r\n            this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully created employee signup' });\r\n          }\r\n        })\r\n\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n      }\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed , please try again\" });\r\n    })\r\n  }\r\n\r\n  MapDataToEntity = function (data) {\r\n    var Empobj = new EmployeePermissions();\r\n    Empobj.designationId = data.designationId;\r\n    Empobj.departmentId = data.departmentId;\r\n    Empobj.employeeFname = data.employeeFname;\r\n    Empobj.employeeMname = data.employeeMname;\r\n    Empobj.employeeEmail = data.employeeEmail;\r\n    Empobj.employeeMobileNo = data.employeeMobileNo;\r\n    Empobj.employeePassword = data.employeePassword;\r\n    Empobj.employeeProfileImg = data.employeeProfileImg;\r\n    Empobj.employeeCode = data.employeeId;\r\n    Empobj.gender = data.gender;\r\n    Empobj.employeeElementMappingList = [];\r\n\r\n    data.employeeElementMappingList.forEach(elementdata => {\r\n      var element = new EmployeeRoleElement();\r\n      element.elementId = elementdata.elementId;\r\n      element.employeeElementOprationList = [];\r\n      elementdata.employeeElementOperationList.forEach(operationData => {\r\n        if (operationData.value == true) {\r\n          var opertaion = new ElementOperation();\r\n          opertaion.operationId = operationData.operationId;\r\n          element.employeeElementOprationList.push(opertaion);\r\n        }\r\n      });\r\n      Empobj.employeeElementMappingList.push(element);\r\n    });\r\n    return Empobj;\r\n  }\r\n\r\n  resetForm = function () {\r\n    this.EmployeeForm.reset();\r\n    this.PermissionsData = null;\r\n    this.InitializeForm();\r\n  }\r\n  RadioButtonClick = function (data) {\r\n    this.EmployeeForm.patchValue({\r\n      gender: data\r\n    })\r\n  }\r\n  CancelButtonClick(){\r\n    this.router.navigateByUrl(\"/employee/list\");\r\n   }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n  <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"form-container\" [formGroup]=\"EmployeeForm\" *ngIf=\"EmployeeForm!=null\">\r\n        <div class=\"form-section\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"card wizard-card\" data-color=\"orange\" id=\"wizardProfile\">\r\n\r\n              <div class=\"picture-container\">\r\n                <div class=\"picture\">\r\n                  <img src=\"assets/img/default-avatar.jpg\" class=\"picture-src\" id=\"wizardPicturePreview\" title=\"\">\r\n                  <input type=\"file\" id=\"wizard-picture\" formControlName=\"employeeProfileImg\">\r\n                </div>\r\n                <h6>Upload Picture</h6>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">First Name*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeFname\"\r\n                placeholder=\"Enter your first name\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeFname'].valid&&(EmployeeForm.controls['employeeFname'].dirty|| EmployeeForm.controls['employeeFname'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide first\r\n                name</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n\r\n              <label for=\"\">Last Name*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeMname\" placeholder=\"Enter Last Name\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeMname'].valid&&(EmployeeForm.controls['employeeMname'].dirty|| EmployeeForm.controls['employeeMname'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide last\r\n                name</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n\r\n              <label for=\"\">Email Address*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeEmail\" placeholder=\"Enter Email Address\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeEmail'].valid&&(EmployeeForm.controls['employeeEmail'].dirty|| EmployeeForm.controls['employeeEmail'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid email\r\n                address</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Password*</label>\r\n              <input type=\"password\" class=\"form-control\" formControlName=\"employeePassword\"\r\n                placeholder=\"Enter Password\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeePassword'].valid&&(EmployeeForm.controls['employeePassword'].dirty|| EmployeeForm.controls['employeePassword'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                password</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Employee Id*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeUserId\" placeholder=\"Enter Employee Id\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeUserId'].valid&&(EmployeeForm.controls['employeeUserId'].dirty|| EmployeeForm.controls['employeeUserId'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                employeeId</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Select Department*</label>\r\n              <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"departmentId\"\r\n                (change)=\"SelectDepartmentChanged(EmployeeForm.controls['departmentId'].value)\">\r\n                <option value=\"\">Select Department</option>\r\n                <option *ngFor=\"let department of DepartmentList\" value=\"{{department.departmentId}}\">\r\n                  {{department.departmentName}}</option>\r\n              </select>\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['departmentId'].valid&&(EmployeeForm.controls['departmentId'].dirty|| EmployeeForm.controls['departmentId'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select\r\n                department</span>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Phone Number*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeMobileNo\"\r\n                placeholder=\"Enter Phone Number\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeMobileNo'].valid&&(EmployeeForm.controls['employeeMobileNo'].dirty|| EmployeeForm.controls['employeeMobileNo'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                mobile number</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Select Role*</label>\r\n              <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"designationId\"\r\n                (change)=\"SelectRoleChanged(EmployeeForm.controls['designationId'].value)\"\r\n               >\r\n                <option value=\"\">Select Roles</option>\r\n                <option *ngFor=\"let designation of DesignationList\" value=\"{{designation.designationId}}\">\r\n                  {{designation.designationName}}</option>\r\n              </select>\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['designationId'].valid&&(EmployeeForm.controls['designationId'].dirty|| EmployeeForm.controls['designationId'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select role</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"fun\" class=\"control-label text-right\">Gender*</label>\r\n              <div class=\"input-group\">\r\n                <div id=\"radioBtn\" class=\"btn-group\">\r\n                  <a class=\"btn btn-primary gender btn-sm active\" data-toggle=\"fun\"\r\n                    [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                    [class.notActive]=\"EmployeeForm.controls['gender'].value!='Male'\" data-title=\"Y\"\r\n                    (click)=\"RadioButtonClick('Male')\">Male</a>\r\n                  <a class=\"btn btn-primary gender btn-sm notActive\" (click)=\"RadioButtonClick('Female')\"\r\n                    data-toggle=\"fun\" [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                    [class.notActive]=\"EmployeeForm.controls['gender'].value!='Female'\" data-title=\"X\">Female</a>\r\n                  <a class=\"btn btn-primary btn-sm gender notActive\" (click)=\"RadioButtonClick('Other')\"\r\n                    data-toggle=\"fun\" [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                    [class.notActive]=\"EmployeeForm.controls['gender'].value!='Other'\" data-title=\"N\">Other</a>\r\n                </div>\r\n                <input type=\"hidden\" name=\"fun\" id=\"fun\" formControlName=\"gender\">\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"form-container\">\r\n          <div class=\"form-section\">\r\n            <div class=\"col-lg-12 permission-heading\">\r\n              <h4>Select Permission</h4>\r\n            </div>\r\n            <div class=\"permission-section\" formArrayName=\"employeeElementMappingList\">\r\n              <div class=\"col-lg-6\" *ngFor=\"let element of ElementsList.controls;\r\n                            let elementIndex = index\">\r\n                <div class=\"rolesection\" [formGroupName]=\"elementIndex\">\r\n                  <div class=\"form-group\">\r\n                    <label style=\"width: 30%;\" for=\"\"\r\n                      class=\"pull-left headtxt\">{{element.controls.elementName.value}}</label>\r\n                    <div class=\"material-switch\" formArrayName=\"employeeElementOperationList\" *ngFor=\"let operation of ElementOperationsList(elementIndex).controls;\r\n                                        let operationIndex = index\">\r\n                      <ng-container [formGroupName]=\"operationIndex\">\r\n                        <span>{{operation.controls.operationName.value}}</span><br>\r\n                        <input id=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                          name=\"someSwitchOption001\" formControlName=\"value\" type=\"checkbox\" />\r\n                        <label for=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                          class=\"label-default\"></label>\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-3 pull-right\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn btn-primary\" (click)=\"CancelButtonClick()\">\r\n            <input type=\"submit\" value=\"Create Employee\" class=\"subbtn btn btn-primary\" [disabled]=\"!EmployeeForm.valid\"\r\n              (click)=\"CreateEmployee(EmployeeForm.value)\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from '../../../Services/layout.service'\r\nimport { EmployeeService } from '../employee.service';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { EmployeePermissions } from 'src/app/Entities/UpdateEmployeePermissions';\r\nimport { EmployeeRoleElement } from 'src/app/Entities/UpdateEmployeeRoleElement';\r\nimport { ElementOperation } from 'src/app/Entities/UpdateElementOperation';\r\nimport { RolePermissions } from 'src/app/Entities/RolePermissions';\r\nimport { RoleElement } from 'src/app/Entities/RoleElement';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee',\r\n  templateUrl: './edit-employee.component.html',\r\n  styleUrls: ['./edit-employee.component.css']\r\n})\r\nexport class EditEmployeeComponent implements OnInit {\r\n  EmployeeForm: FormGroup\r\n  DepartmentList: any[];\r\n  DesignationList: any[];\r\n  OperationsData: any[];\r\n  ElementsData: any[];\r\n  RolePermissions: RoleElement[] = [];\r\n  PermissionsData: Map<number, number[]>\r\n  ElementIdMapping:Map<number,number>\r\n  OPerationIdMapping:Map<string,number>\r\n\r\n  constructor(private layoutService: LayoutService, private employeeService: EmployeeService,\r\n     private fb: FormBuilder, private messageService: MessageService, private route: ActivatedRoute, private router:Router) { }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var id = params.get(\"id\");\r\n      this.employeeService.getElements()\r\n        .subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            this.ElementsData = res.dataObj;\r\n            this.employeeService.getOperations().subscribe((res2) => {\r\n              if (res2.errorCode == 0) {\r\n                this.OperationsData = res2.dataObj;\r\n\r\n                this.employeeService.GetEmployeeById(id).subscribe(res => {\r\n                  var employee = res.dataObj[0];\r\n                  this.employeeService.getEmployeeElementMapping(id).subscribe(res => {\r\n                    this.CreateHashMap(res.dataObj.employeeElementMappingList)\r\n                    this.InitializeForm(employee);\r\n                  })\r\n                })\r\n              };\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  InitializeForm = function (employee) {\r\n\r\n      this.EmployeeForm = this.fb.group({\r\n        employeeId:[employee.employeeId, Validators.required],\r\n        designationId: [employee.designationId, Validators.required],\r\n        departmentId: [employee.departmentId, Validators.required],\r\n        employeeFname: [employee.employeeFname, Validators.required],\r\n        employeeMname: [employee.employeeMname, Validators.required],\r\n        employeeEmail: [employee.employeeEmail, [Validators.required, Validators.email]],\r\n        employeePassword: [employee.employeePassword, Validators.required],\r\n        employeeMobileNo: [employee.employeeMobileNo, Validators.required],\r\n        employeeProfileImg: [employee.employeeProfileImg],\r\n        employeeUserId: [employee.employeeUserId, Validators.required],\r\n        gender: [employee.gender, Validators.required],\r\n        employeeElementMappingList: this.Elements\r\n      });\r\n\r\n\r\n    this.employeeService.GetDepartments().subscribe((res) => {\r\n      this.DepartmentList = res.dataObj;\r\n      console.log(this.DepartmentList);\r\n    });\r\n\r\n    this.SelectDepartmentChanged(employee.departmentId);\r\n  }\r\n\r\n\r\n  SelectRoleChanged(id) {\r\n  }\r\n\r\n  CreateHashMap(data) {\r\n    this.PermissionsData = new Map<number, number[]>();\r\n    this.ElementIdMapping=new Map<number,number>();\r\n    this.OPerationIdMapping=new Map<string,number>();\r\n    for (let index = 0; index < data.length; index++) {\r\n      const element = data[index];\r\n      this.ElementIdMapping.set(element.elementId,element.employeeElementMpgId);\r\n      var operations = [];\r\n      for (let index2 = 0; index2 < element.employeeElementOprationList.length; index2++) {\r\n        const operation = element.employeeElementOprationList[index2];\r\n        this.OPerationIdMapping.set(element.elementId+'-'+operation.operationId,operation.employeeElementOperationId);\r\n        operations.push(operation.operationId);\r\n      }\r\n      this.PermissionsData.set(element.elementId, operations);\r\n    }\r\n  }\r\n\r\n  CheckPermission(elementId, operationId) {\r\n    if (this.PermissionsData) {\r\n      var list = this.PermissionsData.get(elementId);\r\n      if (list) {\r\n        if (list.indexOf(operationId) > -1) {\r\n          return true;\r\n        };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get Elements(): FormArray {\r\n    var elementsArray = this.fb.array([]);\r\n    this.ElementsData.forEach(element => {\r\n      elementsArray.push(this.fb.group({\r\n        elementId: [element.elementId],\r\n        elementName: [element.elementName],\r\n        employeeElementOperationList: this.Operations(element.elementId)\r\n      }))\r\n    })\r\n    return elementsArray;\r\n  }\r\n\r\n  Operations(elementId): FormArray {\r\n    var operationsArray = this.fb.array([]);\r\n    this.OperationsData.forEach(element => {\r\n      operationsArray.push(this.fb.group({\r\n        operationId: [element.operationId],\r\n        operationName: [element.operationName],\r\n        value: [this.CheckPermission(elementId, element.operationId)],\r\n      }))\r\n    });\r\n    return operationsArray;\r\n  };\r\n\r\n  get ElementsList() {\r\n    return this.EmployeeForm.get('employeeElementMappingList') as FormArray;\r\n  }\r\n\r\n  ElementOperationsList(elementIndex) {\r\n    return this.ElementsList.controls[elementIndex].get('employeeElementOperationList') as FormArray;\r\n  }\r\n\r\n\r\n  SelectDepartmentChanged = function (id) {\r\n    this.employeeService.GetRolesForDepartmentId(id).subscribe((res) => {\r\n      this.EmployeeForm.patchValue({\r\n        designationId: ''\r\n      });\r\n      this.DesignationList = res.dataObj;\r\n      console.log(this.DesignationList);\r\n    });\r\n  }\r\n\r\n UpdateEmployee = function (data) {\r\n    console.log(\"TestData\");\r\n    console.log(data);\r\n    var convertedData = this.MapDataToEntity(data);\r\n    this.employeeService.UpdateEmployee(convertedData).subscribe((res) => {\r\n      console.log(res);\r\n      if (res.errorCode == 0) {\r\n        console.log(\"success\");\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully created employee' });\r\n        this.router.navigate(['employee', 'list']); this.resetForm();\r\n        this.EmployeeForm.patchValue({\r\n          gender: 'Male'\r\n        });\r\n        this.router.navigateByUrl(\"/employee/list\");\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n      }\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed , please try again\" });\r\n    })\r\n  }\r\n\r\n  MapDataToEntity = function (data) {\r\n    var Empobj = new EmployeePermissions();\r\n    Empobj.designationId = data.designationId;\r\n    Empobj.departmentId = data.departmentId;\r\n    Empobj.employeeFname = data.employeeFname;\r\n    Empobj.employeeMname = data.employeeMname;\r\n    Empobj.employeeEmail = data.employeeEmail;\r\n    Empobj.employeeMobileNo = data.employeeMobileNo;\r\n    Empobj.employeePassword = data.employeePassword;\r\n    Empobj.employeeProfileImg = data.employeeProfileImg;\r\n    Empobj.employeeUserId = data.employeeCode;\r\n    Empobj.employeeId=data.employeeId\r\n    Empobj.gender = data.gender;\r\n    Empobj.employeeElementMappingList = [];\r\n\r\n    data.employeeElementMappingList.forEach(elementdata => {\r\n      var element = new EmployeeRoleElement();\r\n      element.elementId = elementdata.elementId;\r\n      element.employeeElementMpgId=this.ElementIdMapping.get(elementdata.elementId);\r\n      element.employeeElementOprationList = [];\r\n      elementdata.employeeElementOperationList.forEach(operationData => {\r\n        if (operationData.value == true) {\r\n          var opertaion = new ElementOperation();\r\n          opertaion.operationId = operationData.operationId;\r\n          opertaion.employeeElementOperationId=this.OPerationIdMapping.get(elementdata.elementId+'-'+operationData.operationId);\r\n          element.employeeElementOprationList.push(opertaion);\r\n        }\r\n      });\r\n      Empobj.employeeElementMappingList.push(element);\r\n    });\r\n    return Empobj;\r\n  }\r\n\r\n  resetForm = function () {\r\n    this.router.navigate(['employee', 'list']);\r\n    this.EmployeeForm.reset();\r\n    this.InitializeForm();\r\n  }\r\n  RadioButtonClick = function (data) {\r\n    this.EmployeeForm.patchValue({\r\n      gender: data\r\n    })\r\n  }\r\n\r\n  CancelButtonClick(){\r\n    this.router.navigateByUrl(\"/employee/list\");\r\n   }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n    <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"form-container\" [formGroup]=\"EmployeeForm\" *ngIf=\"EmployeeForm!=null\">\r\n                <div class=\"form-section\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"card wizard-card\" data-color=\"orange\" id=\"wizardProfile\">\r\n\r\n                            <div class=\"picture-container\">\r\n                                <div class=\"picture\">\r\n                                    <img src=\"assets/img/default-avatar.jpg\" class=\"picture-src\"\r\n                                        id=\"wizardPicturePreview\" title=\"\">\r\n                                    <input type=\"file\" id=\"wizard-picture\" formControlName=\"employeeProfileImg\">\r\n                                </div>\r\n                                <h6>upload Picture</h6>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">First Name</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeFname\"\r\n                                placeholder=\"Enter your first name\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeFname'].valid&&(EmployeeForm.controls['employeeFname'].dirty|| EmployeeForm.controls['employeeFname'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide first\r\n                                name</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"\">Last Name</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeMname\"\r\n                                placeholder=\"Enter Last Name\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeMname'].valid&&(EmployeeForm.controls['employeeMname'].dirty|| EmployeeForm.controls['employeeMname'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide last\r\n                                name</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"\">Email Address</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeEmail\"\r\n                                placeholder=\"Enter Email Address\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeEmail'].valid&&(EmployeeForm.controls['employeeEmail'].dirty|| EmployeeForm.controls['employeeEmail'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid email\r\n                                address</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" formControlName=\"employeePassword\"\r\n                                placeholder=\"Enter Password\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeePassword'].valid&&(EmployeeForm.controls['employeePassword'].dirty|| EmployeeForm.controls['employeePassword'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                                password</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Employee Id</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeUserId\"\r\n                                placeholder=\"Enter Employee Id\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeUserId'].valid&&(EmployeeForm.controls['employeeUserId'].dirty|| EmployeeForm.controls['employeeUserId'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                                employeeId</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Select Department</label>\r\n                            <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"departmentId\"\r\n                                (change)=\"SelectDepartmentChanged(EmployeeForm.controls['departmentId'].value)\">\r\n                                <option value=\"\">Select Department</option>\r\n                                <option *ngFor=\"let department of DepartmentList\" value=\"{{department.departmentId}}\">\r\n                                    {{department.departmentName}}</option>\r\n                            </select>\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['departmentId'].valid&&(EmployeeForm.controls['departmentId'].dirty|| EmployeeForm.controls['departmentId'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select\r\n                                department</span>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Phone Number</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeMobileNo\"\r\n                                placeholder=\"Enter Phone Number\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeMobileNo'].valid&&(EmployeeForm.controls['employeeMobileNo'].dirty|| EmployeeForm.controls['employeeMobileNo'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                                mobile number</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Select Role</label>\r\n                            <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"designationId\"\r\n                                (change)=\"SelectRoleChanged(EmployeeForm.controls['designationId'].value)\"\r\n                                [disabled]=\"EmployeeForm.controls['departmentId'].value==''\">\r\n                                <option value=\"\">Select Roles</option>\r\n                                <option *ngFor=\"let designation of DesignationList\"\r\n                                    value=\"{{designation.designationId}}\">{{designation.designationName}}</option>\r\n                            </select>\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['designationId'].valid&&(EmployeeForm.controls['designationId'].dirty|| EmployeeForm.controls['designationId'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select role</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"fun\" class=\"control-label text-right\">Gender</label>\r\n                            <div class=\"input-group\">\r\n                                <div id=\"radioBtn\" class=\"btn-group\">\r\n                                    <a class=\"btn btn-primary gender btn-sm active\" data-toggle=\"fun\"\r\n                                        [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                                        [class.notActive]=\"EmployeeForm.controls['gender'].value!='Male'\" data-title=\"Y\"\r\n                                        (click)=\"RadioButtonClick('Male')\">Male</a>\r\n                                    <a class=\"btn btn-primary gender btn-sm notActive\"\r\n                                        (click)=\"RadioButtonClick('Female')\" data-toggle=\"fun\"\r\n                                        [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                                        [class.notActive]=\"EmployeeForm.controls['gender'].value!='Female'\"\r\n                                        data-title=\"X\">Female</a>\r\n                                    <a class=\"btn btn-primary btn-sm gender notActive\"\r\n                                        (click)=\"RadioButtonClick('Other')\" data-toggle=\"fun\"\r\n                                        [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                                        [class.notActive]=\"EmployeeForm.controls['gender'].value!='Other'\"\r\n                                        data-title=\"N\">Other</a>\r\n                                </div>\r\n                                <input type=\"hidden\" name=\"fun\" id=\"fun\" formControlName=\"gender\">\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-container\">\r\n                    <div class=\"form-section\">\r\n                        <div class=\"col-lg-12 permission-heading\">\r\n                            <h4>Select Permission</h4>\r\n                        </div>\r\n                        <div class=\"permission-section\" formArrayName=\"employeeElementMappingList\">\r\n                            <div class=\"col-lg-6\" *ngFor=\"let element of ElementsList.controls;\r\n                            let elementIndex = index\">\r\n                                <div class=\"rolesection\" [formGroupName]=\"elementIndex\">\r\n                                    <div class=\"form-group\">\r\n                                        <label style=\"width: 30%;\" for=\"\"\r\n                                            class=\"pull-left headtxt\">{{element.controls.elementName.value}}</label>\r\n                                        <div class=\"material-switch\" formArrayName=\"employeeElementOperationList\"\r\n                                            *ngFor=\"let operation of ElementOperationsList(elementIndex).controls;\r\n                                        let operationIndex = index\">\r\n                                            <ng-container [formGroupName]=\"operationIndex\">\r\n                                                <span>{{operation.controls.operationName.value}}</span><br>\r\n                                                <input\r\n                                                    id=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                                                    name=\"someSwitchOption001\" formControlName=\"value\"\r\n                                                    type=\"checkbox\" />\r\n                                                <label\r\n                                                    for=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                                                    class=\"label-default\"></label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3 pull-right\">\r\n                      <input type=\"button\" value=\"Cancel\" class=\"btn btn-primary\"\r\n          (click)=\"CancelButtonClick()\">\r\n                        <input type=\"submit\" value=\"Save Employee\" class=\"subbtn btn btn-primary\"\r\n                            (click)=\"UpdateEmployee(EmployeeForm.value)\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../employee.service';\r\nimport { LayoutService } from '../../../Services/layout.service';\r\nimport { SearchService } from '../../../Services/search.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport {UserService} from '../../../Services/user.service'\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css']\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n\r\n  EmployeeList: any[];\r\n  SearchResults: any[];\r\n  loading: true;\r\n  FilterKey: string;\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n    private layoutservice: LayoutService,\r\n    public searchSerrvice: SearchService,\r\n    private messageService: MessageService,\r\n    public  userService:UserService,\r\n    private router:Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchSerrvice.SetSource(null);\r\n    this.layoutservice.UpdateLayout(true, true, true, true);\r\n    this.employeeService.GetEmployeeData().subscribe((res) => {\r\n      this.EmployeeList = res.dataObj;\r\n      this.EmployeeList.forEach((element) => {\r\n        element.FullName = element.employee.employeeFname + \" \" + element.employee.employeeMname;\r\n      })\r\n      console.log(this.EmployeeList);\r\n      this.SearchResults=this.EmployeeList;\r\n      this.FilterKey = \"FullName\";\r\n    });\r\n\r\n  }\r\n\r\n  deleteIconClicked=function(data)\r\n  {\r\n    console.log(\"some data \"+data.employee.employeeId);\r\n    console.log(\"id \"+data.employeeId);\r\n    this.employeeService.deleteEmployee(data.employee.employeeId).subscribe((res)=>\r\n    {\r\n      if(res.errorCode==0)\r\n      {\r\n      this.EmployeeList.splice(this.EmployeeList.indexOf(data), 1);\r\n\r\n      this.SearchResults = this.EmployeeList;\r\n      this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Employee deleted' });\r\n      }\r\n      else{\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n      }\r\n    }\r\n    ,(err)=>{\r\n      console.log(err);\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Something went wrong\" });\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  editEmployeeIconClicked(id)\r\n  {\r\n    this.router.navigate(['employee', 'edit'], { queryParams: { 'id': id } });\r\n  }\r\n\r\n  viewIconClicked(id)\r\n  {\r\n    this.router.navigate(['employee', 'view'], { queryParams: { 'id': id } });\r\n  }\r\n\r\n\r\n\r\n  public FilterData = function (event) {\r\n    var temp = this.EmployeeList\r\n    var data = event.target.value;\r\n    console.log(data);\r\n    console.log(temp);\r\n\r\n    this.SearchResults = temp.filter(item => {\r\n      console.log(item);\r\n      console.log(item[this.FilterKey]);\r\n      console.log(item[this.FilterKey].toLowerCase().startsWith(data.toLowerCase()));\r\n      return item[this.FilterKey].toLowerCase().includes(data.toLowerCase());\r\n    }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n\t<div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n\t\t<div class=\"container-fluid\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-md-4\">\r\n\t\t\t\t\t<div class=\"search-form\">\r\n\t\t\t\t\t\t<i class=\"fa fa-search\"></i>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Search by name\" (input)=\"FilterData($event)\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t\t<div class=\"emlist\">\r\n\t\t\t\t<ul class=\"team-member team-listvew\">\r\n\t\t\t\t\t<li class=\"list-heading\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tEmployee Name\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>Department</li>\r\n\t\t\t\t\t\t\t<li>Designation </li>\r\n\t\t\t\t\t\t\t<li>Actions </li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"list-heading list-content\" *ngFor=\"let data of SearchResults\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<div class=\"team-thumb\"></div>\r\n\t\t\t\t\t\t\t\t<h4>{{data.employee.employeeFname+\" \"+data.employee.employeeMname}}\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\">{{data.employee.employeeEmail}}</a></h4>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>{{data.department.departmentName}}</li>\r\n\t\t\t\t\t\t\t<li>{{data.designation.designationName}}</li>\r\n\t\t\t\t\t\t\t<li>\r\n\r\n\t\t\t\t\t\t\t\t<i class=\"icon-View\" *ngIf=\"userService.CheckPermission(userService.Elements.Employee,userService.Operations.View)\" (click)=\"viewIconClicked(data.employee.employeeId)\"></i>\r\n\t\t\t\t\t\t\t\t<i class=\"icon-edit\" *ngIf=\"userService.CheckPermission(userService.Elements.Employee,userService.Operations.Edit)\" (click)=\"editEmployeeIconClicked(data.employee.employeeId)\"></i>\r\n\t\t\t\t\t\t\t\t<i class=\"icon-Delete\" *ngIf=\"userService.CheckPermission(userService.Elements.Employee,userService.Operations.Delete)\" (click)=\"deleteIconClicked(data)\"></i>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\t<!-- <div class=\"slide-popup\" id=\"task-description\">\r\n\t<div class=\"slide-close\">\r\n\t\t<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n\t</div>\r\n\t<div class=\"slide-wrapper\">\r\n\t\t<div class=\"slide-content\">\r\n\t\t\t<h3>Create Team</h3>\r\n\t\t\t<form>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"\">select project</label>\r\n\t\t\t\t\t<select name=\"\" id=\"#\" class=\"form-control\">\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"\">select team member</label>\r\n\t\t\t\t\t<div class=\"selectwith-button\">\r\n\t\t\t\t\t\t<div class=\"custom-select-wrapper\">\r\n\t\t\t\t\t\t\t<div class=\"custom-select\">\r\n\t\t\t\t\t\t\t\t<div class=\"custom-select__trigger\"><span>Amanda Kherr <b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t\t<div class=\"arrow\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"custom-options\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"custom-option selected\" data-value=\"tesla\">Amanda Kherr\r\n\t\t\t\t\t\t\t\t\t\t<b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"custom-option\" data-value=\"volvo\">Amanda Kherr2\r\n\t\t\t\t\t\t\t\t\t\t<b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"custom-option\" data-value=\"mercedes\">Amanda Kherr3\r\n\t\t\t\t\t\t\t\t\t\t<b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button class=\"btn btn-primary\">ADD</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<ul class=\"selected-user\">\r\n\t\t\t\t\t\t<li><span class=\"user-thumb\"></span>\r\n\t\t\t\t\t\t\t<p>Amanda Kherr <b>Designer</b></p><i class=\"fa fa-times\"></i>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" value=\"Request feedback\" class=\"btn btn-primary\">\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</div> -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\r\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { ViewEmployeeComponent } from './view-employee/view-employee.component';\r\n\r\nconst routes: Routes = [{ path: 'create', component: CreateEmployeeComponent,data :{ Title:'Create Employee' ,ShowHeader:true,ShowNavBar:true} },\r\n { path: 'list', component:EmployeeListComponent,data :{ Title:'Employee List' ,ShowHeader:true,ShowNavBar:true}},\r\n { path: 'view', component:ViewEmployeeComponent,data :{ Title:'Employee' ,ShowHeader:true,ShowNavBar:true}},\r\n { path: 'edit', component:EditEmployeeComponent,data :{ Title:'Edit Employee' ,ShowHeader:true,ShowNavBar:true}}\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>employee works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmployeeRoutingModule } from './employee-routing.module';\r\nimport { EmployeeComponent } from './employee.component';\r\n\r\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\n\r\nimport {EmployeeService} from './employee.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport { ViewEmployeeComponent } from './view-employee/view-employee.component';\r\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\r\n\r\n@NgModule({\r\n  declarations: [EmployeeComponent, CreateEmployeeComponent, EmployeeListComponent, ViewEmployeeComponent, EditEmployeeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeeRoutingModule,HttpClientModule,ReactiveFormsModule,ToastModule\r\n  ],\r\n  providers:[EmployeeService]\r\n})\r\nexport class EmployeeModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserService } from 'src/app/Services/user.service';\r\n@Injectable()\r\nexport class EmployeeService {\r\n\r\n  constructor(private httpClient: HttpClient, private userService: UserService) { }\r\n\r\n  GetEmployeeData = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.employeeData);\r\n  }\r\n\r\n  GetEmployeeById = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getEmployeeData, { employeeId: id });\r\n  }\r\n\r\n  GetDepartments = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getDepartment);\r\n  }\r\n\r\n  GetDepartment = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getDepartmentById + id);\r\n  }\r\n\r\n  GetDesignation = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.GetDesignations, { designationId: id });\r\n  }\r\n\r\n  GetRolesForDepartmentId = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.GetDesignations, { departmentId: id });\r\n  }\r\n\r\n  CreateEmployee = function (data) {\r\n    data.createdBy=this.userService.LoggedInUser.Id;\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.AddEmployee, data);\r\n  }\r\n\r\n  UpdateEmployee = function (data) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.updateEmployee, data);\r\n  }\r\n  getOperations = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getOperations);\r\n  }\r\n\r\n  getElements = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getElements);\r\n  }\r\n\r\n  getRolePermissions = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getDesignationElementMapping + id);\r\n  }\r\n\r\n  deleteEmployee = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.deleteEmployee, { employeeId: id })\r\n  }\r\n\r\n  getEmployeeElementMapping = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getEmployeeElementsMapping + id);\r\n  }\r\n  GetSkillsMappedToEmployee = function (employeeIdData) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getEmployeeSkill, { employeeId: employeeIdData });\r\n  }\r\n  GetAllTheSkills = function () {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getSkill, {});\r\n  }\r\n\r\n  CreateSignUp = function (data) {\r\n    return this.httpClient.post(environment.url + environment.signup, data);\r\n  }\r\n\r\n  GetProjectListById = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.ProjectList + id);\r\n  }\r\n\r\n  getTeam = function () {\r\n\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getTeam,{});\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../employee.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmployeePermissions } from 'src/app/Entities/EmployeePermissions';\r\n@Component({\r\n  selector: 'app-view-employee',\r\n  templateUrl: './view-employee.component.html',\r\n  styleUrls: ['./view-employee.component.css']\r\n})\r\nexport class ViewEmployeeComponent implements OnInit {\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  Employee;\r\n  DepartmentName;\r\n  DesignationName;\r\n  Operations: any[];\r\n  Elements: any[];\r\n  Permissions: any[];\r\n  EmployeeSkills: any[];\r\n  projectList: any[];\r\n  TeamList: any[];\r\n  Skills: any[];\r\n  ngOnInit(): void {\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var id = params.get(\"id\");\r\n\r\n      this.employeeService.GetEmployeeById(id).subscribe((res) => {\r\n        if (res.errorCode == 0) {\r\n          this.Employee = res.dataObj[0];\r\n          this.GetDesignationById(this.Employee.designationId);\r\n          this.GetDepartmentById(this.Employee.departmentId);\r\n          this.employeeService.getOperations().subscribe(res => {\r\n            if (res.errorCode == 0) {\r\n              this.Operations = res.dataObj;\r\n              this.employeeService.getElements().subscribe(res => {\r\n                if (res.errorCode == 0) {\r\n                  this.Elements = res.dataObj;\r\n                  this.employeeService.getEmployeeElementMapping(id).subscribe(res => {\r\n                    if (res.errorCode == 0) {\r\n                      this.Permissions = res.dataObj.employeeElementMappingList;\r\n                      this.getEmployeeSkills(id);\r\n                      this.getAllEmployeeSkills();\r\n                      //MapPermissionsList(res.dataObj.employeeElementMappingList);\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  MapPermissionsList(data) {\r\n    if (data) {\r\n      for (let index = 0; index < data.length; index++) {\r\n        const element = data[index];\r\n        for (let index2 = 0; index2 < element.employeeElementOprationList.length; index2++) {\r\n          const operation = element.employeeElementOprationList[index2];\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getEmployeeSkills(id) {\r\n    console.log(\"skill called\");\r\n    this.employeeService.GetSkillsMappedToEmployee(id)\r\n      .subscribe(res => {\r\n        if (res.errorCode == 0) {\r\n          console.log(res.dataObj);\r\n          this.EmployeeSkills = res.dataObj;\r\n        }\r\n        else {\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllEmployeeSkills() {\r\n    this.employeeService.GetAllTheSkills()\r\n      .subscribe(res => {\r\n        if (res.errorCode == 0) {\r\n          console.log(res.dataObj);\r\n          this.Skills = res.dataObj;\r\n        }\r\n        else {\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  getSkillNameById(id) {\r\n    if (this.Skills) {\r\n      for (let index = 0; index < this.Skills.length; index++) {\r\n        const element = this.Skills[index];\r\n        if (element.skillId == id) {\r\n          return element.skillName;\r\n        }\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getProjectList() {\r\n    var id = -1;\r\n    this.employeeService.GetProjectListById(id).subscribe((res) => {\r\n      console.log(res);\r\n      this.projectList = res.dataObj;\r\n      console.log(this.projectList);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  getTeamList() {\r\n    this.employeeService.getTeam().subscribe((res) => {\r\n      if (res.errorCode == 0) {\r\n        this.TeamList = res.dataObj;\r\n        console.log(this.TeamList);\r\n\r\n      }\r\n      else {\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  GetOperationName(id) {\r\n    for (let index = 0; index < this.Operations.length; index++) {\r\n      const operation = this.Operations[index];\r\n      if (operation.operationId == id) {\r\n        return operation.operationName;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetElementName(id) {\r\n    for (let index = 0; index < this.Elements.length; index++) {\r\n      const element = this.Elements[index];\r\n      if (element.elementId == id) {\r\n        return element.elementName;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetDesignationById(id) {\r\n    this.employeeService.GetDesignation(id).subscribe(res => {\r\n      this.DepartmentName = res.dataObj[0].departmentName;\r\n    })\r\n  }\r\n\r\n  GetDepartmentById(id) {\r\n    this.employeeService.GetDepartment(id).subscribe(res => {\r\n      this.DesignationName = res.dataObj[0].designationName;\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n  <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <ul class=\"nav nav-tabs\">\r\n            <li class=\"active\"><a data-toggle=\"tab\" href=\"#feedback-request\">Employee Details</a></li>\r\n            <li><a data-toggle=\"tab\" (click)=\"getProjectList()\" href=\"#my-feedback\">Projects</a></li>\r\n            <li><a data-toggle=\"tab\" (click)=\"getTeamList()\"href=\"#team-feedback\">Teams</a></li>\r\n            <li><a data-toggle=\"tab\" href=\"#skill-feedback\">Skills</a></li>\r\n          </ul>\r\n          <div class=\"tab-content\">\r\n            <div id=\"feedback-request\" class=\"tab-pane fade in active\">\r\n              <div class=\"table-full-width\">\r\n\r\n                <ul class=\"feedback-list\" style=\"margin-bottom: 0px;\">\r\n                  <li>\r\n                    <div class=\"media\">\r\n                      <div class=\"media-left\">\r\n                        <a href=\"#\">\r\n                          <img class=\"media-object\" src=\"assets/img/faces/face-1.jpg\" alt=\"...\">\r\n                        </a>\r\n                      </div>\r\n                      <div class=\"media-body\">\r\n                        <h4 class=\"media-heading\">{{Employee.employeeFname+\" \"+Employee.employeeMname}} </h4>\r\n                        <p class=\"gray-text\">{{DepartmentName}} . {{DesignationName}}</p>\r\n                        <p><a href=\"'mailto:'+{{Employee.employeeEmail}}\">{{Employee.employeeEmail}}</a>\r\n                        </p>\r\n                        <p>{{Employee.employeeMobileNo}}</p>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n\r\n                </ul>\r\n              </div>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-12 col-xs-12\">\r\n                  <h4>Employee Permission</h4>\r\n                  <div class=\"panel-group\" id=\"accordion\">\r\n\r\n\r\n                    <div class=\"panel panel-default\" id=\"panel2\" [attr.data-toggle]=\"'collapse'+element.elementId\"\r\n                      *ngFor=\"let element of Permissions\" [attr.data-target]=\"'#collapse'+element.elementId\">\r\n                      <div class=\"panel-heading\" data-toggle=\"collapse\"\r\n                        [attr.data-target]=\"'#collapse'+element.elementId\">\r\n                        <h4 class=\"panel-title\"><a style=\"font-weight:bold\" data-toggle=\"collapse\"\r\n                            [attr.data-target]=\"'#collapse'+element.elementId\"\r\n                            class=\"collapsed\">{{GetElementName(element.elementId)}}</a></h4>\r\n                      </div>\r\n                      <div [attr.id]=\"'collapse'+element.elementId\" class=\"panel-collapse collapse fade\">\r\n                        <div class=\"panel-body\">\r\n                          <div class=\"content\">\r\n                            <div class=\"permission-list\">\r\n                              <ul>\r\n                                <li *ngFor=\"let operation of element.employeeElementOprationList\">\r\n                                  {{GetOperationName(operation.operationId)}}</li>\r\n                              </ul>\r\n\r\n                            </div>\r\n\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- panel3 -->\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <div id=\"my-feedback\" class=\"tab-pane fade\">\r\n              <div class=\"table-full-width\">\r\n                <ul class=\"checkbox-list\">\r\n                  <li>\r\n                    <table class=\"table\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style=\"width:280px;\"> Projects Name</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">Start Date</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">Due Date</td>\r\n                          <td style=\"width: 140px;\" class=\"gray-text\">Team</td>\r\n                          <td style=\"width: 104px;\">Priorities</td>\r\n                          <td style=\"width: 110px;\">\r\n                            Status\r\n                          </td>\r\n                          <td style=\"width: 180px;\" class=\"gray-text\"> Action</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </li>\r\n                  <li *ngFor=\"let project of projectList\">\r\n                    <table class=\"table\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style=\"width:292px;\">{{project.projectName}}</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">{{project.projectStartDate}}</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">{{project.projectDueDate}}</td>\r\n                          <td style=\"width: 140px;\" class=\"gray-text projectthumb\">\r\n                            <div class=\"team-thumb\"></div>\r\n                            <div class=\"team-thumb\"></div>\r\n                            <div class=\"more-thumb\">\r\n                              3+</div>\r\n                          </td>\r\n                          <td style=\"width: 92px;\"><span class=\"prioritybox\"\r\n                              [ngClass]=\"{'completedcolor':project.projectStatus=='Completed',\r\n                                              'yellowcolor':project.projectStatus!='Completed' && project.projectPriority=='Low',\r\n                                              'purplecolor':project.projectStatus!='Completed' && project.projectPriority=='Medium',\r\n                                              'redcolor':project.projectStatus!='Completed' && project.projectPriority=='High'}\">{{project.projectPriority}}</span>\r\n                          </td>\r\n                          <td style=\"width: 110px;\">\r\n                            <span class=\"statusbox\"\r\n                              [ngClass]=\"{\r\n                                            'redcolor':project.projectStatus=='Delayed',\r\n                                            'greencolor':project.projectStatus=='Completed',\r\n                                            'purplecolor':project.projectStatus=='In Progress'}\">{{project.projectStatus}}</span>\r\n                          </td>\r\n\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"table-full-width\">\r\n\r\n              </div>\r\n            </div>\r\n            <div id=\"team-feedback\" class=\"tab-pane fade\">\r\n              <div class=\"table-full-width\" *ngIf=\"TeamList && TeamList.length>0\">\r\n                <div class=\"emlist\">\r\n                  <ul class=\"team-member team-listvew\">\r\n                    <li class=\"team-heading\">\r\n                      <ul>\r\n                        <li>\r\n                          Team Name\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n                    <li class=\"team-heading list-content\" *ngFor=\"let data of TeamList\">\r\n\r\n                      <ul>\r\n                        <li>\r\n                          {{data.teamName}}\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n                  </ul>\r\n\r\n                </div>\r\n              </div>\r\n              <h3 style=\"text-align: center;padding-top: 20%;\" *ngIf=\"!TeamList || TeamList.length==0\">Not tagged to any team</h3>\r\n\r\n            </div>\r\n            <div id=\"skill-feedback\" class=\"tab-pane fade\">\r\n              <div class=\"table-full-width\" *ngIf=\"EmployeeSkills && EmployeeSkills.length>0\">\r\n                <ul class=\"feedback-list\">\r\n                  <li>\r\n                    <div class=\"row skill-list\">\r\n                      <div class=\"col-md-6\" *ngFor=\"let skill of EmployeeSkills\">\r\n\r\n                        <div class=\"skill-slider\">\r\n                          <span>{{getSkillNameById(skill.skillId)}}</span>\r\n                          <span id=\"ex1CurrentSliderValLabel\" class=\"skill-value\"><span\r\n                              id=\"ex1SliderVal\">67</span>%</span>\r\n                          <div class=\"slider slider-horizontal\" id=\"\">\r\n                            <div class=\"slider-track\">\r\n                              <div class=\"slider-track-low\" style=\"left: 0px; width: 0%;\">\r\n                              </div>\r\n                              <div class=\"slider-selection\" style=\"left: 0%; width: 67%;\">\r\n                              </div>\r\n                              <div class=\"slider-track-high\" style=\"right: 0px; width: 46%;\"></div>\r\n                            </div>\r\n                            <div class=\"tooltip tooltip-main top\" role=\"presentation\" style=\"left: 54%;\">\r\n                              <div class=\"tooltip-arrow\"></div>\r\n                              <div class=\"tooltip-inner\">54</div>\r\n                            </div>\r\n                            <div class=\"tooltip tooltip-min top\" role=\"presentation\" style=\"display: none;\">\r\n                              <div class=\"tooltip-arrow\"></div>\r\n                              <div class=\"tooltip-inner\"></div>\r\n                            </div>\r\n                            <div class=\"tooltip tooltip-max top\" role=\"presentation\" style=\"display: none;\">\r\n                              <div class=\"tooltip-arrow\"></div>\r\n                              <div class=\"tooltip-inner\"></div>\r\n                            </div>\r\n                            <div class=\"slider-handle max-slider-handle round hide\" role=\"slider\" aria-valuemin=\"0\"\r\n                              aria-valuemax=\"100\" aria-valuenow=\"0\" tabindex=\"0\" style=\"left: 0%;\"></div>\r\n                          </div><input id=\"ex1\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"100\"\r\n                            data-slider-step=\"1\" data-slider-value=\"100\" [attr.data-value]=\"skill.skillProficiency\"\r\n                            value=\"{{skill.skillProficiency}}\" style=\"display: none;\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </li>\r\n\r\n                </ul>\r\n              </div>\r\n              <h3 *ngIf=\"!EmployeeSkills || EmployeeSkills.length==0\" style=\"text-align: center;padding-top: 20%;\">No\r\n                skills mapped</h3>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}