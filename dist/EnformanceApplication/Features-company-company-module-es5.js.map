{"version":3,"sources":["webpack:///src/app/Features/company/company-routing.module.ts","webpack:///src/app/Features/company/company.component.ts","webpack:///src/app/Features/company/company.component.html","webpack:///src/app/Features/company/company.module.ts","webpack:///src/app/Features/company/company.service.ts","webpack:///src/app/Features/company/update-company/update-company.component.ts","webpack:///src/app/Features/company/update-company/update-company.component.html"],"names":["routes","path","component","pathMatch","data","Title","ShowHeader","ShowNavBar","CompanyRoutingModule","forChild","imports","exports","CompanyComponent","companyService","selector","templateUrl","styleUrls","CompanyModule","declarations","CompanyService","httpClient","userService","addCompany","post","url","providedIn","UpdateCompanyComponent","fb","router","route","OnSubmit","console","log","subscribe","res","errorCode","navigateByUrl","messageService","add","severity","summary","detail","error","events","event","ngOnInit","queryParamMap","params","id","get","email","CompanyForm","group","companyName","required","portalName","pattern","industryType","adminMobile","compose","minLength","adminEmail","companyDomain","contactPerson","apiURLPrefix"],"mappings":"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","file":"Features-company-company-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CompanyComponent } from './company.component';\r\nimport { UpdateCompanyComponent } from './update-company/update-company.component';\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nconst routes: Routes = [{ path: '', component: CompanyComponent },\r\n\r\n{ path: 'update', pathMatch: 'full', component: UpdateCompanyComponent,data :{ Title:'' ,ShowHeader:false,ShowNavBar:false} }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes),\r\n    ReactiveFormsModule],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {CompanyService} from './company.service';\r\n@Component({\r\n  selector: 'app-company',\r\n  templateUrl: './company.component.html',\r\n  styleUrls: ['./company.component.css']\r\n})\r\nexport class CompanyComponent implements OnInit {\r\n\r\n  constructor(private companyService:CompanyService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  \r\n}\r\n","<p>company works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CompanyRoutingModule } from './company-routing.module';\r\nimport { CompanyComponent } from './company.component';\r\nimport { UpdateCompanyComponent } from './update-company/update-company.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyComponent, UpdateCompanyComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyRoutingModule,ReactiveFormsModule\r\n  ]\r\n})\r\nexport class CompanyModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../../../environments/environment';\r\nimport { UserService } from 'src/app/Services/user.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService {\r\n\r\n  constructor(private httpClient:HttpClient ,private userService:UserService) { }\r\n\r\n  addCompany=function(data)\r\n  {\r\n    return this.httpClient.post(environment.url+environment.addCompany,data);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, NgForm } from '@angular/forms';\r\nimport { CompanyService } from '../company.service';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { emit } from 'process';\r\n\r\n@Component({\r\n  selector: 'app-update-company',\r\n  templateUrl: './update-company.component.html',\r\n  styleUrls: ['./update-company.component.css']\r\n})\r\nexport class UpdateCompanyComponent implements OnInit {\r\n\r\n  CompanyForm: FormGroup;\r\n  LoginForm: FormGroup;\r\n  constructor(private fb: FormBuilder, private companyService: CompanyService, private router: Router, private route: ActivatedRoute) {\r\n    this.router.events.subscribe(\r\n      (event) => {\r\n             if (event instanceof NavigationEnd) {\r\n               this.ngOnInit();\r\n             }\r\n      });\r\n  \r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var id = params.get(\"userId\");\r\n      var email = params.get(\"emailId\");\r\n      this.CompanyForm = this.fb.group({\r\n        companyName: ['', Validators.required],\r\n        portalName: ['', [Validators.required,Validators.pattern('(https?://)([\\\\da-z.-]+)')]],\r\n        industryType: ['', Validators.required],\r\n        adminMobile: ['', Validators.compose([Validators.required, Validators.minLength(10),Validators.pattern('[0-9]+')])],\r\n        adminEmail: [email],\r\n        companyDomain: [''],\r\n        contactPerson: [id],\r\n        apiURLPrefix: ['']\r\n      });\r\n    });\r\n  }\r\n\r\n  OnSubmit = function (data) {\r\n    console.log(data);\r\n    this.companyService.addCompany(data).subscribe((res) => {\r\n      console.log(res);\r\n      if (res.errorCode == 0) {\r\n        this.router.navigateByUrl('/login');\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'company update failed', detail: 'Via MessageService' });\r\n      }\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"login-bg\">\r\n    <div class=\"overlay\">\r\n        <div class=\"main-panel\">\r\n            <div class=\"login\">\r\n                <div class=\"welcome-heading\">\r\n                    <h3 class=\"heading-1\">Company information\r\n                        <span class=\"text-left\">Help us setup your account</span></h3>\r\n\r\n                    <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n                </div>\r\n\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-wrapper\">\r\n                    <form [formGroup]=\"CompanyForm\" (ngSubmit)=\"OnSubmit(CompanyForm.value)\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Company Name *</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Company Name\"\r\n                                formControlName=\"companyName\">\r\n                            <span class=\"error\" *ngIf=\"!CompanyForm.controls['companyName'].valid&&(CompanyForm.controls['companyName'].dirty || CompanyForm.controls['companyName'].touched)\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                provide company name</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Company Website *</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Portal Name\"\r\n                                formControlName=\"portalName\">\r\n                            <span *ngIf=\"!CompanyForm.controls['portalName'].valid&&(CompanyForm.controls['portalName'].dirty|| CompanyForm.controls['portalName'].touched)\" class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                provide valid company Website</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Industry *</label>\r\n                            <div class=\"Industry\">\r\n                                <select class=\"form-control\" formControlName=\"industryType\">\r\n                                    <option value=\"\">Select industry</option>\r\n                                    <option value=\"IT Services\">IT Services</option>\r\n                                    <option value=\"Finance\">Finance</option>\r\n                                    <option value=\"Manufacturing\">Manufacturing</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Hospitality\">Hospitality</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"Health Care\">Health Care</option>\r\n                                </select>\r\n                            </div>\r\n                            <span *ngIf=\"!CompanyForm.controls['industryType'].valid&&(CompanyForm.controls['industryType'].dirty|| CompanyForm.controls['industryType'].touched)\" class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                select Industy type</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Office Phone No *</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Mobile Number\"\r\n                                formControlName=\"adminMobile\">\r\n                                <span *ngIf=\"!CompanyForm.controls['adminMobile'].valid&&(CompanyForm.controls['adminMobile'].dirty|| CompanyForm.controls['adminMobile'].touched)\" class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                    provide valid phone No.</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <input type=\"submit\" name=\"submit\" value=\"Update\" class=\"btn btn-primary\" [disabled]=\"!CompanyForm.valid\" >\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"]}