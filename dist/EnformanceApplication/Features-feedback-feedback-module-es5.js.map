{"version":3,"sources":["webpack:///src/app/Features/feedback/feedback-routing.module.ts","webpack:///src/app/Features/feedback/feedback.component.ts","webpack:///src/app/Features/feedback/feedback.component.html","webpack:///src/app/Features/feedback/feedback.module.ts","webpack:///src/app/Features/feedback/feedback.service.ts","webpack:///src/app/Features/feedback/my-feedback/my-feedback.component.ts","webpack:///src/app/Features/feedback/my-feedback/my-feedback.component.html","webpack:///src/app/Features/feedback/team-feedback/team-feedback.component.ts","webpack:///src/app/Features/feedback/team-feedback/team-feedback.component.html"],"names":["routes","path","component","data","Title","ShowHeader","ShowNavBar","FeedbackRoutingModule","forChild","imports","exports","FeedbackComponent","selector","templateUrl","styleUrls","FeedbackModule","declarations","FeedbackService","httpclient","userService","createFeedback","createdBy","LoggedInUser","Id","post","PortalName","addFeedabck","GetProjectList","id","get","ProjectList","GetEmployeeData","employeeData","GetRequestedFeedbacks","getRequestedFeedback","GetEmployeesData","GetProjectListByid","GetMyFeedback","getMyFeedback","UpdateFeedback","GetFeedbackUpdated","getFeedbackByParam","feedbackFromId","GetFeedbackByParam","GetTaskByProjectId","getTask","projectId","getTasks","providedIn","MyFeedbackComponent","feedbackService","fb","messageService","employeesDetails","ParametersList","FeedbackUpdatedList","TasksList","intialiseAddParameter","ParameterForm","group","paramId","required","description","subscribe","res","dataObj","console","log","errorCode","FeedbackList","UpdateFeedbackListWithEmployeeData","UpdateProjectDetails","MyFeedbackList","FeedbackRequestForm","feedbackRequestId","feedbackForId","feedbackRequesterId","feedbackStatus","taskId","feedbackReply","feedbackCreatedDate","feedbackUpdatedDate","activateFlag","blindRequest","feedbackGivenDate","projectname","feedbackParameteres","index","element","projectName","length","list","employee","GetEmployeeDataBasedOnId","emailId","employeeEmail","designation","designationName","name","employeeFname","employeeMname","employeeId","filter","d","projectdetails","responseObj","add","severity","summary","detail","errorMsg","err","GetIndexInFeedbackList","dataIndex","indexOf","feedbackId","findIndex","splice","taskHeading","empId","value","TeamFeedbackComponent","userservice","feedbackList","SelectedList","selectedProject","FeedbackListParamsKeys","initialiseCreateForm","addClass","CreateForm","createButtonClicked","SelectProjectChanged","patchValue","TaskList","CreateButtonClicked","push","ResetForm","CancelButtonClick","error","on","parent","removeClass","EmployeeList","forEach","FullName","param","reset","FeedbackListByParamDictionary","getForRequestSummary","project","getProject","forDictionary","Map","feedback","feedbackemployeeList","has","set","ProjectFilterChange","DateFilterChange"],"mappings":"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","file":"Features-feedback-feedback-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nimport { FeedbackComponent } from './feedback.component';\r\nimport { MyFeedbackComponent } from './my-feedback/my-feedback.component';\r\nimport { TeamFeedbackComponent } from './team-feedback/team-feedback.component';\r\n\r\nconst routes: Routes = [{ path: 'MyFeedback', component: MyFeedbackComponent,data :{ Title:'My Feedback' ,ShowHeader:true,ShowNavBar:true} },\r\n{ path: 'TeamFeedback', component: TeamFeedbackComponent,data :{ Title:'Team Feedback' ,ShowHeader:true,ShowNavBar:true} }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FeedbackRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n}\r\n","<p>feedback works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ReactiveFormsModule} from '@angular/forms'\r\nimport { FeedbackRoutingModule } from './feedback-routing.module';\r\nimport { FeedbackComponent } from './feedback.component';\r\nimport { MyFeedbackComponent } from './my-feedback/my-feedback.component';\r\nimport { TeamFeedbackComponent } from './team-feedback/team-feedback.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {PipesModule} from '../../Shared/pipes/pipes.module';\r\n@NgModule({\r\n  declarations: [FeedbackComponent, MyFeedbackComponent, TeamFeedbackComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FeedbackRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    PipesModule\r\n  ]\r\n})\r\nexport class FeedbackModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {UserService} from '../../Services/user.service';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedbackService {\r\n\r\n  constructor(private httpclient:HttpClient,private userService:UserService) {\r\n\r\n   }\r\n\r\n   createFeedback=function(data)\r\n   {\r\n    data.createdBy=this.userService.LoggedInUser.Id;\r\n     return this.httpclient.post(this.userService.LoggedInUser.PortalName +environment.addFeedabck,data);\r\n   }\r\n\r\n   GetProjectList=function(id)\r\n   {\r\n     return this.httpclient.get(this.userService.LoggedInUser.PortalName+environment.ProjectList+id);\r\n   }\r\n\r\n   GetEmployeeData=function()\r\n   {\r\n     return this.httpclient.get(this.userService.LoggedInUser.PortalName+environment.employeeData);\r\n   }\r\n\r\n   GetRequestedFeedbacks=function(id)\r\n   {\r\n     return this.httpclient.get(this.userService.LoggedInUser.PortalName+environment.getRequestedFeedback+id)\r\n   }\r\n\r\n   GetEmployeesData=function()\r\n   {\r\n      return this.httpclient.get(this.userService.LoggedInUser.PortalName+environment.employeeData)\r\n   }\r\n   GetProjectListByid=function(id)\r\n   {\r\n      return this.httpclient.get(this.userService.LoggedInUser.PortalName+environment.ProjectList+id);\r\n   }\r\n\r\n   GetMyFeedback=function(id)\r\n   {\r\n      return this.httpclient.get(this.userService.LoggedInUser.PortalName+environment.getMyFeedback+id);\r\n   }\r\n\r\n   UpdateFeedback=function(data)\r\n   {\r\n     return this.httpclient.post(this.userService.LoggedInUser.PortalName+environment.UpdateFeedback,data);\r\n   }\r\n\r\n   GetFeedbackUpdated=function(id)\r\n   {\r\n     return this.httpclient.post(this.userService.LoggedInUser.PortalName+environment.getFeedbackByParam,{feedbackFromId:id})\r\n   }\r\n\r\n   GetFeedbackByParam=function(data)\r\n   {\r\n     return this.httpclient.post(this.userService.LoggedInUser.PortalName+environment.getFeedbackByParam,data);\r\n   }\r\n\r\n\r\n   GetTaskByProjectId=function(id)\r\n   {\r\n     return this.httpclient.post(this.userService.LoggedInUser.PortalName+environment.getTask,{projectId:id});\r\n   }\r\n   getTasks=function()\r\n   {\r\n    return this.httpclient.post(this.userService.LoggedInUser.PortalName+environment.getTask,{});\r\n   }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeedbackService } from '../feedback.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { UserService } from '../../../Services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-my-feedback',\r\n  templateUrl: './my-feedback.component.html',\r\n  styleUrls: ['./my-feedback.component.css'],\r\n})\r\nexport class MyFeedbackComponent implements OnInit {\r\n  FeedbackRequestForm: FormGroup;\r\n  employeesDetails: any[] = [];\r\n  FeedbackList: any[];\r\n  MyFeedbackList: any[];\r\n  projectdetails;\r\n  ParameterForm: FormGroup;\r\n  ParametersList: any[] = [];\r\n  FeedbackUpdatedList:any=[];\r\n  ProjectList:any[]=[];\r\n  TasksList:any[]=[];\r\n\r\n  constructor(\r\n    private feedbackService: FeedbackService,\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.feedbackService.GetProjectList(-1).subscribe((res) => {\r\n      this.ProjectList = res.dataObj;\r\n      console.log('projectList ' + this.ProjectList);\r\n    });\r\n\r\n    this.feedbackService.getTasks().subscribe((res) => {\r\n      this.TasksList = res.dataObj;\r\n    });\r\n\r\n    this.feedbackService.GetEmployeesData().subscribe((res) => {\r\n      this.employeesDetails = res.dataObj;\r\n      console.log('employee list' + this.employeesDetails);\r\n\r\n\r\n      this.feedbackService\r\n        .GetRequestedFeedbacks(this.userService.LoggedInUser.Id)\r\n        .subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            if (res.dataObj != null) {\r\n              this.FeedbackList = res.dataObj;\r\n              this.UpdateFeedbackListWithEmployeeData(this.FeedbackList);\r\n              this.UpdateProjectDetails();\r\n            }\r\n          } else {\r\n          }\r\n        });\r\n        this.feedbackService.GetFeedbackUpdated(this.userService.LoggedInUser.Id)\r\n        .subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            if (res.dataObj != null) {\r\n              this.FeedbackUpdatedList = res.dataObj;\r\n              this.UpdateFeedbackListWithEmployeeData(this.FeedbackUpdatedList);\r\n              this.UpdateProjectDetails();\r\n            }\r\n          } else {\r\n          }\r\n        });\r\n\r\n      this.feedbackService\r\n        .GetMyFeedback(this.userService.LoggedInUser.Id)\r\n        .subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            if (res.dataObj != null) {\r\n              this.MyFeedbackList = res.dataObj;\r\n              this.UpdateFeedbackListWithEmployeeData(this.MyFeedbackList);\r\n            }\r\n          } else {\r\n          }\r\n        });\r\n    });\r\n    this.intialiseAddParameter();\r\n\r\n    this.FeedbackRequestForm = this.fb.group({\r\n      feedbackRequestId: ['', Validators.required],\r\n      feedbackForId: ['', Validators.required],\r\n      feedbackFromId: ['', Validators.required],\r\n      feedbackRequesterId: ['', Validators.required],\r\n      feedbackStatus: ['', Validators.required],\r\n      projectId: ['', Validators.required],\r\n      taskId: ['', Validators.required],\r\n      feedbackReply: ['', Validators.required],\r\n      feedbackCreatedDate: ['', Validators.required],\r\n      feedbackUpdatedDate: ['', Validators.required],\r\n      activateFlag: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      blindRequest: ['', Validators.required],\r\n      feedbackGivenDate: ['', Validators.required],\r\n      projectname: ['', Validators.required],\r\n      feedbackParameteres: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  intialiseAddParameter = function () {\r\n    this.ParameterForm = this.fb.group({\r\n      paramId: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n    });\r\n    this.ParametersList = [\r\n      { paramId: 1, description: 'Team Player' },\r\n      { paramId: 2, description: 'Willingness to help other' },\r\n      { paramId: 3, description: 'Communications Skills' },\r\n      { paramId: 4, description: 'Motivate colleague' },\r\n      { paramId: 5, description: 'Leadership qualities' },\r\n      { paramId: 6, description: 'Strength' },\r\n      { paramId: 7, description: 'Weakness' },\r\n      { paramId: 8, description: 'Creativity' },\r\n    ];\r\n  };\r\n\r\n  UpdateProjectDetails() {\r\n    for (let index = 0; index < this.FeedbackList.length; index++) {\r\n      const element = this.FeedbackList[index];\r\n      this.feedbackService\r\n        .GetProjectListByid(element.projectId)\r\n        .subscribe((res) => {\r\n          this.FeedbackList[index].projectName = res.dataObj.projectName\r\n            ? res.dataObj.projectName\r\n            : '';\r\n        });\r\n    }\r\n  }\r\n\r\n  UpdateFeedbackListWithEmployeeData(list) {\r\n    for (let index = 0; index < list.length; index++) {\r\n      const element = list[index];\r\n      var employee = this.GetEmployeeDataBasedOnId(element.feedbackForId);\r\n\r\n      list[index].emailId = employee ? employee.employee.employeeEmail : '';\r\n      list[index].designation = employee\r\n        ? employee.designation.designationName\r\n        : '';\r\n      list[index].name = employee\r\n        ? employee.employee.employeeFname +\r\n          ' ' +\r\n          employee.employee.employeeMname\r\n        : '';\r\n    }\r\n  }\r\n\r\n  GetEmployeeDataBasedOnId(id) {\r\n    for (let index = 0; index < this.employeesDetails.length; index++) {\r\n      const element = this.employeesDetails[index];\r\n      if ((element.employee.employeeId == id)) {\r\n        return element;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  GetEmployeeNameBasedOnId(id) {\r\n    for (let index = 0; index < this.employeesDetails.length; index++) {\r\n      const element = this.employeesDetails[index];\r\n      if ((element.employee.employeeId == id)) {\r\n        return element.employee.employeeFname+\" \"+element.employee.employeeMname;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  GetRequestedCount()\r\n  {\r\nif(this.FeedbackList)\r\n{\r\n      var data=this.FeedbackList.filter(d=>d.feedbackStatus=='1');\r\n      if(data)\r\n      {\r\n        return data.length;\r\n      }\r\n    }\r\n      return 0;\r\n  }\r\n\r\n  getProject(id) {\r\n    this.feedbackService.GetProjectListByid(id).subscribe((res) => {\r\n      this.projectdetails = res.dataObj;\r\n      console.log('test' + this.projectdetails);\r\n    });\r\n    return this.projectdetails;\r\n  }\r\n\r\n  GetFeedbackParameterNames(paramId) {\r\n    for (let index = 0; index < this.ParametersList.length; index++) {\r\n      const element = this.ParametersList[index];\r\n      if (element.paramId == paramId) {\r\n        return element.description;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  GetIndexInFeedbackList(id)\r\n  {\r\n    for (let index = 0; index < this.FeedbackList.length; index++) {\r\n      const element = this.FeedbackList[index];\r\n      if(element.feedbackRequestId==id)\r\n      {\r\n        return index;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  SubmitFeedbackReply(data) {\r\n    data.feedbackStatus = 3;\r\n    this.feedbackService.UpdateFeedback(data).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          var responseObj=res.dataObj;\r\n          responseObj.name=data.name;\r\n          responseObj.designation=data.designation;\r\n          responseObj.emailId=data.emailId;\r\n          this.MyFeedbackList=responseObj;\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Team Created',\r\n            detail: 'Via MessageService',\r\n          });\r\n        } else {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: res.errorMsg,\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed please try again',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  SubmitFeedback(data,index)\r\n  {\r\n    data.feedbackStatus = 2;\r\n    this.feedbackService.UpdateFeedback(data).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          var responseObj=res.dataObj;\r\n          responseObj.name=data.name;\r\n          responseObj.designation=data.designation;\r\n          responseObj.emailId=data.emailId;\r\n          console.log(this.GetIndexInFeedbackList(data.feedbackRequestId));\r\n          var dataIndex=this.FeedbackList.indexOf(this.FeedbackList.filter(d=>d.feedbackRequestId==data.feedbackRequestId));\r\n          console.log(dataIndex);\r\n          this.FeedbackList[this.GetIndexInFeedbackList(data.feedbackRequestId)]=responseObj;\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Success',\r\n            detail: 'Feedback submitted successfully',\r\n          });\r\n        } else {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Error',\r\n            detail: res.errorMsg,\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Error',\r\n          detail: 'Failed please try again',\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  RemoveFromRequestedFeedback(feedbackId){\r\n    var index=this.FeedbackList.findIndex(d=>d.feedbackRequestId==feedbackId);\r\n    if(index!=-1)\r\n    {\r\n      this.FeedbackList.splice(index,1);\r\n    }\r\n  }\r\n\r\n  getProjectName(id) {\r\n    for (let index = 0; index < this.ProjectList.length; index++) {\r\n      const element = this.ProjectList[index];\r\n      if ((element.projectId == id)) {\r\n        return element.projectName;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getTaskName(id) {\r\n    for (let index = 0; index < this.TasksList.length; index++) {\r\n      const element = this.TasksList[index];\r\n      if (element.taskId == id) {\r\n        return element.taskHeading;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  GetEmployeeEmailBasedOnId(id) {\r\n    for (let index = 0; index < this.employeesDetails.length; index++) {\r\n      const element = this.employeesDetails[index];\r\n      if ((element.employee.employeeId == id)) {\r\n        return element.employee.employeeEmail;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getDesignationNameForEmployee(empId) {\r\n    for (let index = 0; index < this.employeesDetails.length; index++) {\r\n      const element = this.employeesDetails[index];\r\n      if ((element.employee.employeeId == empId)) {\r\n        return element.designation.designationName;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n    <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <ul class=\"nav nav-tabs\">\r\n                        <li class=\"active\"><a data-toggle=\"tab\" href=\"#feedback-request\">Feedback Request</a></li>\r\n                        <li><a data-toggle=\"tab\" href=\"#my-feedback\">My Feedback</a></li>\r\n                    </ul>\r\n                    <div class=\"tab-content\">\r\n                        <div id=\"feedback-request\" class=\"tab-pane fade in active\">\r\n                            <div class=\"table-full-width\">\r\n                                <span class=\"light-text\">You have {{GetRequestedCount()}} Feedback Request</span>\r\n                                <ul class=\"feedback-list\">\r\n                                    <li *ngFor=\"let feedback of FeedbackList|dataFilter:'feedbackStatus':'1';let feedbackIndex=index\">\r\n                                        <div class=\"media\">\r\n                                            <div class=\"media-left\">\r\n                                                <a href=\"#\">\r\n                                                    <img class=\"media-object\" src=\"assets/img/faces/face-3.jpg\"\r\n                                                        alt=\"...\">\r\n                                                </a>\r\n                                            </div>\r\n                                            <div class=\"media-body\">\r\n                                                <h4 class=\"media-heading\">{{feedback.name}}</h4>\r\n                                                <p class=\"gray-text\">{{feedback.designation}}</p>\r\n                                                <p><a href=\"mailto:angeljohnson@gmail.com\">{{feedback.emailId}}</a>\r\n                                                </p>\r\n                                                <input type=\"text\" class=\"form-control\" [ngModel]=\"feedback.taskId==null?getProjectName(feedback.projectId):getTaskName(feedback.taskId)\"\r\n                                                    disabled>\r\n                                                <div class=\"form-section\">\r\n                                                    <div class=\"permission-section\" style=\"margin: 10px 0 0 0;\">\r\n                                                        <div class=\"smily-section\" *ngFor=\"let param of feedback.feedbackParameteres;let paramIndex=index\">\r\n                                                            <div class=\"rolesection\">\r\n                                                                <label for=\"\" class=\"pull-left headtxtsimily\">{{GetFeedbackParameterNames(param.paramId)}}</label>\r\n                                                                <div class=\"material-switch marright\">\r\n                                                                    <span><img src=\"assets/img/Bed.png\" (click)=\"param.rating=1\" [style.opacity]=\"param.rating!=null && param.rating!=1?'20%':'100%'\" ></span>\r\n                                                                </div>\r\n                                                                <div class=\"material-switch marright\">\r\n                                                                    <span><img src=\"assets/img/can-improve.png\" (click)=\"param.rating=2\" [style.opacity]=\"param.rating!=null && param.rating!=2?'20%':'100%'\"></span>\r\n                                                                </div>\r\n                                                                <div class=\"material-switch marright\">\r\n                                                                    <span><img src=\"assets/img/Good.png\" (click)=\"param.rating=3\" [style.opacity]=\"param.rating!=null && param.rating!=3?'20%':'100%'\"></span>\r\n                                                                </div>\r\n                                                                <div class=\"material-switch marright\">\r\n                                                                    <span><img src=\"assets/img/very-good.png\" (click)=\"param.rating=4\" [style.opacity]=\"param.rating!=null && param.rating!=4?'20%':'100%'\"></span>\r\n                                                                </div>\r\n                                                                <div class=\"material-switch marright\">\r\n                                                                    <span><img src=\"assets/img/Excellent.png\" (click)=\"param.rating=5\" [style.opacity]=\"param.rating!=null && param.rating!=5?'20%':'100%'\"></span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"feedback-area\">\r\n                                                    <textarea class=\"form-control\"\r\n                                                        placeholder=\"Write your feedback here\" [(ngModel)]=\"feedback.description\"></textarea>\r\n                                                    <div>\r\n                                                        <div class=\"form-group\">\r\n                                                            <div class=\"checkbox\">\r\n                                                                <input id=\"checkbox1\" type=\"checkbox\" [(ngModel)]=\"feedback.blindRequest\" >\r\n                                                                <label for=\"checkbox1\">Send as anonymous</label>\r\n                                                            </div><br>\r\n\r\n                                                        </div>\r\n                                                        <input type=\"submit\" value=\"Submit\" class=\"btn btn-normal\" (click)=\"SubmitFeedback(feedback,feedbackIndex)\" >\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <span class=\"message-create\"><i class=\"fa fa-comments-o\"\r\n                                                    aria-hidden=\"true\"></i></span>\r\n                                        </div>\r\n                                    </li>\r\n                                    <li *ngFor=\"let feedback of FeedbackList|dataFilter:'feedbackStatus':'2'\">\r\n                                      <!-- |dataFilter:'feedbackStatus':'2' -->\r\n                                      <div class=\"media\">\r\n                                          <div class=\"media-left\">\r\n                                              <a href=\"#\">\r\n                                                  <img class=\"media-object\" src=\"assets/img/faces/face-3.jpg\"\r\n                                                      alt=\"...\">\r\n                                              </a>\r\n                                          </div>\r\n                                          <div class=\"media-body\">\r\n                                              <h4 class=\"media-heading\">{{feedback.name}}</h4>\r\n                                              <p class=\"gray-text\">{{feedback.designation}}</p>\r\n                                              <p><a href=\"mailto:angeljohnson@gmail.com\">{{feedback.emailId}}</a>\r\n                                              </p>\r\n                                              <input type=\"text\" class=\"form-control\" [ngModel]=\"feedback.taskId==null?getProjectName(feedback.projectId):getTaskName(feedback.taskId)\"\r\n                                                  disabled>\r\n                                              <div class=\"form-section\">\r\n                                                  <div class=\"permission-section\" style=\"margin: 10px 0 0 0;\">\r\n                                                      <div class=\"smily-section\" *ngFor=\"let param of feedback.feedbackParameteres;let paramIndex=index\">\r\n                                                          <div class=\"rolesection\">\r\n                                                              <label for=\"\" class=\"pull-left headtxtsimily\">{{GetFeedbackParameterNames(param.paramId)}}</label>\r\n                                                              <div class=\"material-switch marright\">\r\n                                                                  <span><img src=\"assets/img/Bed.png\" *ngIf=\"param.rating==1\" ></span>\r\n                                                              </div>\r\n                                                              <div class=\"material-switch marright\">\r\n                                                                  <span><img src=\"assets/img/can-improve.png\" *ngIf=\"param.rating==2\"></span>\r\n                                                              </div>\r\n                                                              <div class=\"material-switch marright\">\r\n                                                                  <span><img src=\"assets/img/Good.png\" *ngIf=\"param.rating==3\"></span>\r\n                                                              </div>\r\n                                                              <div class=\"material-switch marright\">\r\n                                                                  <span><img src=\"assets/img/very-good.png\" *ngIf=\"param.rating==4\"></span>\r\n                                                              </div>\r\n                                                              <div class=\"material-switch marright\">\r\n                                                                  <span><img src=\"assets/img/Excellent.png\" *ngIf=\"param.rating==5\"></span>\r\n                                                              </div>\r\n                                                          </div>\r\n                                                      </div>\r\n                                                  </div>\r\n                                              </div>\r\n                                              <div class=\"feedback-area\">\r\n                                                  <textarea class=\"form-control\"\r\n                                                      placeholder=\"Write your feedback here\" [(ngModel)]=\"feedback.description\" disabled></textarea>\r\n                                                  <!-- <div>\r\n                                                      <div class=\"form-group\">\r\n                                                          <div class=\"checkbox\">\r\n                                                              <input id=\"checkbox1\" type=\"checkbox\" [(ngModel)]=\"feedback.blindRequest\" >\r\n                                                              <label for=\"checkbox1\">Send as anonymous</label>\r\n                                                          </div><br>\r\n                                                          <input type=\"submit\" name=\"submit\" value=\"Login\"\r\n                                                              class=\"btn btn-primary\">\r\n                                                      </div>\r\n                                                      <input type=\"submit\" value=\"Submit\" class=\"btn btn-normal\" (click)=\"SubmitFeedback(feedback)\" >\r\n                                                  </div> -->\r\n                                              </div>\r\n                                          </div>\r\n                                          <span class=\"message-create\"><i class=\"fa fa-comments-o\"\r\n                                                  aria-hidden=\"true\"></i></span>\r\n                                      </div>\r\n                                  </li>\r\n                                  <li *ngFor=\"let feedback of FeedbackList|dataFilter:'feedbackStatus':'3'\">\r\n                                    <!-- |dataFilter:'feedbackStatus':'2' -->\r\n                                    <div class=\"media\">\r\n                                        <div class=\"media-left\">\r\n                                            <a href=\"#\">\r\n                                                <img class=\"media-object\" src=\"assets/img/faces/face-3.jpg\"\r\n                                                    alt=\"...\">\r\n                                            </a>\r\n                                        </div>\r\n                                        <div class=\"media-body\">\r\n                                            <h4 class=\"media-heading\">{{feedback.name}}</h4>\r\n                                            <p class=\"gray-text\">{{feedback.designation}}</p>\r\n                                            <p><a href=\"mailto:angeljohnson@gmail.com\">{{feedback.emailId}}</a>\r\n                                            </p>\r\n                                            <input type=\"text\" class=\"form-control\" [ngModel]=\"feedback.taskId==null?getProjectName(feedback.projectId):getTaskName(feedback.taskId)\"\r\n                                                disabled>\r\n                                            <div class=\"form-section\">\r\n                                                <div class=\"permission-section\" style=\"margin: 10px 0 0 0;\">\r\n                                                    <div class=\"smily-section\" *ngFor=\"let param of feedback.feedbackParameteres;let paramIndex=index\">\r\n                                                        <div class=\"rolesection\">\r\n                                                            <label for=\"\" class=\"pull-left headtxtsimily\">{{GetFeedbackParameterNames(param.paramId)}}</label>\r\n                                                            <div class=\"material-switch marright\">\r\n                                                                <span><img src=\"assets/img/Bed.png\" *ngIf=\"param.rating==1\" ></span>\r\n                                                            </div>\r\n                                                            <div class=\"material-switch marright\">\r\n                                                                <span><img src=\"assets/img/can-improve.png\" *ngIf=\"param.rating==2\"></span>\r\n                                                            </div>\r\n                                                            <div class=\"material-switch marright\">\r\n                                                                <span><img src=\"assets/img/Good.png\" *ngIf=\"param.rating==3\"></span>\r\n                                                            </div>\r\n                                                            <div class=\"material-switch marright\">\r\n                                                                <span><img src=\"assets/img/very-good.png\" *ngIf=\"param.rating==4\"></span>\r\n                                                            </div>\r\n                                                            <div class=\"material-switch marright\">\r\n                                                                <span><img src=\"assets/img/Excellent.png\" *ngIf=\"param.rating==5\"></span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"feedback-area\">\r\n                                                <textarea class=\"form-control\"\r\n                                                    placeholder=\"Write your feedback here\" [(ngModel)]=\"feedback.description\" disabled></textarea>\r\n                                                <!-- <div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <div class=\"checkbox\">\r\n                                                            <input id=\"checkbox1\" type=\"checkbox\" [(ngModel)]=\"feedback.blindRequest\" >\r\n                                                            <label for=\"checkbox1\">Send as anonymous</label>\r\n                                                        </div><br>\r\n                                                        <input type=\"submit\" name=\"submit\" value=\"Login\"\r\n                                                            class=\"btn btn-primary\">\r\n                                                    </div>\r\n                                                    <input type=\"submit\" value=\"Submit\" class=\"btn btn-normal\" (click)=\"SubmitFeedback(feedback)\" >\r\n                                                </div> -->\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"message-create\"><i class=\"fa fa-comments-o\"\r\n                                                aria-hidden=\"true\"></i></span>\r\n                                    </div>\r\n                                </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Pane 2 ###############################################################################################-->\r\n                        <div id=\"my-feedback\" class=\"tab-pane fade\">\r\n                            <div class=\"table-full-width\">\r\n                                <span class=\"light-text\"></span>\r\n                                <ul class=\"feedback-list\">\r\n                                    <li *ngFor=\"let data of MyFeedbackList\">\r\n                                        <div class=\"media\">\r\n                                            <div class=\"media-left\" *ngIf=\"data.blindRequest==false\">\r\n                                                <a href=\"#\">\r\n                                                    <img class=\"media-object\" src=\"assets/img/faces/face-1.jpg\"\r\n                                                        alt=\"...\">\r\n                                                </a>\r\n                                            </div>\r\n                                            <div class=\"media-body\">\r\n                                                <div class=\"row\">\r\n                                                    <div class=\"col-md-4\" *ngIf=\"data.blindRequest==false\">\r\n                                                        <h4 class=\"media-heading\">{{GetEmployeeNameBasedOnId(data.feedbackFromId)}}</h4>\r\n                                                        <p class=\"gray-text\">{{getDesignationNameForEmployee(data.feedbackFromId)}}</p>\r\n                                                        <p><a\r\n                                                                href=\"mailto:angeljohnson@gmail.com\">{{GetEmployeeEmailBasedOnId(data.feedbackFromId)}}</a>\r\n                                                        </p>\r\n                                                    </div>\r\n                                                    <div class=\"col-md-4\" *ngIf=\"data.blindRequest==true\">\r\n                                                      <h4 class=\"media-heading\">Anonymous</h4>\r\n                                                  </div>\r\n                                                    <div class=\"col-md-7\">\r\n                                                        <p>{{data.description}}</p>\r\n                                                    </div>\r\n                                                    <div class=\"permission-section\">\r\n                                                        <div class=\"smily-section\" *ngFor=\"let element of data.feedbackParameteres\">\r\n                                                            <div class=\"rolesection\">\r\n                                                                <label for=\"\" class=\"pull-left headtxtsimily\">{{GetFeedbackParameterNames(element.paramId)}}</label>\r\n\r\n                                                                    <div class=\"material-switch marright\">\r\n                                                                      <span><img src=\"assets/img/Bed.png\"  *ngIf=\"element.rating==1\"></span>\r\n                                                                  </div>\r\n                                                                  <div class=\"material-switch marright\">\r\n                                                                      <span><img src=\"assets/img/can-improve.png\" *ngIf=\"element.rating==2\"></span>\r\n                                                                  </div>\r\n                                                                  <div class=\"material-switch marright\">\r\n                                                                      <span><img src=\"assets/img/Good.png\" *ngIf=\"element.rating==3\"></span>\r\n                                                                  </div>\r\n\r\n                                                                  <div class=\"material-switch marright\">\r\n                                                                      <span><img src=\"assets/img/very-good.png\" *ngIf=\"element.rating==4\"></span>\r\n                                                                  </div>\r\n                                                                  <div class=\"material-switch marright\">\r\n                                                                      <span><img src=\"assets/img/Excellent.png\" *ngIf=\"element.rating==5\"></span>\r\n                                                                  </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                                <div class=\"feedback-area\" *ngIf=\"data.feedbackStatus==2\">\r\n                                                  <textarea class=\"form-control\" [(ngModel)]=\"data.feedbackReply\"\r\n                                                      placeholder=\"Write your feedback here\"></textarea>\r\n                                                  <input type=\"submit\" value=\"Submit\" class=\"btn btn-normal\" (click)=\"SubmitFeedbackReply(data)\" >\r\n                                              </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FeedbackService } from '../feedback.service';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  Validators,\r\n  ReactiveFormsModule,\r\n} from '@angular/forms';\r\nimport * as $ from 'jquery';\r\nimport { MessageService } from 'primeng/api';\r\nimport { UserService } from '../../../Services/user.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-team-feedback',\r\n  templateUrl: './team-feedback.component.html',\r\n  styleUrls: ['./team-feedback.component.css'],\r\n})\r\nexport class TeamFeedbackComponent implements OnInit {\r\n  CreateForm: FormGroup;\r\n  FeedbackForm: FormGroup;\r\n  feedbackList: any[] = [];\r\n  ParameterForm: FormGroup;\r\n  ParametersList: any[] = [];\r\n  SelectedList: any[] = [];\r\n  ProjectList: any[];\r\n  TaskList:any[]\r\n  EmployeeList: any[];\r\n  FeedbackListByParamDictionary: Map<number, any[]>;\r\n  selectedProject: String = '';\r\n  FeedbackListParamsKeys:any[]=[];\r\n  SelectedFeedbackFor:any;\r\n\r\n  constructor(\r\n    private feedbackService: FeedbackService,\r\n    private messageService: MessageService,\r\n    private userservice: UserService,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    $('.slide-close').on('click', function () {\r\n      $(this).parent().removeClass('open-slide');\r\n      $('body').removeClass('gray-over');\r\n    });\r\n\r\n\r\n\r\n\r\n this.feedbackService.GetProjectList(-1).subscribe((res) => {\r\n      this.ProjectList = res.dataObj;\r\n      console.log('projectList ' + this.ProjectList);\r\n    });\r\n\r\n    this.feedbackService.GetEmployeeData().subscribe((res) => {\r\n      console.log('employeeList ' + res.dataObj.employeeFname);\r\n      this.EmployeeList = res.dataObj;\r\n      this.EmployeeList.forEach((element) => {\r\n        element.FullName =\r\n          element.employee.employeeFname + ' ' + element.employee.employeeMname;\r\n      });\r\n    });\r\n    this.feedbackService\r\n  }\r\n\r\n  initialiseCreateForm = function () {\r\n    $('#add-task').addClass('open-slide');\r\n    $('body').addClass('gray-over');\r\n\r\n    this.CreateForm = this.fb.group({\r\n      projectId: ['', Validators.required],\r\n      taskId:['',Validators.required],\r\n      feedbackForId: ['', Validators.required],\r\n      feedbackFromId: ['', Validators.required],\r\n      feedbackReply: ['', Validators.required],\r\n      feedbackRequesterId: [\r\n        this.userservice.LoggedInUser.Id,\r\n        Validators.required,\r\n      ],\r\n      feedbackStatus: [1, Validators.required],\r\n      feedbackParameteres: [this.SelectedList, Validators.required],\r\n      blindRequest:[false]\r\n    });\r\n    this.intialiseAddParameter();\r\n  };\r\n\r\n  createButtonClicked = function () {\r\n    this.initialiseCreateForm();\r\n  };\r\n\r\n  SelectProjectChanged = function (id) {\r\n    this.feedbackService.GetTaskByProjectId(id).subscribe((res) => {\r\n      this.CreateForm.patchValue({\r\n        taskId: ''\r\n      });\r\n      this.TaskList = res.dataObj;\r\n      console.log(this.TaskList);\r\n    });\r\n  }\r\n\r\n  intialiseAddParameter = function () {\r\n    this.ParameterForm = this.fb.group({\r\n      paramId: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n    });\r\n    this.ParametersList = [\r\n      { paramId: 1, description: 'Team Player' },\r\n      { paramId: 2, description: 'Willingness to help other' },\r\n      { paramId: 3, description: 'Communications Skills' },\r\n      { paramId: 4, description: 'Motivate colleague' },\r\n      { paramId: 5, description: 'Leadership qualities' },\r\n      { paramId: 6, description: 'Strength' },\r\n      { paramId: 7, description: 'Weakness' },\r\n      { paramId: 8, description: 'Creativity' },\r\n    ];\r\n  };\r\n\r\n  addToSelectList(id) {\r\n    console.log('id ' + id);\r\n    for (let param of this.SelectedList) {\r\n      if (param.paramId == id) {\r\n        return;\r\n      }\r\n    }\r\n    this.ParametersList.forEach((element) => {\r\n      console.log(element.paramId);\r\n      if (element.paramId == id) {\r\n        this.SelectedList.push(element);\r\n      }\r\n    });\r\n  }\r\n\r\n  ResetForm() {\r\n    this.CreateForm.reset;\r\n    this.SelectedList = [];\r\n  }\r\n  RemoveParamFromSelectList(element) {\r\n    this.SelectedList.splice(this.SelectedList.indexOf(element), 1);\r\n  }\r\n\r\n  CreateButtonClicked = function (data) {\r\n    console.log(data);\r\n    this.feedbackService.createFeedback(data).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          console.log(res);\r\n          this.feedbackList.push(res.dataObj);\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Feedback request Created',\r\n            detail: 'Feedback request Created successfully',\r\n          });\r\n          this.ResetForm();\r\n          this.CancelButtonClick();\r\n        } else {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Failed',\r\n            detail: res.errorMsg,\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        this.messageService.add({\r\n          severity: 'error',\r\n          summary: 'Failed',\r\n          detail: 'Something went wrong please try after some time',\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  ProjectFilterChange(id) {\r\n    console.log(\"project chage\")\r\n    this.feedbackService.GetFeedbackByParam({ projectId: id }).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          console.log(\"test\");\r\n          this.FeedbackListByParamDictionary = this.getForRequestSummary(res.dataObj);\r\n          // this.FeedbackListParams=[];\r\n          // var keys=feedbackListByParamDictionary.keys();\r\n          // for (let index = 0; index < keys; index++) {\r\n          //   const element = array[index];\r\n\r\n          // }\r\n          console.log(this.FeedbackListByParamDictionary);\r\n        } else {\r\n        }\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  UpdateProjectDetails(list) {\r\n    for (let index = 0; index < this.ProjectList.length; index++) {\r\n      const element = list[index];\r\n      var project = this.getProject(element.projectId);\r\n      list[index].projectName = project ? project.projectName : '';\r\n    }\r\n  }\r\n\r\n  UpdateEmployeeData(list) {\r\n    for (let index = 0; index < list.length; index++) {\r\n      const element = list[index];\r\n      var employee = this.GetEmployeeDataBasedOnId(element.feedbackForId);\r\n\r\n      list[index].emailId = employee ? employee.employee.employeeEmail : '';\r\n      list[index].designation = employee\r\n        ? employee.designation.designationName\r\n        : '';\r\n      list[index].name = employee\r\n        ? employee.employee.employeeFname +\r\n          ' ' +\r\n          employee.employee.employeeMname\r\n        : '';\r\n    }\r\n  }\r\n\r\n  GetEmployeeDataBasedOnId(id) {\r\n    for (let index = 0; index < this.EmployeeList.length; index++) {\r\n      const element = this.EmployeeList[index];\r\n      if ((element.employee.employeeId == id)) {\r\n        return element;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  GetEmployeeNameBasedOnId(id) {\r\n    for (let index = 0; index < this.EmployeeList.length; index++) {\r\n      const element = this.EmployeeList[index];\r\n      if ((element.employee.employeeId == id)) {\r\n        return element.employee.employeeFname+\" \"+element.employee.employeeMname;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  GetEmployeeEmailBasedOnId(id) {\r\n    for (let index = 0; index < this.EmployeeList.length; index++) {\r\n      const element = this.EmployeeList[index];\r\n      if ((element.employee.employeeId == id)) {\r\n        return element.employee.employeeEmail;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getProject(id) {\r\n    for (let index = 0; index < this.ProjectList.length; index++) {\r\n      const element = this.ProjectList[index];\r\n      if ((element.projectId == id)) {\r\n        return element;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n  getProjectName(id) {\r\n    for (let index = 0; index < this.ProjectList.length; index++) {\r\n      const element = this.ProjectList[index];\r\n      if ((element.projectId == id)) {\r\n        return element.projectName;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n\r\n\r\n  getDesignationNameForEmployee(empId) {\r\n    for (let index = 0; index < this.EmployeeList.length; index++) {\r\n      const element = this.EmployeeList[index];\r\n      if ((element.employee.employeeId == empId)) {\r\n        return element.designation.designationName;\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getForRequestSummary(list) {\r\n    var forDictionary: Map<number, any[]>=new Map<number,any[]>();\r\n    if (list) {\r\n      for (let index = 0; index < list.length; index++) {\r\n        const feedback = list[index];\r\n        var feedbackemployeeList: any[] = [];\r\n        if (forDictionary && forDictionary.has(feedback.feedbackForId)) {\r\n          feedbackemployeeList = forDictionary.get(feedback.feedbackForId);\r\n        }\r\n        feedbackemployeeList.push(feedback);\r\n        forDictionary.set(feedback.feedbackForId, feedbackemployeeList);\r\n      }\r\n    }\r\n    return forDictionary;\r\n  }\r\n\r\n  DateFilterChange(data)\r\n  {\r\n    console.log(data);\r\n    console.log(\"date chage\")\r\n    this.feedbackService.GetFeedbackByParam({ feedbackCreatedDate: data }).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          console.log(\"test\");\r\n          this.FeedbackListByParamDictionary = this.getForRequestSummary(res.dataObj);\r\n          console.log(this.FeedbackListByParamDictionary);\r\n        } else {\r\n        }\r\n      },\r\n      (error) => {}\r\n    );\r\n  }\r\n\r\n  CancelButtonClick(){\r\n    this.ResetForm();\r\n    $('.slide-close').parent().removeClass('open-slide');\r\n    $('body').removeClass('gray-over');\r\n  }\r\n}\r\n","<div class=\"main-panel\">\r\n  <div class=\"content\" style=\"background-color: #daebeb;\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"col-md-4 pull-right\">\r\n            <input type=\"submit\" value=\"Create Feedback Request\" (click)=\"createButtonClicked()\"\r\n              class=\"team btn btn-primary add-feedback\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-container\">\r\n        <div class=\"form-section\">\r\n          <div class=\"col-lg-12 permission-heading\">\r\n            <h4 style=\"font-size: 20px; font-weight: 600;\">\r\n              To see the project wise feedback select a project or simply select\r\n              a date\r\n            </h4>\r\n          </div>\r\n          <div class=\"oradd\">\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label style=\"font-size: 16px;\" for=\"\">Select Project</label>\r\n                <select class=\"form-control\" (change)=\"ProjectFilterChange($event.target.value)\">\r\n                  <option value=\"\">Select project</option>\r\n                  <option *ngFor=\"let project of ProjectList\" value=\"{{ project.projectId }}\">{{ project.projectName }}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <span>or</span>\r\n            <div class=\"col-lg-6\">\r\n              <div class=\"form-group\">\r\n                <label style=\"font-size: 16px;\" for=\"\">Select Date</label>\r\n                <input type=\"date\" class=\"form-control\" (change)=\"DateFilterChange($event.target.value)\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"requested-feedback\" class=\"tab-pane fade active in\" *ngIf=\"FeedbackListByParamDictionary\">\r\n        <div class=\"table-full-width\">\r\n          <div class=\"clearfix\">\r\n            <ul class=\"team-member\">\r\n              <li class=\"feedback-width\" *ngFor=\"\r\n                  let feedbackData of FeedbackListByParamDictionary | keyvalue\r\n                \" (click)=\"SelectedFeedbackFor = feedbackData.value\">\r\n                <div class=\"team-thumb\"></div>\r\n                <h4>\r\n                  {{ GetEmployeeNameBasedOnId(feedbackData.key)\r\n                  }}<strong>{{\r\n                    getDesignationNameForEmployee(feedbackData.key)\r\n                  }}</strong>\r\n                </h4>\r\n                <a href=\"#\">Request from : {{ feedbackData.value.length }} Memeber</a>\r\n                <a href=\"#\">Project Name :\r\n                  {{ getProjectName(feedbackData.value[0].projectId) }}</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"SelectedFeedbackFor\">\r\n        <div class=\"header\">\r\n          <h4 class=\"title\">Feedback Received to {{GetEmployeeNameBasedOnId(SelectedFeedbackFor[0].feedbackForId)}}</h4>\r\n        </div>\r\n        <ul class=\"feedback-list\">\r\n          <li *ngFor=\"let feedback of SelectedFeedbackFor\">\r\n            <div class=\"media\">\r\n              <div class=\"media-left\">\r\n                <a href=\"#\">\r\n                  <img class=\"media-object\" src=\"assets/img/faces/face-1.jpg\" alt=\"...\" />\r\n                </a>\r\n              </div>\r\n              <div class=\"media-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <h4 class=\"media-heading\">{{GetEmployeeNameBasedOnId(feedback.feedbackFromId)}}</h4>\r\n                    <p class=\"gray-text\">{{ getDesignationNameForEmployee(feedback.feedbackFromId)}}</p>\r\n                    <p>\r\n                      <a href=\"mailto:angeljohnson@gmail.com\">{{GetEmployeeEmailBasedOnId(feedback.feedbackFromId)}}</a>\r\n                    </p>\r\n                  </div>\r\n                  <div class=\"col-md-7\">\r\n                    <p *ngIf=\"feedback.feedbackStatus=='2' ||feedback.feedbackStatus=='3' \">\r\n                      {{feedback.description}}\r\n                    </p>\r\n                    <h3 *ngIf=\"feedback.feedbackStatus=='1'\">\r\n                      Feedback pending\r\n                    </h3>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"slide-popup\" id=\"add-task\">\r\n  <div class=\"slide-close\">\r\n    <i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n  </div>\r\n  <div class=\"slide-content\">\r\n    <h3>Create Feedback Request</h3>\r\n    <form *ngIf=\"CreateForm != null\" [formGroup]=\"CreateForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Select Project</label>\r\n        <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"projectId\"\r\n          (change)=\"SelectProjectChanged(CreateForm.controls['projectId'].value)\">\r\n          <option value=\"\">Select Project</option>\r\n          <option *ngFor=\"let project of ProjectList\" value=\"{{ project.projectId }}\">\r\n            {{ project.projectName }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Select Task</label>\r\n        <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"taskId\">\r\n          <option value=\"\">Select Task</option>\r\n          <option *ngFor=\"let task of TaskList\" value=\"{{ task.taskId }}\">\r\n            {{ task.taskHeading }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Feedback For Employee</label>\r\n        <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"feedbackForId\">\r\n          <option value=\"\">Select For Employee</option>\r\n          <option *ngFor=\"let employee of EmployeeList\" value=\"{{ employee.employee.employeeId }}\">\r\n            {{ employee.FullName }}</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"\">Feedback From Employee</label>\r\n        <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"feedbackFromId\">\r\n          <option value=\"\">Select From Employee</option>\r\n          <option *ngFor=\"let employee of EmployeeList\" value=\"{{ employee.employee.employeeId }}\">\r\n            {{ employee.FullName }}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"selectwith-button removepad\">\r\n        <div class=\"form-group\" [formGroup]=\"ParameterForm\">\r\n          <label for=\"\">Select Criteria</label>\r\n          <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"paramId\">\r\n            <option value=\"\">Select From Employee</option>\r\n            <option *ngFor=\"let parameter of ParametersList\" value=\"{{ parameter.paramId }}\">\r\n              {{ parameter.description }}</option>\r\n          </select>\r\n          <button class=\"btn btn-primary\" (click)=\"addToSelectList(ParameterForm.controls.paramId.value)\">\r\n            ADD\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <ul class=\"selected-user\">\r\n          <li *ngFor=\"let param of SelectedList\">\r\n            <span class=\"user-thumb\"></span>\r\n            <p>{{ param.description }}</p>\r\n            <i class=\"fa fa-times\" (click)=\"RemoveParamFromSelectList(param)\"></i>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <input class=\"col-sm-3\" type=\"submit\" value=\"Create Feedback Request\" class=\"btn btn-primary\"\r\n          (click)=\"CreateButtonClicked(CreateForm.value)\" />\r\n        <input class=\"col-sm-3\" type=\"button\" value=\"Cancel\" class=\"btn btn-primary\" (click)=\"CancelButtonClick()\" />\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n"]}