{"version":3,"sources":["./src/app/Features/login/login-routing.module.ts","./src/app/Features/login/login.component.ts","./src/app/Features/login/login.component.html","./src/app/Features/login/login.module.ts","./src/app/Features/login/login.service.ts"],"names":[],"mappings":"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","file":"Features-login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent,data :{ Title:'',ShowHeader:false,ShowNavBar:false} }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { LoginService } from './login.service';\r\nimport { LayoutService } from '../../Services/layout.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { User } from '../../Entities/User';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  LoginForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginService: LoginService,\r\n    private layoutService: LayoutService,\r\n    private router: Router,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('login');\r\n    this.layoutService.UpdateLayout(false, false, false, false);\r\n    this.LoginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit = function (data) {\r\n    this.loginService.LoginFunction(data).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          this.loginService.getEmployee(res.dataObj.email, res.dataObj.companyInfo).subscribe(\r\n            (res2) => {\r\n              if (res2.errorCode == 0) {\r\n                this.loginService\r\n                  .getPermissions(res.dataObj.companyInfo, res2.dataObj[0].employeeId)\r\n                  .subscribe((res3) => {\r\n                    if (res3.errorCode == 0) {\r\n\r\n                      var user = new User();\r\n                      user.Id = res2.dataObj[0].employeeId;\r\n                      user.Name = res.dataObj.name;\r\n                      user.EmailId = res.dataObj.email;\r\n                      user.PortalName = res.dataObj.companyInfo;\r\n                      user.Permissions = res3.dataObj.employeeElementMappingList;\r\n                      console.log(res2);\r\n                      console.log('test');\r\n                      console.log(user);\r\n                      localStorage.setItem(\r\n                        'access_token',\r\n                        JSON.stringify(user)\r\n                      );\r\n                      this.router.navigateByUrl('/dashboard');\r\n                    }\r\n                  });\r\n              } else {\r\n                this.messageService.add({\r\n                  severity: 'error',\r\n                  summary: 'Get company failed',\r\n                  detail: 'Via MessageService',\r\n                });\r\n              }\r\n            },\r\n            (err) => {\r\n              this.messageService.add({\r\n                severity: 'error',\r\n                summary: 'Get company failed',\r\n                detail: 'Via MessageService',\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Login failed',\r\n            detail: 'Via MessageService',\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n","<div class=\" login-bg\">\r\n    <div class=\"overlay\">\r\n        <div class=\"sidebar\">\r\n            <div class=\"sidebar-wrapper\">\r\n                <ul class=\"nav\">\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"main-panel\">\r\n            <div class=\"login\">\r\n                <div class=\"welcome-heading\">\r\n                    <h3 class=\"heading-1\">Welcome back!<br />Sign in to Continue</h3>\r\n\r\n                    <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n                </div>\r\n\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-wrapper\">\r\n                    <form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit(LoginForm.value)\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Email</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Email Address\"\r\n                                formControlName=\"email\">\r\n                                <span class=\"error\" *ngIf=\"!LoginForm.controls['email'].valid&&(LoginForm.controls['email'].dirty || LoginForm.controls['email'].touched)\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                    provide Email</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\"\r\n                                formControlName=\"password\">\r\n                                <span class=\"error\" *ngIf=\"!LoginForm.controls['password'].valid&&(LoginForm.controls['password'].dirty || LoginForm.controls['password'].touched)\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                    provide Password</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <input id=\"checkbox1\" type=\"checkbox\">\r\n                                <label for=\"checkbox1\">Remember me </label>\r\n                            </div><br />\r\n                            <input type=\"submit\" name=\"submit\" value=\"Login\" class=\"btn btn-primary\" [disabled]=\"!LoginForm.valid\">\r\n\r\n                        </div>\r\n\t\t\t\t\t\t<div class=\"frpass\">New To Emformance? <a [routerLink]=\"['/']\">Signup</a></div>\r\n                        <div class=\"frpass\"><a href=\"\">Forgot your password?</a></div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {LoginService} from './login.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ToastModule} from 'primeng/toast';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,ReactiveFormsModule,HttpClientModule,ToastModule\r\n  ],\r\n  providers:[LoginService]\r\n})\r\nexport class LoginModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../../environments/environment'\r\nimport { UserService } from '../../Services/user.service';\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  url: string = environment.url;\r\n  constructor(private httpClient: HttpClient,private userService:UserService) { }\r\n\r\n  LoginFunction = function (data) {\r\n    return this.httpClient.post(this.url+environment.login, data);\r\n  }\r\n\r\n  getCompany=function(email){\r\n    return this.httpClient.post(this.url+environment.getCompany, {adminEmail: email});\r\n  }\r\n  TestFunction = function () {\r\n    console.log(\"test\");\r\n    return this.httpClient.get(this.url+\"getProjectList\");\r\n  }\r\n\r\n  getPermissions=function(portalName,id){\r\n    return this.httpClient.get( 'http://3.133.244.20:8080/' + portalName + '/emf/'+environment.getEmployeeElementsMapping+id);\r\n  }\r\n\r\n  getEmployee=function(email,portalName)\r\n  {\r\n    return this.httpClient.post(environment.urlPrefix+portalName+environment.urlSuffix+environment.getEmployeeData,{employeeEmail:email});\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}