{"version":3,"sources":["webpack:///src/app/Features/login/login-routing.module.ts","webpack:///src/app/Features/login/login.component.ts","webpack:///src/app/Features/login/login.component.html","webpack:///src/app/Features/login/login.module.ts","webpack:///src/app/Features/login/login.service.ts"],"names":["routes","path","component","data","Title","ShowHeader","ShowNavBar","LoginRoutingModule","forChild","imports","exports","LoginComponent","fb","loginService","layoutService","router","messageService","onSubmit","LoginFunction","subscribe","res","errorCode","getEmployee","dataObj","email","companyInfo","res2","getPermissions","employeeId","res3","user","Id","Name","name","EmailId","PortalName","Permissions","employeeElementMappingList","console","log","localStorage","setItem","JSON","stringify","navigateByUrl","add","severity","summary","detail","err","error","events","event","ngOnInit","UpdateLayout","LoginForm","group","required","password","selector","templateUrl","styleUrls","LoginModule","declarations","providers","LoginService","httpClient","userService","url","post","login","getCompany","adminEmail","TestFunction","get","portalName","id","getEmployeeElementsMapping","urlPrefix","urlSuffix","getEmployeeData","employeeEmail"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CAAC;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,+DAAvB;AAAsCC,UAAI,EAAE;AAAEC,aAAK,EAAC,EAAR;AAAWC,kBAAU,EAAC,KAAtB;AAA4BC,kBAAU,EAAC;AAAvC;AAA5C,KAAD,CAAvB;;QAMaC,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBAHpB,CAAC,6DAAaC,QAAb,CAAsBR,MAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;0HAAlBO,kB,EAAkB;AAAA;AAAA,kBAFnB,4DAEmB;AAAA,O;AAFP,K;;;;;sEAEXA,kB,EAAkB;cAJ9B,sDAI8B;eAJrB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBR,MAAtB,CAAD,CADD;AAERU,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIqB,Q;;;;;;;;;;;;;;;;;;ACX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBgC;;AAA2I;;AAA6D;;AACvL;;;;;;AAMjB;;AAAoJ;;AAA6D;;AAC7L;;;;;;;;QDdvCC,c;AAEX,8BACUC,EADV,EAEUC,YAFV,EAGUC,aAHV,EAIUC,MAJV,EAKUC,cALV,EAKwC;AAAA;;AAAA;;AAJ9B,aAAAJ,EAAA,GAAAA,EAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;;AAkBV,aAAAC,QAAA,GAAW,UAAUd,IAAV,EAAgB;AAAA;;AACzB,eAAKU,YAAL,CAAkBK,aAAlB,CAAgCf,IAAhC,EAAsCgB,SAAtC,CACE,UAACC,GAAD,EAAS;AACP,gBAAIA,GAAG,CAACC,SAAJ,IAAiB,CAArB,EAAwB;AACtB,mBAAI,CAACR,YAAL,CAAkBS,WAAlB,CAA8BF,GAAG,CAACG,OAAJ,CAAYC,KAA1C,EAAiDJ,GAAG,CAACG,OAAJ,CAAYE,WAA7D,EAA0EN,SAA1E,CACE,UAACO,IAAD,EAAU;AACR,oBAAIA,IAAI,CAACL,SAAL,IAAkB,CAAtB,EAAyB;AACvB,uBAAI,CAACR,YAAL,CACGc,cADH,CACkBP,GAAG,CAACG,OAAJ,CAAYE,WAD9B,EAC2CC,IAAI,CAACH,OAAL,CAAa,CAAb,EAAgBK,UAD3D,EAEGT,SAFH,CAEa,UAACU,IAAD,EAAU;AACnB,wBAAIA,IAAI,CAACR,SAAL,IAAkB,CAAtB,EAAyB;AAEvB,0BAAIS,IAAI,GAAG,IAAI,mDAAJ,EAAX;AACAA,0BAAI,CAACC,EAAL,GAAUL,IAAI,CAACH,OAAL,CAAa,CAAb,EAAgBK,UAA1B;AACAE,0BAAI,CAACE,IAAL,GAAYZ,GAAG,CAACG,OAAJ,CAAYU,IAAxB;AACAH,0BAAI,CAACI,OAAL,GAAed,GAAG,CAACG,OAAJ,CAAYC,KAA3B;AACAM,0BAAI,CAACK,UAAL,GAAkBf,GAAG,CAACG,OAAJ,CAAYE,WAA9B;AACAK,0BAAI,CAACM,WAAL,GAAmBP,IAAI,CAACN,OAAL,CAAac,0BAAhC;AACAC,6BAAO,CAACC,GAAR,CAAYb,IAAZ;AACAY,6BAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,6BAAO,CAACC,GAAR,CAAYT,IAAZ;AACAU,kCAAY,CAACC,OAAb,CACE,cADF,EAEEC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAFF;;AAIA,2BAAI,CAACf,MAAL,CAAY6B,aAAZ,CAA0B,YAA1B;AACD;AACF,mBApBH;AAqBD,iBAtBD,MAsBO;AACL,uBAAI,CAAC5B,cAAL,CAAoB6B,GAApB,CAAwB;AACtBC,4BAAQ,EAAE,OADY;AAEtBC,2BAAO,EAAE,oBAFa;AAGtBC,0BAAM,EAAE;AAHc,mBAAxB;AAKD;AACF,eA/BH,EAgCE,UAACC,GAAD,EAAS;AACP,qBAAI,CAACjC,cAAL,CAAoB6B,GAApB,CAAwB;AACtBC,0BAAQ,EAAE,OADY;AAEtBC,yBAAO,EAAE,oBAFa;AAGtBC,wBAAM,EAAE;AAHc,iBAAxB;AAKD,eAtCH;AAwCD,aAzCD,MAyCO;AACL,mBAAI,CAAChC,cAAL,CAAoB6B,GAApB,CAAwB;AACtBC,wBAAQ,EAAE,OADY;AAEtBC,uBAAO,EAAE,cAFa;AAGtBC,sBAAM,EAAE;AAHc,eAAxB;AAKD;AACF,WAlDH,EAmDE,UAACE,KAAD,EAAW;AACTZ,mBAAO,CAACC,GAAR,CAAYW,KAAZ;AACD,WArDH;AAuDD,SAxDD;;AAhBE,aAAKnC,MAAL,CAAYoC,MAAZ,CAAmBhC,SAAnB,CAA6B,UAACiC,KAAD,EAAW;AACtC,cAAIA,KAAK,YAAY,6DAArB,EAAoC;AAClC,kBAAI,CAACC,QAAL;AACD;AACF,SAJD;AAKD;;;;mCAEU;AACTf,iBAAO,CAACC,GAAR,CAAY,OAAZ;AACA,eAAKzB,aAAL,CAAmBwC,YAAnB,CAAgC,KAAhC,EAAuC,KAAvC,EAA8C,KAA9C,EAAqD,KAArD;AACA,eAAKC,SAAL,GAAiB,KAAK3C,EAAL,CAAQ4C,KAAR,CAAc;AAC7BhC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWiC,QAAZ,EAAsB,0DAAWjC,KAAjC,CAAL,CADsB;AAE7BkC,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB;AAFmB,WAAd,CAAjB;AAID;;;;;;;uBAvBU9C,c,EAAc,2H,EAAA,4H,EAAA,uI,EAAA,uH,EAAA,2H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,q2B;AAAA;AAAA;ACjB3B;;AACI;;AACI;;AACI;;AACI;;AAEJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAsB;;AAAa;;AAAM;;AAAmB;;AAE5D;;AAAc;;AAAd;;AACJ;;AAEA;;AACA;;AACI;;AAA8B;AAAA,mBAAY,IAAAM,QAAA,qBAAZ;AAAqC,WAArC;;AAC1B;;AACI;;AAAc;;AAAK;;AACnB;;AAEI;;AAER;;AACA;;AACI;;AAAc;;AAAQ;;AACtB;;AAEI;;AAER;;AAEA;;AACI;;AACI;;AACA;;AAAuB;;AAAY;;AACvC;;AAAM;;AACN;;AAEJ;;AAClB;;AAAoB;;AAAmB;;AAAwB;;AAAM;;AAAI;;AACvD;;AAAoB;;AAAW;;AAAqB;;AAAI;;AAC5D;;AAEJ;;AACJ;;AAKJ;;AAEJ;;AACJ;;;;AArC0B;;AAAA;;AAK0B;;AAAA;;AAOA;;AAAA;;AASiD;;AAAA;;AAGrD;;AAAA;;;;;;;;;sEDzBnCN,c,EAAc;cAL1B,uDAK0B;eALhB;AACTgD,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,iBAFZ,CAAC,2DAAD,C;AAAc,gBAJf,CACP,4DADO,EAEP,wEAFO,EAEY,kEAFZ,EAEgC,qEAFhC,EAEiD,yDAFjD,CAIe;;;;0HAEbA,W,EAAW;AAAA,uBAPP,+DAOO;AAPO,kBAE3B,4DAF2B,EAG3B,wEAH2B,EAGR,kEAHQ,EAGY,qEAHZ,EAG6B,yDAH7B;AAOP,O;AAJ+C,K;;;;;sEAI1DA,W,EAAW;cARvB,sDAQuB;eARd;AACRC,sBAAY,EAAE,CAAC,+DAAD,CADN;AAERtD,iBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAEY,kEAFZ,EAEgC,qEAFhC,EAEiD,yDAFjD,CAFD;AAMRuD,mBAAS,EAAC,CAAC,2DAAD;AANF,S;AAQc,Q;;;;;;;;;;;;;;;;;;AClBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GAEX,sBAAoBC,UAApB,EAAmDC,WAAnD,EAA4E;AAAA;;AAAxD,WAAAD,UAAA,GAAAA,UAAA;AAA+B,WAAAC,WAAA,GAAAA,WAAA;AADnD,WAAAC,GAAA,GAAc,sEAAYA,GAA1B;;AAGA,WAAAlD,aAAA,GAAgB,UAAUf,IAAV,EAAgB;AAC9B,eAAO,KAAK+D,UAAL,CAAgBG,IAAhB,CAAqB,KAAKD,GAAL,GAAS,sEAAYE,KAA1C,EAAiDnE,IAAjD,CAAP;AACD,OAFD;;AAIA,WAAAoE,UAAA,GAAW,UAAS/C,KAAT,EAAc;AACvB,eAAO,KAAK0C,UAAL,CAAgBG,IAAhB,CAAqB,KAAKD,GAAL,GAAS,sEAAYG,UAA1C,EAAsD;AAACC,oBAAU,EAAEhD;AAAb,SAAtD,CAAP;AACD,OAFD;;AAGA,WAAAiD,YAAA,GAAe,YAAY;AACzBnC,eAAO,CAACC,GAAR,CAAY,MAAZ;AACA,eAAO,KAAK2B,UAAL,CAAgBQ,GAAhB,CAAoB,KAAKN,GAAL,GAAS,gBAA7B,CAAP;AACD,OAHD;;AAKA,WAAAzC,cAAA,GAAe,UAASgD,UAAT,EAAoBC,EAApB,EAAsB;AACnC,eAAO,KAAKV,UAAL,CAAgBQ,GAAhB,CAAqB,8BAA8BC,UAA9B,GAA2C,OAA3C,GAAmD,sEAAYE,0BAA/D,GAA0FD,EAA/G,CAAP;AACD,OAFD;;AAIA,WAAAtD,WAAA,GAAY,UAASE,KAAT,EAAemD,UAAf,EAAyB;AAEnC,eAAO,KAAKT,UAAL,CAAgBG,IAAhB,CAAqB,sEAAYS,SAAZ,GAAsBH,UAAtB,GAAiC,sEAAYI,SAA7C,GAAuD,sEAAYC,eAAxF,EAAwG;AAACC,uBAAa,EAACzD;AAAf,SAAxG,CAAP;AACD,OAHD;AAlB+E,K;;;uBAFpEyC,Y,EAAY,uH,EAAA,0H;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q","file":"Features-login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent,data :{ Title:'',ShowHeader:false,ShowNavBar:false} }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { LoginService } from './login.service';\r\nimport { LayoutService } from '../../Services/layout.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\nimport { User } from '../../Entities/User';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  LoginForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginService: LoginService,\r\n    private layoutService: LayoutService,\r\n    private router: Router,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.ngOnInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('login');\r\n    this.layoutService.UpdateLayout(false, false, false, false);\r\n    this.LoginForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  onSubmit = function (data) {\r\n    this.loginService.LoginFunction(data).subscribe(\r\n      (res) => {\r\n        if (res.errorCode == 0) {\r\n          this.loginService.getEmployee(res.dataObj.email, res.dataObj.companyInfo).subscribe(\r\n            (res2) => {\r\n              if (res2.errorCode == 0) {\r\n                this.loginService\r\n                  .getPermissions(res.dataObj.companyInfo, res2.dataObj[0].employeeId)\r\n                  .subscribe((res3) => {\r\n                    if (res3.errorCode == 0) {\r\n\r\n                      var user = new User();\r\n                      user.Id = res2.dataObj[0].employeeId;\r\n                      user.Name = res.dataObj.name;\r\n                      user.EmailId = res.dataObj.email;\r\n                      user.PortalName = res.dataObj.companyInfo;\r\n                      user.Permissions = res3.dataObj.employeeElementMappingList;\r\n                      console.log(res2);\r\n                      console.log('test');\r\n                      console.log(user);\r\n                      localStorage.setItem(\r\n                        'access_token',\r\n                        JSON.stringify(user)\r\n                      );\r\n                      this.router.navigateByUrl('/dashboard');\r\n                    }\r\n                  });\r\n              } else {\r\n                this.messageService.add({\r\n                  severity: 'error',\r\n                  summary: 'Get company failed',\r\n                  detail: 'Via MessageService',\r\n                });\r\n              }\r\n            },\r\n            (err) => {\r\n              this.messageService.add({\r\n                severity: 'error',\r\n                summary: 'Get company failed',\r\n                detail: 'Via MessageService',\r\n              });\r\n            }\r\n          );\r\n        } else {\r\n          this.messageService.add({\r\n            severity: 'error',\r\n            summary: 'Login failed',\r\n            detail: 'Via MessageService',\r\n          });\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n}\r\n","<div class=\" login-bg\">\r\n    <div class=\"overlay\">\r\n        <div class=\"sidebar\">\r\n            <div class=\"sidebar-wrapper\">\r\n                <ul class=\"nav\">\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"main-panel\">\r\n            <div class=\"login\">\r\n                <div class=\"welcome-heading\">\r\n                    <h3 class=\"heading-1\">Welcome back!<br />Sign in to Continue</h3>\r\n\r\n                    <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n                </div>\r\n\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-wrapper\">\r\n                    <form [formGroup]=\"LoginForm\" (ngSubmit)=\"onSubmit(LoginForm.value)\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Email</label>\r\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Email Address\"\r\n                                formControlName=\"email\">\r\n                                <span class=\"error\" *ngIf=\"!LoginForm.controls['email'].valid&&(LoginForm.controls['email'].dirty || LoginForm.controls['email'].touched)\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                    provide Email</span>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Enter Your Password\"\r\n                                formControlName=\"password\">\r\n                                <span class=\"error\" *ngIf=\"!LoginForm.controls['password'].valid&&(LoginForm.controls['password'].dirty || LoginForm.controls['password'].touched)\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                                    provide Password</span>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <div class=\"checkbox\">\r\n                                <input id=\"checkbox1\" type=\"checkbox\">\r\n                                <label for=\"checkbox1\">Remember me </label>\r\n                            </div><br />\r\n                            <input type=\"submit\" name=\"submit\" value=\"Login\" class=\"btn btn-primary\" [disabled]=\"!LoginForm.valid\">\r\n\r\n                        </div>\r\n\t\t\t\t\t\t<div class=\"frpass\">New To Emformance? <a [routerLink]=\"['/']\">Signup</a></div>\r\n                        <div class=\"frpass\"><a href=\"\">Forgot your password?</a></div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {LoginService} from './login.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ToastModule} from 'primeng/toast';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,ReactiveFormsModule,HttpClientModule,ToastModule\r\n  ],\r\n  providers:[LoginService]\r\n})\r\nexport class LoginModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../../environments/environment'\r\nimport { UserService } from '../../Services/user.service';\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  url: string = environment.url;\r\n  constructor(private httpClient: HttpClient,private userService:UserService) { }\r\n\r\n  LoginFunction = function (data) {\r\n    return this.httpClient.post(this.url+environment.login, data);\r\n  }\r\n\r\n  getCompany=function(email){\r\n    return this.httpClient.post(this.url+environment.getCompany, {adminEmail: email});\r\n  }\r\n  TestFunction = function () {\r\n    console.log(\"test\");\r\n    return this.httpClient.get(this.url+\"getProjectList\");\r\n  }\r\n\r\n  getPermissions=function(portalName,id){\r\n    return this.httpClient.get( 'http://3.133.244.20:8080/' + portalName + '/emf/'+environment.getEmployeeElementsMapping+id);\r\n  }\r\n\r\n  getEmployee=function(email,portalName)\r\n  {\r\n    return this.httpClient.post(environment.urlPrefix+portalName+environment.urlSuffix+environment.getEmployeeData,{employeeEmail:email});\r\n  }\r\n}\r\n"]}