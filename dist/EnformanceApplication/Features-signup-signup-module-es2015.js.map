{"version":3,"sources":["./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-progressbar.js","./src/app/Features/signup/email-verification/email-verification.component.ts","./src/app/Features/signup/email-verification/email-verification.component.html","./src/app/Features/signup/signup-routing.module.ts","./src/app/Features/signup/signup.component.ts","./src/app/Features/signup/signup.component.html","./src/app/Features/signup/signup.module.ts","./src/app/Features/signup/signup.service.ts"],"names":[],"mappings":"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","file":"Features-signup-signup-module-es2015.js","sourcesContent":["import { Input, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction ProgressBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"display\", ctx_r0.value != null ? \"block\" : \"none\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\"\", ctx_r0.value, \"\", ctx_r0.unit, \"\");\n} }\nconst _c0 = function (a1, a2) { return { \"ui-progressbar ui-widget ui-widget-content ui-corner-all\": true, \"ui-progressbar-determinate\": a1, \"ui-progressbar-indeterminate\": a2 }; };\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet ProgressBar = class ProgressBar {\n    constructor() {\n        this.showValue = true;\n        this.unit = '%';\n        this.mode = 'determinate';\n    }\n};\nProgressBar.ɵfac = function ProgressBar_Factory(t) { return new (t || ProgressBar)(); };\nProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ProgressBar, selectors: [[\"p-progressBar\"]], inputs: { showValue: \"showValue\", unit: \"unit\", mode: \"mode\", value: \"value\", style: \"style\", styleClass: \"styleClass\" }, decls: 3, vars: 11, consts: [[\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 3, \"ngStyle\", \"ngClass\"], [1, \"ui-progressbar-value\", \"ui-progressbar-value-animate\", \"ui-widget-header\", \"ui-corner-all\", 2, \"display\", \"block\"], [\"class\", \"ui-progressbar-label\", 3, \"display\", 4, \"ngIf\"], [1, \"ui-progressbar-label\"]], template: function ProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, ProgressBar_div_2_Template, 2, 4, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c0, ctx.mode === \"determinate\", ctx.mode === \"indeterminate\"));\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.value);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.value + \"%\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    } }, directives: [ɵngcc1.NgStyle, ɵngcc1.NgClass, ɵngcc1.NgIf], encapsulation: 2 });\n__decorate([\n    Input()\n], ProgressBar.prototype, \"value\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"showValue\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"style\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"styleClass\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"unit\", void 0);\n__decorate([\n    Input()\n], ProgressBar.prototype, \"mode\", void 0);\nlet ProgressBarModule = class ProgressBarModule {\n};\nProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ProgressBarModule });\nProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ProgressBarModule_Factory(t) { return new (t || ProgressBarModule)(); }, imports: [[CommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'p-progressBar',\n                template: `\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" role=\"progressbar\" aria-valuemin=\"0\" [attr.aria-valuenow]=\"value\" aria-valuemax=\"100\"\n            [ngClass]=\"{'ui-progressbar ui-widget ui-widget-content ui-corner-all': true, 'ui-progressbar-determinate': (mode === 'determinate'), 'ui-progressbar-indeterminate': (mode === 'indeterminate')}\">\n            <div class=\"ui-progressbar-value ui-progressbar-value-animate ui-widget-header ui-corner-all\" [style.width]=\"value + '%'\" style=\"display:block\"></div>\n            <div class=\"ui-progressbar-label\" [style.display]=\"value != null ? 'block' : 'none'\" *ngIf=\"showValue\">{{value}}{{unit}}</div>\n        </div>\n    `,\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return []; }, { showValue: [{\n            type: Input\n        }], unit: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ProgressBarModule, { declarations: function () { return [ProgressBar]; }, imports: function () { return [CommonModule]; }, exports: function () { return [ProgressBar]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [ProgressBar],\n                declarations: [ProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProgressBar, ProgressBarModule };\n\n//# sourceMappingURL=primeng-progressbar.js.map","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { SignupService } from '../signup.service';\r\nimport { EmployeePermissions } from '../../../Entities/EmployeePermissions';\r\nimport { EmployeeRoleElement } from '../../../Entities/EmployeeRoleElement';\r\nimport { ElementOperation } from '../../../Entities/ElementOperation';\r\n\r\n\r\n@Component({\r\n  selector: 'app-email-verification',\r\n  templateUrl: './email-verification.component.html',\r\n  styleUrls: ['./email-verification.component.css']\r\n})\r\nexport class EmailVerificationComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute, private signupService: SignupService, private router: Router) { }\r\n  loading: boolean = false;\r\n  message: string = \"\";\r\n  verified: boolean;\r\n  OperationsData: any[];\r\n  ElementsData: any[];\r\n\r\n  ngOnInit(): void {\r\n    this.loading = true;\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var token = params.get(\"tokenId\");\r\n      console.log(token);\r\n      this.signupService.ValidateToken(token)\r\n        .subscribe(res => {\r\n          if (res.errorCode == 0) {\r\n            this.signupService.getElements(res.dataObj.companyInfo)\r\n              .subscribe((res1) => {\r\n                if (res1.errorCode == 0) {\r\n                  this.ElementsData = res1.dataObj;\r\n                  this.signupService.getOperations(res.dataObj.companyInfo).subscribe((res2) => {\r\n                    if (res2.errorCode == 0) {\r\n                      this.OperationsData = res2.dataObj;\r\n                      var empData = this.GetEmpData(res.dataObj);\r\n                      this.signupService.CreateEmployee(res.dataObj.companyInfo, empData).subscribe((res3) => {\r\n                        if (res3.errorCode == 0) {\r\n                          this.loading = false;\r\n                          this.message = \"Successfully verified\";\r\n                          this.verified = true;\r\n                          this.router.navigate(['login']);\r\n                        }\r\n                        else {\r\n                        }\r\n                      }, (err) => {\r\n                      });\r\n                    };\r\n                  });\r\n                }\r\n              });\r\n          }\r\n          else {\r\n            this.verified = false;\r\n            this.message = \"Failed to verified, please try again\";\r\n          }\r\n        }, error => {\r\n          this.loading = false;\r\n          this.verified = false;\r\n          console.log(error);\r\n          this.message = \"Failed to verified, please try again\";\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  GetEmpData(data) {\r\n    var Empobj = new EmployeePermissions();\r\n    Empobj.designationId = -1;\r\n    Empobj.departmentId = -1;\r\n    Empobj.employeeFname = data.name;\r\n    Empobj.employeeEmail = data.email;\r\n    Empobj.employeePassword = \"\";\r\n    Empobj.employeeCode = data.userId;\r\n    Empobj.employeeMname=\"\";\r\n    Empobj.gender=\"Male\";\r\n    Empobj.employeeMobileNo=\"12345\";\r\n    Empobj.employeeProfileImg=\"\";\r\n    Empobj.employeeElementMappingList = [];\r\n\r\n\r\n    for (let index = 0; index < this.ElementsData.length; index++) {\r\n      const ele = this.ElementsData[index];\r\n      var element = new EmployeeRoleElement();\r\n      element.elementId = ele.elementId;\r\n      element.employeeElementOprationList = [];\r\n      for (let index2 = 0; index2 < this.OperationsData.length; index2++) {\r\n        const ops = this.OperationsData[index2];\r\n        var opertaion = new ElementOperation();\r\n        opertaion.operationId = ops.operationId;\r\n        element.employeeElementOprationList.push(opertaion);\r\n      }\r\n      Empobj.employeeElementMappingList.push(element);\r\n    }\r\n    return Empobj;\r\n\r\n  }\r\n\r\n}\r\n","<div class=\" login-bg\" class=\"extraMargins\">\r\n\r\n    <div class=\"main-panel\">\r\n        <div class=\"login\">\r\n            <div class=\"welcome-heading\" style=\"text-align: center;\">\r\n                <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n                <br>\r\n                <br>\r\n                <div *ngIf=\"loading==true\">\r\n                    <div class=\"welcome-heading\" style=\"font-size: larger;\"><b>Verifying your account</b></div>\r\n                    <div style=\"text-align: center;\">\r\n                        <p-progressBar mode=\"indeterminate\"></p-progressBar>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"loading!=true\">\r\n                    <div class=\"welcome-heading\" style=\"font-size: larger;\"><b>{{message}}</b></div>\r\n                    <div style=\"text-align: center;\">\r\n                        <i *ngIf=\"verified==true\" class=\"fa fa-check-circle\" style=\"font-size:60px;color: #007775;\"></i>\r\n                        <i *ngIf=\"verified==false\" class=\"fa fa-times-circle\" style=\"font-size:60px;color:red\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"clearfix\"></div>\r\n                <div class=\"form-wrapper\">\r\n                \r\n                </div> -->\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup.component';\r\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\r\n\r\nconst routes: Routes = [{ path: '', component: SignupComponent,data :{ Title:'' ,ShowHeader:false,ShowNavBar:false} },\r\n{ path: 'EmailVerification', component: EmailVerificationComponent,data :{ Title:'' ,ShowHeader:false,ShowNavBar:false} }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignupRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from '../../Services/layout.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { SignupService } from './signup.service';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  SignupForm: FormGroup;\r\n  ShowValidationMessage: boolean = false;\r\n  ShowCompanyValidationMessage: boolean = false;\r\n  constructor(private layoutservice: LayoutService, private fb: FormBuilder, private signupService: SignupService\r\n    , private router: Router\r\n    , private messageService: MessageService\r\n  ) {\r\n    this.router.events.subscribe(\r\n      (event) => {\r\n        if (event instanceof NavigationEnd) {\r\n          this.ngOnInit();\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.SignupForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      companyName: ['', Validators.required],\r\n      companyWebsite:[''],\r\n      portalName: ['', Validators.required],\r\n      industryType: ['', Validators.required],\r\n      companySize:['', Validators.required],\r\n      adminMobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern('[0-9]+')])],\r\n      termsCheckBox: [false]\r\n    });\r\n  }\r\n\r\n  OnSubmit = function (data) {\r\n\r\n\r\n\r\n    console.log(data.portalName);\r\n\r\n    var userData = {\r\n      userRole: \"ADMIN\",\r\n      companyInfo: data.portalName,\r\n      name: data.name,\r\n      password: data.password,\r\n      email: data.email\r\n    }\r\n\r\n    this.signupService.SignupFunction(userData).subscribe((res) => {\r\n      if (res.errorCode == 0) {\r\n        var company = {\r\n          companyName: data.companyName,\r\n          portalName: data.portalName,\r\n          industryType: data.industryType,\r\n          adminMobile: data.adminMobile,\r\n          adminEmail: data.email,\r\n          companyDomain: '',\r\n          contactPerson: res.dataObj.userId,\r\n          apiURLPrefix: data.companyWebsite,\r\n          companySize:data.companySize\r\n        }\r\n\r\n        this.signupService.addCompany(company).subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            this.messageService.add({ severity: 'success', summary: \"Comapny added successfully\" });\r\n            this.ShowValidationMessage = true;\r\n          }\r\n          else {\r\n            this.messageService.add({ severity: 'error', summary: res.errorMsg });\r\n          }\r\n        }, (err) => {\r\n          this.messageService.add({ severity: 'error', summary: \"Something went wrong, please try later\" });\r\n        })\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: res.errorMsg });\r\n      }\r\n    }, (error) => {\r\n      this.messageService.add({ severity: 'error', summary: \"Something went wrong, please try later\" });\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  checkPortalName(data)\r\n  {\r\n    this.signupService.CheckPortalName(data).subscribe((res)=>{\r\n      if(res.errorCode==0)\r\n      {\r\n        this.ShowCompanyValidationMessage=false;\r\n      }\r\n      else{\r\n          this.ShowCompanyValidationMessage=true;\r\n      }\r\n    }),\r\n    (err)=>{\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\" login-bg\">\r\n  <div class=\"overlay\">\r\n    <div class=\"sidebar\">\r\n      <div class=\"sidebar-wrapper\">\r\n        <ul class=\"nav\">\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"main-panel\">\r\n      <div class=\"login\" [ngClass]=\"{'extraMargin': ShowValidationMessage}\">\r\n        <div class=\"welcome-heading\">\r\n          <h3 class=\"heading-1 signuplh\">Start your Free Trial</h3>\r\n\r\n          <div class=\"\"><img src=\"assets/img/login-logo.png\"></div>\r\n        </div>\r\n\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"form-wrapper\">\r\n          <form *ngIf=\"ShowValidationMessage==false\" [formGroup]=\"SignupForm\" (ngSubmit)=\"OnSubmit(SignupForm.value)\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Name</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Full Name\" formControlName=\"name\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['name'].valid&&(SignupForm.controls['name'].dirty || SignupForm.controls['name'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Name</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Email</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"email\" placeholder=\"Enter Your Email Address\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['email'].valid&&(SignupForm.controls['email'].dirty || SignupForm.controls['email'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Email</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Password</label>\r\n              <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter Your Password\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['password'].valid&&(SignupForm.controls['password'].dirty || SignupForm.controls['password'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Password</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Company Name *</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Company Name\"\r\n                formControlName=\"companyName\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!SignupForm.controls['companyName'].valid&&(SignupForm.controls['companyName'].dirty || SignupForm.controls['companyName'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide company name</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Company Website *</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Company Website\"\r\n                formControlName=\"companyWebsite\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Unique Portal Name*</label>\r\n              <input type=\"text\" id=\"portal\" class=\"form-control\" placeholder=\"ex. gomapIndia\"\r\n                formControlName=\"portalName\" (blur)=\"checkPortalName(SignupForm.controls['portalName'].value)\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!ShowCompanyValidationMessage && !SignupForm.controls['portalName'].valid&&(SignupForm.controls['portalName'].dirty || SignupForm.controls['portalName'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide valid Portal Name</span>\r\n              <span class=\"error\"\r\n                *ngIf=\"ShowCompanyValidationMessage\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Portal name already exists, please enter a different name</span>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Industry *</label>\r\n              <select class=\"form-control\" formControlName=\"industryType\">\r\n                <option value=\"\">Select industry</option>\r\n                <option value=\"IT Services\">IT Services</option>\r\n                <option value=\"Finance\">Finance</option>\r\n                <option value=\"Manufacturing\">Manufacturing</option>\r\n                <option value=\"Hospitality\">Hospitality</option>\r\n                <option value=\"Health Care\">Health Care</option>\r\n              </select>\r\n              <span\r\n                *ngIf=\"!SignupForm.controls['industryType'].valid&&(SignupForm.controls['industryType'].dirty|| SignupForm.controls['industryType'].touched)\"\r\n                class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                select Industy type</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Company Size*</label>\r\n              <select class=\"form-control\" formControlName=\"companySize\">\r\n                <option value=\"\">Select Team Size</option>\r\n                <option value=\"1-50\">1-50</option>\r\n                <option value=\"51-150\">51-150</option>\r\n                <option value=\"151-250\">151-250</option>\r\n                <option value=\"251-500\">251-500</option>\r\n                <option value=\"500 and more\">500 and more</option>\r\n              </select>\r\n              <span\r\n                *ngIf=\"!SignupForm.controls['companySize'].valid&&(SignupForm.controls['companySize'].dirty|| SignupForm.controls['companySize'].touched)\"\r\n                class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide Company Size</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Office Phone No *</label>\r\n              <input type=\"text\" class=\"form-control\" placeholder=\"Enter Your Mobile Number\"\r\n                formControlName=\"adminMobile\">\r\n              <span\r\n                *ngIf=\"!SignupForm.controls['adminMobile'].valid&&(SignupForm.controls['adminMobile'].dirty|| SignupForm.controls['adminMobile'].touched)\"\r\n                class=\"error\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please\r\n                provide valid phone No.</span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <div class=\"checkbox\">\r\n                <input id=\"checkbox1\" type=\"checkbox\" formControlName=\"termsCheckBox\">\r\n                <label for=\"checkbox1\">I agree to the <a href=\"#\">Terms of services</a> and <a href=\"#\">Privacy\r\n                    Policy.</a>\r\n                </label>\r\n              </div><br>\r\n              <input type=\"submit\" name=\"submit\" class=\"btn btn-primary\"\r\n                [disabled]=\"!SignupForm.valid || !SignupForm.controls['termsCheckBox'].value\">\r\n            </div>\r\n            <div class=\"frpass\">I already have an account <a [routerLink]=\"['/login']\">Login</a></div>\r\n          </form>\r\n          <div *ngIf=\"ShowValidationMessage==true\" style=\"font-size: larger;text-align: center;font-weight: bolder;\">\r\n            <div>Successfully registered <br> please check your email for verification link</div>\r\n            <div style=\"text-align: center;\">\r\n              <i class=\"fa fa-check-circle\" style=\"font-size:60px;color: #007775;\"></i>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SignupRoutingModule } from './signup-routing.module';\r\nimport { SignupComponent } from './signup.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { EmailVerificationComponent } from './email-verification/email-verification.component';\r\nimport {ProgressBarModule} from 'primeng/progressbar';\r\n\r\n@NgModule({\r\n  declarations: [SignupComponent, EmailVerificationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SignupRoutingModule,ReactiveFormsModule,ProgressBarModule\r\n  ]\r\n})\r\nexport class SignupModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { UserService } from '../../Services/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupService {\r\n\r\n  url: string = environment.url;\r\n  constructor(private httpClient: HttpClient, private userService: UserService) { }\r\n\r\n  SignupFunction = function (data) {\r\n    return this.httpClient.post(this.url + environment.signup, data);\r\n  }\r\n\r\n  ValidateToken = function (token) {\r\n    return this.httpClient.get(this.url + environment.emailVerification + token);\r\n  }\r\n\r\n  addCompany = function (data) {\r\n    return this.httpClient.post(environment.url + environment.addCompany, data);\r\n  }\r\n\r\n  CreateEmployee = function (company, data) {\r\n    return this.httpClient.post(environment.urlPrefix + company + environment.urlSuffix + environment.AddEmployee, data)\r\n  }\r\n  getOperations = function (company) {\r\n    return this.httpClient.get(environment.urlPrefix + company + environment.urlSuffix + environment.getOperations);\r\n  }\r\n\r\n  getElements = function (company) {\r\n    return this.httpClient.get(environment.urlPrefix + company + environment.urlSuffix + environment.getElements);\r\n  }\r\n\r\n  CheckPortalName = function (name) {\r\n    return this.httpClient.get(environment.url+environment.validatePortalName+name)\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}