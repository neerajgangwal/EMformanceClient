{"version":3,"sources":["webpack:///src/app/Entities/UpdateElementOperation.ts","webpack:///src/app/Entities/UpdateEmployeePermissions.ts","webpack:///src/app/Entities/UpdateEmployeeRoleElement.ts","webpack:///src/app/Features/employee/create-employee/create-employee.component.ts","webpack:///src/app/Features/employee/create-employee/create-employee.component.html","webpack:///src/app/Features/employee/edit-employee/edit-employee.component.ts","webpack:///src/app/Features/employee/edit-employee/edit-employee.component.html","webpack:///src/app/Features/employee/employee-list/employee-list.component.ts","webpack:///src/app/Features/employee/employee-list/employee-list.component.html","webpack:///src/app/Features/employee/employee-routing.module.ts","webpack:///src/app/Features/employee/employee.component.ts","webpack:///src/app/Features/employee/employee.component.html","webpack:///src/app/Features/employee/employee.module.ts","webpack:///src/app/Features/employee/employee.service.ts","webpack:///src/app/Features/employee/view-employee/view-employee.component.ts","webpack:///src/app/Features/employee/view-employee/view-employee.component.html"],"names":["ElementOperation","EmployeePermissions","EmployeeRoleElement","value","CreateEmployeeComponent","layoutService","employeeService","fb","messageService","userService","router","RolePermissions","InitializeForm","EmployeeForm","employee","group","designationId","required","departmentId","employeeFname","employeeMname","employeeEmail","email","employeePassword","employeeMobileNo","employeeProfileImg","employeeUserId","gender","employeeElementMappingList","Elements","SelectDepartmentChanged","id","GetRolesForDepartmentId","subscribe","res","patchValue","DesignationList","dataObj","console","log","CreateEmployee","data","convertedData","MapDataToEntity","errorCode","add","severity","summary","detail","resetForm","CancelButtonClick","signupData","userRole","companyInfo","LoggedInUser","CompanyInfo","name","password","CreateSignUp","res2","errorMsg","err","Empobj","employeeCode","employeeId","forEach","elementdata","element","elementId","employeeElementOprationList","employeeElementOperationList","operationData","opertaion","operationId","push","reset","PermissionsData","RadioButtonClick","Map","index","length","operations","index2","roleElementOprationList","operation","set","list","get","indexOf","GetDepartments","DepartmentList","getElements","ElementsData","getOperations","OperationsData","getRolePermissions","CreateHashMap","designationElementMappingList","operationsArray","array","operationName","CheckPermission","elementIndex","ElementsList","controls","navigateByUrl","elementsArray","elementName","Operations","selector","templateUrl","styleUrls","EditEmployeeComponent","route","UpdateEmployee","navigate","employeeElementMpgId","ElementIdMapping","employeeElementOperationId","OPerationIdMapping","queryParamMap","params","GetEmployeeById","getEmployeeElementMapping","EmployeeListComponent","layoutservice","searchSerrvice","deleteIconClicked","deleteEmployee","EmployeeList","splice","SearchResults","FilterData","event","temp","target","filter","item","FilterKey","toLowerCase","startsWith","includes","SetSource","UpdateLayout","GetEmployeeData","FullName","queryParams","routes","path","component","Title","ShowHeader","ShowNavBar","EmployeeRoutingModule","forChild","imports","exports","EmployeeComponent","EmployeeModule","declarations","providers","EmployeeService","httpClient","PortalName","employeeData","post","getEmployeeData","getDepartment","GetDepartment","getDepartmentById","GetDesignation","GetDesignations","createdBy","Id","AddEmployee","updateEmployee","getDesignationElementMapping","getEmployeeElementsMapping","GetSkillsMappedToEmployee","employeeIdData","getEmployeeSkill","GetAllTheSkills","getSkill","url","signup","GetProjectListById","ProjectList","getTeam","ViewEmployeeComponent","Employee","GetDesignationById","GetDepartmentById","Permissions","getEmployeeSkills","getAllEmployeeSkills","EmployeeSkills","Skills","skillId","skillName","projectList","TeamList","DepartmentName","departmentName","DesignationName","designationName","getProjectList","getTeamList"],"mappings":"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","file":"Features-employee-employee-module-es5.js","sourcesContent":["export class ElementOperation\r\n{\r\n    operationId:number;\r\n    employeeElementOperationId:number;\r\n}\r\n","import {EmployeeRoleElement} from './UpdateEmployeeRoleElement';\r\n\r\nexport class EmployeePermissions\r\n{\r\n    departmentId:number;\r\n    employeeFname:string;\r\n    employeeMname:string;\r\n    employeeUserId:string;\r\n    employeeId:number;\r\n    designationId:number;\r\n    employeeEmail:string;\r\n    employeePassword:string;\r\n    employeeMobileNo:string;\r\n    employeeProfileImg:string;\r\n    employeeElementMappingList:EmployeeRoleElement[];\r\n    gender:string\r\n}\r\n","import {ElementOperation} from './UpdateElementOperation';\r\nexport class EmployeeRoleElement\r\n{\r\n    elementId:number;\r\n    employeeElementOprationList:ElementOperation[];\r\n    employeeElementMpgId:number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from '../../../Services/layout.service'\r\nimport { EmployeeService } from '../employee.service';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { EmployeePermissions } from 'src/app/Entities/EmployeePermissions';\r\nimport { EmployeeRoleElement } from 'src/app/Entities/EmployeeRoleElement';\r\nimport { ElementOperation } from 'src/app/Entities/ElementOperation';\r\nimport { RolePermissions } from 'src/app/Entities/RolePermissions';\r\nimport { RoleElement } from 'src/app/Entities/RoleElement';\r\nimport { UserService } from 'src/app/Services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-employee',\r\n  templateUrl: './create-employee.component.html',\r\n  styleUrls: ['./create-employee.component.css']\r\n})\r\nexport class CreateEmployeeComponent implements OnInit {\r\n  EmployeeForm: FormGroup\r\n  DepartmentList: any[];\r\n  DesignationList: any[];\r\n  OperationsData: any[];\r\n  ElementsData: any[];\r\n  RolePermissions: RoleElement[] = [];\r\n  PermissionsData: Map<number, number[]>\r\n\r\n  constructor(private layoutService: LayoutService, private employeeService: EmployeeService, private fb: FormBuilder,\r\n    private messageService: MessageService,\r\n    private userService: UserService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  CreateHashMap(data) {\r\n    this.PermissionsData = new Map<number, number[]>();\r\n    for (let index = 0; index < data.length; index++) {\r\n      const element = data[index];\r\n      var operations = [];\r\n      for (let index2 = 0; index2 < element.roleElementOprationList.length; index2++) {\r\n        const operation = element.roleElementOprationList[index2];\r\n        operations.push(operation.operationId);\r\n      }\r\n      this.PermissionsData.set(element.elementId, operations);\r\n    }\r\n  }\r\n\r\n  CheckPermission(elementId, operationId) {\r\n    if (this.PermissionsData) {\r\n      var list = this.PermissionsData.get(elementId);\r\n      if (list) {\r\n        if (list.indexOf(operationId) > -1) {\r\n          return true;\r\n        };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.employeeService.GetDepartments().subscribe((res) => {\r\n      this.DepartmentList = res.dataObj;\r\n      console.log(this.DepartmentList);\r\n    });\r\n    this.employeeService.getElements()\r\n      .subscribe((res) => {\r\n        if (res.errorCode == 0) {\r\n          this.ElementsData = res.dataObj;\r\n          this.employeeService.getOperations().subscribe((res2) => {\r\n            if (res2.errorCode == 0) {\r\n              this.OperationsData = res2.dataObj;\r\n              this.InitializeForm();\r\n              console.log(this.EmployeeForm.value);\r\n            };\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  InitializeForm = function () {\r\n    if (this.EmployeeForm) {\r\n      var employee = this.EmployeeForm.value;\r\n      this.EmployeeForm = this.fb.group({\r\n        designationId: [employee.designationId, Validators.required],\r\n        departmentId: [employee.departmentId, Validators.required],\r\n        employeeFname: [employee.employeeFname, Validators.required],\r\n        employeeMname: [employee.employeeMname, Validators.required],\r\n        employeeEmail: [employee.employeeEmail, [Validators.required, Validators.email]],\r\n        employeePassword: [employee.employeePassword, Validators.required],\r\n        employeeMobileNo: [employee.employeeMobileNo, Validators.required],\r\n        employeeProfileImg: [employee.employeeProfileImg],\r\n        employeeUserId: [employee.employeeUserId, Validators.required],\r\n        gender: [employee.gender, Validators.required],\r\n        employeeElementMappingList: this.Elements\r\n      });\r\n    }\r\n    else {\r\n      this.EmployeeForm = this.fb.group({\r\n        designationId: ['', Validators.required],\r\n        departmentId: ['', Validators.required],\r\n        employeeFname: ['', Validators.required],\r\n        employeeMname: ['', Validators.required],\r\n        employeeEmail: ['', [Validators.required, Validators.email]],\r\n        employeePassword: ['', Validators.required],\r\n        employeeMobileNo: ['', Validators.required],\r\n        employeeProfileImg: [''],\r\n        employeeUserId: ['', Validators.required],\r\n        gender: ['Male', Validators.required],\r\n        employeeElementMappingList: this.Elements\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  SelectRoleChanged(id) {\r\n    this.employeeService.getRolePermissions(id).subscribe(res => {\r\n      this.CreateHashMap(res.dataObj.designationElementMappingList);\r\n      console.log(id);\r\n      this.InitializeForm();\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  get Elements(): FormArray {\r\n    var elementsArray = this.fb.array([]);\r\n    this.ElementsData.forEach(element => {\r\n      elementsArray.push(this.fb.group({\r\n        elementId: [element.elementId],\r\n        elementName: [element.elementName],\r\n        employeeElementOperationList: this.Operations(element.elementId)\r\n      }))\r\n    })\r\n    return elementsArray;\r\n  }\r\n\r\n  Operations(elementId): FormArray {\r\n    var operationsArray = this.fb.array([]);\r\n    this.OperationsData.forEach(element => {\r\n      operationsArray.push(this.fb.group({\r\n        operationId: [element.operationId],\r\n        operationName: [element.operationName],\r\n        value: [this.CheckPermission(elementId, element.operationId)],\r\n      }))\r\n    });\r\n    return operationsArray;\r\n  };\r\n\r\n  get ElementsList() {\r\n    return this.EmployeeForm.get('employeeElementMappingList') as FormArray;\r\n  }\r\n\r\n  ElementOperationsList(elementIndex) {\r\n    return this.ElementsList.controls[elementIndex].get('employeeElementOperationList') as FormArray;\r\n  }\r\n\r\n\r\n  SelectDepartmentChanged = function (id) {\r\n    this.employeeService.GetRolesForDepartmentId(id).subscribe((res) => {\r\n      this.EmployeeForm.patchValue({\r\n        designationId: ''\r\n      });\r\n      this.DesignationList = res.dataObj;\r\n      console.log(this.DesignationList);\r\n    });\r\n  }\r\n\r\n  CreateEmployee = function (data) {\r\n    console.log(\"TestData\");\r\n    console.log(data);\r\n    var convertedData = this.MapDataToEntity(data);\r\n    this.employeeService.CreateEmployee(convertedData).subscribe((res) => {\r\n      console.log(res);\r\n      if (res.errorCode == 0) {\r\n        console.log(\"success\");\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully created employee' });\r\n        this.resetForm();\r\n        this.CancelButtonClick();\r\n        this.EmployeeForm.patchValue({\r\n          gender: 'Male'\r\n        });\r\n        var signupData = {\r\n          userRole: \"NON-ADMIN\",\r\n          companyInfo: this.userService.LoggedInUser.CompanyInfo,\r\n          name: data.employeeFname,\r\n          password: data.employeePassword,\r\n          email: data.employeeEmail\r\n        }\r\n        this.employeeService.CreateSignUp(signupData).subscribe((res2) => {\r\n          if (res2.errorCode == 0) {\r\n            this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully created employee signup' });\r\n          }\r\n        })\r\n\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n      }\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed , please try again\" });\r\n    })\r\n  }\r\n\r\n  MapDataToEntity = function (data) {\r\n    var Empobj = new EmployeePermissions();\r\n    Empobj.designationId = data.designationId;\r\n    Empobj.departmentId = data.departmentId;\r\n    Empobj.employeeFname = data.employeeFname;\r\n    Empobj.employeeMname = data.employeeMname;\r\n    Empobj.employeeEmail = data.employeeEmail;\r\n    Empobj.employeeMobileNo = data.employeeMobileNo;\r\n    Empobj.employeePassword = data.employeePassword;\r\n    Empobj.employeeProfileImg = data.employeeProfileImg;\r\n    Empobj.employeeCode = data.employeeId;\r\n    Empobj.gender = data.gender;\r\n    Empobj.employeeElementMappingList = [];\r\n\r\n    data.employeeElementMappingList.forEach(elementdata => {\r\n      var element = new EmployeeRoleElement();\r\n      element.elementId = elementdata.elementId;\r\n      element.employeeElementOprationList = [];\r\n      elementdata.employeeElementOperationList.forEach(operationData => {\r\n        if (operationData.value == true) {\r\n          var opertaion = new ElementOperation();\r\n          opertaion.operationId = operationData.operationId;\r\n          element.employeeElementOprationList.push(opertaion);\r\n        }\r\n      });\r\n      Empobj.employeeElementMappingList.push(element);\r\n    });\r\n    return Empobj;\r\n  }\r\n\r\n  resetForm = function () {\r\n    this.EmployeeForm.reset();\r\n    this.PermissionsData = null;\r\n    this.InitializeForm();\r\n  }\r\n  RadioButtonClick = function (data) {\r\n    this.EmployeeForm.patchValue({\r\n      gender: data\r\n    })\r\n  }\r\n  CancelButtonClick(){\r\n    this.router.navigateByUrl(\"/employee/list\");\r\n   }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n  <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"form-container\" [formGroup]=\"EmployeeForm\" *ngIf=\"EmployeeForm!=null\">\r\n        <div class=\"form-section\">\r\n          <div class=\"col-lg-12\">\r\n            <div class=\"card wizard-card\" data-color=\"orange\" id=\"wizardProfile\">\r\n\r\n              <div class=\"picture-container\">\r\n                <div class=\"picture\">\r\n                  <img src=\"assets/img/default-avatar.jpg\" class=\"picture-src\" id=\"wizardPicturePreview\" title=\"\">\r\n                  <input type=\"file\" id=\"wizard-picture\" formControlName=\"employeeProfileImg\">\r\n                </div>\r\n                <h6>Upload Picture</h6>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">First Name*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeFname\"\r\n                placeholder=\"Enter your first name\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeFname'].valid&&(EmployeeForm.controls['employeeFname'].dirty|| EmployeeForm.controls['employeeFname'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide first\r\n                name</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n\r\n              <label for=\"\">Last Name*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeMname\" placeholder=\"Enter Last Name\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeMname'].valid&&(EmployeeForm.controls['employeeMname'].dirty|| EmployeeForm.controls['employeeMname'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide last\r\n                name</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n\r\n              <label for=\"\">Email Address*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeEmail\" placeholder=\"Enter Email Address\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeEmail'].valid&&(EmployeeForm.controls['employeeEmail'].dirty|| EmployeeForm.controls['employeeEmail'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid email\r\n                address</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Password*</label>\r\n              <input type=\"password\" class=\"form-control\" formControlName=\"employeePassword\"\r\n                placeholder=\"Enter Password\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeePassword'].valid&&(EmployeeForm.controls['employeePassword'].dirty|| EmployeeForm.controls['employeePassword'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                password</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Employee Id*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeUserId\" placeholder=\"Enter Employee Id\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeUserId'].valid&&(EmployeeForm.controls['employeeUserId'].dirty|| EmployeeForm.controls['employeeUserId'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                employeeId</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Select Department*</label>\r\n              <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"departmentId\"\r\n                (change)=\"SelectDepartmentChanged(EmployeeForm.controls['departmentId'].value)\">\r\n                <option value=\"\">Select Department</option>\r\n                <option *ngFor=\"let department of DepartmentList\" value=\"{{department.departmentId}}\">\r\n                  {{department.departmentName}}</option>\r\n              </select>\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['departmentId'].valid&&(EmployeeForm.controls['departmentId'].dirty|| EmployeeForm.controls['departmentId'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select\r\n                department</span>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Phone Number*</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"employeeMobileNo\"\r\n                placeholder=\"Enter Phone Number\">\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['employeeMobileNo'].valid&&(EmployeeForm.controls['employeeMobileNo'].dirty|| EmployeeForm.controls['employeeMobileNo'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                mobile number</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"\">Select Role*</label>\r\n              <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"designationId\"\r\n                (change)=\"SelectRoleChanged(EmployeeForm.controls['designationId'].value)\"\r\n               >\r\n                <option value=\"\">Select Roles</option>\r\n                <option *ngFor=\"let designation of DesignationList\" value=\"{{designation.designationId}}\">\r\n                  {{designation.designationName}}</option>\r\n              </select>\r\n              <span class=\"error\"\r\n                *ngIf=\"!EmployeeForm.controls['designationId'].valid&&(EmployeeForm.controls['designationId'].dirty|| EmployeeForm.controls['designationId'].touched)\"><i\r\n                  class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select role</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6\">\r\n            <div class=\"form-group\">\r\n              <label for=\"fun\" class=\"control-label text-right\">Gender*</label>\r\n              <div class=\"input-group\">\r\n                <div id=\"radioBtn\" class=\"btn-group\">\r\n                  <a class=\"btn btn-primary gender btn-sm active\" data-toggle=\"fun\"\r\n                    [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                    [class.notActive]=\"EmployeeForm.controls['gender'].value!='Male'\" data-title=\"Y\"\r\n                    (click)=\"RadioButtonClick('Male')\">Male</a>\r\n                  <a class=\"btn btn-primary gender btn-sm notActive\" (click)=\"RadioButtonClick('Female')\"\r\n                    data-toggle=\"fun\" [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                    [class.notActive]=\"EmployeeForm.controls['gender'].value!='Female'\" data-title=\"X\">Female</a>\r\n                  <a class=\"btn btn-primary btn-sm gender notActive\" (click)=\"RadioButtonClick('Other')\"\r\n                    data-toggle=\"fun\" [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                    [class.notActive]=\"EmployeeForm.controls['gender'].value!='Other'\" data-title=\"N\">Other</a>\r\n                </div>\r\n                <input type=\"hidden\" name=\"fun\" id=\"fun\" formControlName=\"gender\">\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"form-container\">\r\n          <div class=\"form-section\">\r\n            <div class=\"col-lg-12 permission-heading\">\r\n              <h4>Select Permission</h4>\r\n            </div>\r\n            <div class=\"permission-section\" formArrayName=\"employeeElementMappingList\">\r\n              <div class=\"col-lg-6\" *ngFor=\"let element of ElementsList.controls;\r\n                            let elementIndex = index\">\r\n                <div class=\"rolesection\" [formGroupName]=\"elementIndex\">\r\n                  <div class=\"form-group\">\r\n                    <label style=\"width: 30%;\" for=\"\"\r\n                      class=\"pull-left headtxt\">{{element.controls.elementName.value}}</label>\r\n                    <div class=\"material-switch\" formArrayName=\"employeeElementOperationList\" *ngFor=\"let operation of ElementOperationsList(elementIndex).controls;\r\n                                        let operationIndex = index\">\r\n                      <ng-container [formGroupName]=\"operationIndex\">\r\n                        <span>{{operation.controls.operationName.value}}</span><br>\r\n                        <input id=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                          name=\"someSwitchOption001\" formControlName=\"value\" type=\"checkbox\" />\r\n                        <label for=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                          class=\"label-default\"></label>\r\n                      </ng-container>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-3 pull-right\">\r\n            <input type=\"button\" value=\"Cancel\" class=\"btn btn-primary\" (click)=\"CancelButtonClick()\">\r\n            <input type=\"submit\" value=\"Create Employee\" class=\"subbtn btn btn-primary\" [disabled]=\"!EmployeeForm.valid\"\r\n              (click)=\"CreateEmployee(EmployeeForm.value)\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from '../../../Services/layout.service'\r\nimport { EmployeeService } from '../employee.service';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { EmployeePermissions } from 'src/app/Entities/UpdateEmployeePermissions';\r\nimport { EmployeeRoleElement } from 'src/app/Entities/UpdateEmployeeRoleElement';\r\nimport { ElementOperation } from 'src/app/Entities/UpdateElementOperation';\r\nimport { RolePermissions } from 'src/app/Entities/RolePermissions';\r\nimport { RoleElement } from 'src/app/Entities/RoleElement';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee',\r\n  templateUrl: './edit-employee.component.html',\r\n  styleUrls: ['./edit-employee.component.css']\r\n})\r\nexport class EditEmployeeComponent implements OnInit {\r\n  EmployeeForm: FormGroup\r\n  DepartmentList: any[];\r\n  DesignationList: any[];\r\n  OperationsData: any[];\r\n  ElementsData: any[];\r\n  RolePermissions: RoleElement[] = [];\r\n  PermissionsData: Map<number, number[]>\r\n  ElementIdMapping:Map<number,number>\r\n  OPerationIdMapping:Map<string,number>\r\n\r\n  constructor(private layoutService: LayoutService, private employeeService: EmployeeService,\r\n     private fb: FormBuilder, private messageService: MessageService, private route: ActivatedRoute, private router:Router) { }\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var id = params.get(\"id\");\r\n      this.employeeService.getElements()\r\n        .subscribe((res) => {\r\n          if (res.errorCode == 0) {\r\n            this.ElementsData = res.dataObj;\r\n            this.employeeService.getOperations().subscribe((res2) => {\r\n              if (res2.errorCode == 0) {\r\n                this.OperationsData = res2.dataObj;\r\n\r\n                this.employeeService.GetEmployeeById(id).subscribe(res => {\r\n                  var employee = res.dataObj[0];\r\n                  this.employeeService.getEmployeeElementMapping(id).subscribe(res => {\r\n                    this.CreateHashMap(res.dataObj.employeeElementMappingList)\r\n                    this.InitializeForm(employee);\r\n                  })\r\n                })\r\n              };\r\n            });\r\n          }\r\n        });\r\n    });\r\n  }\r\n\r\n\r\n  InitializeForm = function (employee) {\r\n\r\n      this.EmployeeForm = this.fb.group({\r\n        employeeId:[employee.employeeId, Validators.required],\r\n        designationId: [employee.designationId, Validators.required],\r\n        departmentId: [employee.departmentId, Validators.required],\r\n        employeeFname: [employee.employeeFname, Validators.required],\r\n        employeeMname: [employee.employeeMname, Validators.required],\r\n        employeeEmail: [employee.employeeEmail, [Validators.required, Validators.email]],\r\n        employeePassword: [employee.employeePassword, Validators.required],\r\n        employeeMobileNo: [employee.employeeMobileNo, Validators.required],\r\n        employeeProfileImg: [employee.employeeProfileImg],\r\n        employeeUserId: [employee.employeeUserId, Validators.required],\r\n        gender: [employee.gender, Validators.required],\r\n        employeeElementMappingList: this.Elements\r\n      });\r\n\r\n\r\n    this.employeeService.GetDepartments().subscribe((res) => {\r\n      this.DepartmentList = res.dataObj;\r\n      console.log(this.DepartmentList);\r\n    });\r\n\r\n    this.SelectDepartmentChanged(employee.departmentId);\r\n  }\r\n\r\n\r\n  SelectRoleChanged(id) {\r\n  }\r\n\r\n  CreateHashMap(data) {\r\n    this.PermissionsData = new Map<number, number[]>();\r\n    this.ElementIdMapping=new Map<number,number>();\r\n    this.OPerationIdMapping=new Map<string,number>();\r\n    for (let index = 0; index < data.length; index++) {\r\n      const element = data[index];\r\n      this.ElementIdMapping.set(element.elementId,element.employeeElementMpgId);\r\n      var operations = [];\r\n      for (let index2 = 0; index2 < element.employeeElementOprationList.length; index2++) {\r\n        const operation = element.employeeElementOprationList[index2];\r\n        this.OPerationIdMapping.set(element.elementId+'-'+operation.operationId,operation.employeeElementOperationId);\r\n        operations.push(operation.operationId);\r\n      }\r\n      this.PermissionsData.set(element.elementId, operations);\r\n    }\r\n  }\r\n\r\n  CheckPermission(elementId, operationId) {\r\n    if (this.PermissionsData) {\r\n      var list = this.PermissionsData.get(elementId);\r\n      if (list) {\r\n        if (list.indexOf(operationId) > -1) {\r\n          return true;\r\n        };\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  get Elements(): FormArray {\r\n    var elementsArray = this.fb.array([]);\r\n    this.ElementsData.forEach(element => {\r\n      elementsArray.push(this.fb.group({\r\n        elementId: [element.elementId],\r\n        elementName: [element.elementName],\r\n        employeeElementOperationList: this.Operations(element.elementId)\r\n      }))\r\n    })\r\n    return elementsArray;\r\n  }\r\n\r\n  Operations(elementId): FormArray {\r\n    var operationsArray = this.fb.array([]);\r\n    this.OperationsData.forEach(element => {\r\n      operationsArray.push(this.fb.group({\r\n        operationId: [element.operationId],\r\n        operationName: [element.operationName],\r\n        value: [this.CheckPermission(elementId, element.operationId)],\r\n      }))\r\n    });\r\n    return operationsArray;\r\n  };\r\n\r\n  get ElementsList() {\r\n    return this.EmployeeForm.get('employeeElementMappingList') as FormArray;\r\n  }\r\n\r\n  ElementOperationsList(elementIndex) {\r\n    return this.ElementsList.controls[elementIndex].get('employeeElementOperationList') as FormArray;\r\n  }\r\n\r\n\r\n  SelectDepartmentChanged = function (id) {\r\n    this.employeeService.GetRolesForDepartmentId(id).subscribe((res) => {\r\n      this.EmployeeForm.patchValue({\r\n        designationId: ''\r\n      });\r\n      this.DesignationList = res.dataObj;\r\n      console.log(this.DesignationList);\r\n    });\r\n  }\r\n\r\n UpdateEmployee = function (data) {\r\n    console.log(\"TestData\");\r\n    console.log(data);\r\n    var convertedData = this.MapDataToEntity(data);\r\n    this.employeeService.UpdateEmployee(convertedData).subscribe((res) => {\r\n      console.log(res);\r\n      if (res.errorCode == 0) {\r\n        console.log(\"success\");\r\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Successfully created employee' });\r\n        this.router.navigate(['employee', 'list']); this.resetForm();\r\n        this.EmployeeForm.patchValue({\r\n          gender: 'Male'\r\n        });\r\n        this.router.navigateByUrl(\"/employee/list\");\r\n      }\r\n      else {\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n      }\r\n    }, (err) => {\r\n      console.log(err);\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Failed , please try again\" });\r\n    })\r\n  }\r\n\r\n  MapDataToEntity = function (data) {\r\n    var Empobj = new EmployeePermissions();\r\n    Empobj.designationId = data.designationId;\r\n    Empobj.departmentId = data.departmentId;\r\n    Empobj.employeeFname = data.employeeFname;\r\n    Empobj.employeeMname = data.employeeMname;\r\n    Empobj.employeeEmail = data.employeeEmail;\r\n    Empobj.employeeMobileNo = data.employeeMobileNo;\r\n    Empobj.employeePassword = data.employeePassword;\r\n    Empobj.employeeProfileImg = data.employeeProfileImg;\r\n    Empobj.employeeUserId = data.employeeCode;\r\n    Empobj.employeeId=data.employeeId\r\n    Empobj.gender = data.gender;\r\n    Empobj.employeeElementMappingList = [];\r\n\r\n    data.employeeElementMappingList.forEach(elementdata => {\r\n      var element = new EmployeeRoleElement();\r\n      element.elementId = elementdata.elementId;\r\n      element.employeeElementMpgId=this.ElementIdMapping.get(elementdata.elementId);\r\n      element.employeeElementOprationList = [];\r\n      elementdata.employeeElementOperationList.forEach(operationData => {\r\n        if (operationData.value == true) {\r\n          var opertaion = new ElementOperation();\r\n          opertaion.operationId = operationData.operationId;\r\n          opertaion.employeeElementOperationId=this.OPerationIdMapping.get(elementdata.elementId+'-'+operationData.operationId);\r\n          element.employeeElementOprationList.push(opertaion);\r\n        }\r\n      });\r\n      Empobj.employeeElementMappingList.push(element);\r\n    });\r\n    return Empobj;\r\n  }\r\n\r\n  resetForm = function () {\r\n    this.router.navigate(['employee', 'list']);\r\n    this.EmployeeForm.reset();\r\n    this.InitializeForm();\r\n  }\r\n  RadioButtonClick = function (data) {\r\n    this.EmployeeForm.patchValue({\r\n      gender: data\r\n    })\r\n  }\r\n\r\n  CancelButtonClick(){\r\n    this.router.navigateByUrl(\"/employee/list\");\r\n   }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n    <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n        <div class=\"container-fluid\">\r\n            <div class=\"form-container\" [formGroup]=\"EmployeeForm\" *ngIf=\"EmployeeForm!=null\">\r\n                <div class=\"form-section\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"card wizard-card\" data-color=\"orange\" id=\"wizardProfile\">\r\n\r\n                            <div class=\"picture-container\">\r\n                                <div class=\"picture\">\r\n                                    <img src=\"assets/img/default-avatar.jpg\" class=\"picture-src\"\r\n                                        id=\"wizardPicturePreview\" title=\"\">\r\n                                    <input type=\"file\" id=\"wizard-picture\" formControlName=\"employeeProfileImg\">\r\n                                </div>\r\n                                <h6>upload Picture</h6>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">First Name</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeFname\"\r\n                                placeholder=\"Enter your first name\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeFname'].valid&&(EmployeeForm.controls['employeeFname'].dirty|| EmployeeForm.controls['employeeFname'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide first\r\n                                name</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"\">Last Name</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeMname\"\r\n                                placeholder=\"Enter Last Name\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeMname'].valid&&(EmployeeForm.controls['employeeMname'].dirty|| EmployeeForm.controls['employeeMname'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide last\r\n                                name</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n\r\n                            <label for=\"\">Email Address</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeEmail\"\r\n                                placeholder=\"Enter Email Address\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeEmail'].valid&&(EmployeeForm.controls['employeeEmail'].dirty|| EmployeeForm.controls['employeeEmail'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid email\r\n                                address</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Password</label>\r\n                            <input type=\"password\" class=\"form-control\" formControlName=\"employeePassword\"\r\n                                placeholder=\"Enter Password\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeePassword'].valid&&(EmployeeForm.controls['employeePassword'].dirty|| EmployeeForm.controls['employeePassword'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                                password</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Employee Id</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeUserId\"\r\n                                placeholder=\"Enter Employee Id\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeUserId'].valid&&(EmployeeForm.controls['employeeUserId'].dirty|| EmployeeForm.controls['employeeUserId'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                                employeeId</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Select Department</label>\r\n                            <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"departmentId\"\r\n                                (change)=\"SelectDepartmentChanged(EmployeeForm.controls['departmentId'].value)\">\r\n                                <option value=\"\">Select Department</option>\r\n                                <option *ngFor=\"let department of DepartmentList\" value=\"{{department.departmentId}}\">\r\n                                    {{department.departmentName}}</option>\r\n                            </select>\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['departmentId'].valid&&(EmployeeForm.controls['departmentId'].dirty|| EmployeeForm.controls['departmentId'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select\r\n                                department</span>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Phone Number</label>\r\n                            <input type=\"text\" class=\"form-control\" formControlName=\"employeeMobileNo\"\r\n                                placeholder=\"Enter Phone Number\">\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['employeeMobileNo'].valid&&(EmployeeForm.controls['employeeMobileNo'].dirty|| EmployeeForm.controls['employeeMobileNo'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please provide valid\r\n                                mobile number</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Select Role</label>\r\n                            <select name=\"\" id=\"\" class=\"form-control\" formControlName=\"designationId\"\r\n                                (change)=\"SelectRoleChanged(EmployeeForm.controls['designationId'].value)\"\r\n                                [disabled]=\"EmployeeForm.controls['departmentId'].value==''\">\r\n                                <option value=\"\">Select Roles</option>\r\n                                <option *ngFor=\"let designation of DesignationList\"\r\n                                    value=\"{{designation.designationId}}\">{{designation.designationName}}</option>\r\n                            </select>\r\n                            <span class=\"error\"\r\n                                *ngIf=\"!EmployeeForm.controls['designationId'].valid&&(EmployeeForm.controls['designationId'].dirty|| EmployeeForm.controls['designationId'].touched)\"><i\r\n                                    class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>Please select role</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"fun\" class=\"control-label text-right\">Gender</label>\r\n                            <div class=\"input-group\">\r\n                                <div id=\"radioBtn\" class=\"btn-group\">\r\n                                    <a class=\"btn btn-primary gender btn-sm active\" data-toggle=\"fun\"\r\n                                        [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                                        [class.notActive]=\"EmployeeForm.controls['gender'].value!='Male'\" data-title=\"Y\"\r\n                                        (click)=\"RadioButtonClick('Male')\">Male</a>\r\n                                    <a class=\"btn btn-primary gender btn-sm notActive\"\r\n                                        (click)=\"RadioButtonClick('Female')\" data-toggle=\"fun\"\r\n                                        [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                                        [class.notActive]=\"EmployeeForm.controls['gender'].value!='Female'\"\r\n                                        data-title=\"X\">Female</a>\r\n                                    <a class=\"btn btn-primary btn-sm gender notActive\"\r\n                                        (click)=\"RadioButtonClick('Other')\" data-toggle=\"fun\"\r\n                                        [class.active]=\"EmployeeForm.controls['gender'].value=='Male'\"\r\n                                        [class.notActive]=\"EmployeeForm.controls['gender'].value!='Other'\"\r\n                                        data-title=\"N\">Other</a>\r\n                                </div>\r\n                                <input type=\"hidden\" name=\"fun\" id=\"fun\" formControlName=\"gender\">\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-container\">\r\n                    <div class=\"form-section\">\r\n                        <div class=\"col-lg-12 permission-heading\">\r\n                            <h4>Select Permission</h4>\r\n                        </div>\r\n                        <div class=\"permission-section\" formArrayName=\"employeeElementMappingList\">\r\n                            <div class=\"col-lg-6\" *ngFor=\"let element of ElementsList.controls;\r\n                            let elementIndex = index\">\r\n                                <div class=\"rolesection\" [formGroupName]=\"elementIndex\">\r\n                                    <div class=\"form-group\">\r\n                                        <label style=\"width: 30%;\" for=\"\"\r\n                                            class=\"pull-left headtxt\">{{element.controls.elementName.value}}</label>\r\n                                        <div class=\"material-switch\" formArrayName=\"employeeElementOperationList\"\r\n                                            *ngFor=\"let operation of ElementOperationsList(elementIndex).controls;\r\n                                        let operationIndex = index\">\r\n                                            <ng-container [formGroupName]=\"operationIndex\">\r\n                                                <span>{{operation.controls.operationName.value}}</span><br>\r\n                                                <input\r\n                                                    id=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                                                    name=\"someSwitchOption001\" formControlName=\"value\"\r\n                                                    type=\"checkbox\" />\r\n                                                <label\r\n                                                    for=\"{{element.controls.elementName.value+operation.controls.operationName.value}}\"\r\n                                                    class=\"label-default\"></label>\r\n                                            </ng-container>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3 pull-right\">\r\n                      <input type=\"button\" value=\"Cancel\" class=\"btn btn-primary\"\r\n          (click)=\"CancelButtonClick()\">\r\n                        <input type=\"submit\" value=\"Save Employee\" class=\"subbtn btn btn-primary\"\r\n                            (click)=\"UpdateEmployee(EmployeeForm.value)\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../employee.service';\r\nimport { LayoutService } from '../../../Services/layout.service';\r\nimport { SearchService } from '../../../Services/search.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router';\r\nimport {UserService} from '../../../Services/user.service'\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css']\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n\r\n  EmployeeList: any[];\r\n  SearchResults: any[];\r\n  loading: true;\r\n  FilterKey: string;\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n    private layoutservice: LayoutService,\r\n    public searchSerrvice: SearchService,\r\n    private messageService: MessageService,\r\n    public  userService:UserService,\r\n    private router:Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchSerrvice.SetSource(null);\r\n    this.layoutservice.UpdateLayout(true, true, true, true);\r\n    this.employeeService.GetEmployeeData().subscribe((res) => {\r\n      this.EmployeeList = res.dataObj;\r\n      this.EmployeeList.forEach((element) => {\r\n        element.FullName = element.employee.employeeFname + \" \" + element.employee.employeeMname;\r\n      })\r\n      console.log(this.EmployeeList);\r\n      this.SearchResults=this.EmployeeList;\r\n      this.FilterKey = \"FullName\";\r\n    });\r\n\r\n  }\r\n\r\n  deleteIconClicked=function(data)\r\n  {\r\n    console.log(\"some data \"+data.employee.employeeId);\r\n    console.log(\"id \"+data.employeeId);\r\n    this.employeeService.deleteEmployee(data.employee.employeeId).subscribe((res)=>\r\n    {\r\n      if(res.errorCode==0)\r\n      {\r\n      this.EmployeeList.splice(this.EmployeeList.indexOf(data), 1);\r\n\r\n      this.SearchResults = this.EmployeeList;\r\n      this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Employee deleted' });\r\n      }\r\n      else{\r\n        this.messageService.add({ severity: 'error', summary: 'Failed', detail: res.errorMsg });\r\n      }\r\n    }\r\n    ,(err)=>{\r\n      console.log(err);\r\n      this.messageService.add({ severity: 'error', summary: 'Failed', detail: \"Something went wrong\" });\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  editEmployeeIconClicked(id)\r\n  {\r\n    this.router.navigate(['employee', 'edit'], { queryParams: { 'id': id } });\r\n  }\r\n\r\n  viewIconClicked(id)\r\n  {\r\n    this.router.navigate(['employee', 'view'], { queryParams: { 'id': id } });\r\n  }\r\n\r\n\r\n\r\n  public FilterData = function (event) {\r\n    var temp = this.EmployeeList\r\n    var data = event.target.value;\r\n    console.log(data);\r\n    console.log(temp);\r\n\r\n    this.SearchResults = temp.filter(item => {\r\n      console.log(item);\r\n      console.log(item[this.FilterKey]);\r\n      console.log(item[this.FilterKey].toLowerCase().startsWith(data.toLowerCase()));\r\n      return item[this.FilterKey].toLowerCase().includes(data.toLowerCase());\r\n    }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n\t<div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n\t\t<div class=\"container-fluid\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col-md-4\">\r\n\t\t\t\t\t<div class=\"search-form\">\r\n\t\t\t\t\t\t<i class=\"fa fa-search\"></i>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"Search by name\" (input)=\"FilterData($event)\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t\t<div class=\"emlist\">\r\n\t\t\t\t<ul class=\"team-member team-listvew\">\r\n\t\t\t\t\t<li class=\"list-heading\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\tEmployee Name\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>Department</li>\r\n\t\t\t\t\t\t\t<li>Designation </li>\r\n\t\t\t\t\t\t\t<li>Actions </li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"list-heading list-content\" *ngFor=\"let data of SearchResults\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<div class=\"team-thumb\"></div>\r\n\t\t\t\t\t\t\t\t<h4>{{data.employee.employeeFname+\" \"+data.employee.employeeMname}}\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\">{{data.employee.employeeEmail}}</a></h4>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>{{data.department.departmentName}}</li>\r\n\t\t\t\t\t\t\t<li>{{data.designation.designationName}}</li>\r\n\t\t\t\t\t\t\t<li>\r\n\r\n\t\t\t\t\t\t\t\t<i class=\"icon-View\" *ngIf=\"userService.CheckPermission(userService.Elements.Employee,userService.Operations.View)\" (click)=\"viewIconClicked(data.employee.employeeId)\"></i>\r\n\t\t\t\t\t\t\t\t<i class=\"icon-edit\" *ngIf=\"userService.CheckPermission(userService.Elements.Employee,userService.Operations.Edit)\" (click)=\"editEmployeeIconClicked(data.employee.employeeId)\"></i>\r\n\t\t\t\t\t\t\t\t<i class=\"icon-Delete\" *ngIf=\"userService.CheckPermission(userService.Elements.Employee,userService.Operations.Delete)\" (click)=\"deleteIconClicked(data)\"></i>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\t<!-- <div class=\"slide-popup\" id=\"task-description\">\r\n\t<div class=\"slide-close\">\r\n\t\t<i class=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n\t</div>\r\n\t<div class=\"slide-wrapper\">\r\n\t\t<div class=\"slide-content\">\r\n\t\t\t<h3>Create Team</h3>\r\n\t\t\t<form>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"\">select project</label>\r\n\t\t\t\t\t<select name=\"\" id=\"#\" class=\"form-control\">\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t\t<option value=\"\">Sim Project</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<label for=\"\">select team member</label>\r\n\t\t\t\t\t<div class=\"selectwith-button\">\r\n\t\t\t\t\t\t<div class=\"custom-select-wrapper\">\r\n\t\t\t\t\t\t\t<div class=\"custom-select\">\r\n\t\t\t\t\t\t\t\t<div class=\"custom-select__trigger\"><span>Amanda Kherr <b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t\t<div class=\"arrow\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"custom-options\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"custom-option selected\" data-value=\"tesla\">Amanda Kherr\r\n\t\t\t\t\t\t\t\t\t\t<b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"custom-option\" data-value=\"volvo\">Amanda Kherr2\r\n\t\t\t\t\t\t\t\t\t\t<b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"custom-option\" data-value=\"mercedes\">Amanda Kherr3\r\n\t\t\t\t\t\t\t\t\t\t<b>Designer</b></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button class=\"btn btn-primary\">ADD</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<ul class=\"selected-user\">\r\n\t\t\t\t\t\t<li><span class=\"user-thumb\"></span>\r\n\t\t\t\t\t\t\t<p>Amanda Kherr <b>Designer</b></p><i class=\"fa fa-times\"></i>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<input type=\"submit\" value=\"Request feedback\" class=\"btn btn-primary\">\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</div> -->\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\r\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { ViewEmployeeComponent } from './view-employee/view-employee.component';\r\n\r\nconst routes: Routes = [{ path: 'create', component: CreateEmployeeComponent,data :{ Title:'Create Employee' ,ShowHeader:true,ShowNavBar:true} },\r\n { path: 'list', component:EmployeeListComponent,data :{ Title:'Employee List' ,ShowHeader:true,ShowNavBar:true}},\r\n { path: 'view', component:ViewEmployeeComponent,data :{ Title:'Employee' ,ShowHeader:true,ShowNavBar:true}},\r\n { path: 'edit', component:EditEmployeeComponent,data :{ Title:'Edit Employee' ,ShowHeader:true,ShowNavBar:true}}\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>employee works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmployeeRoutingModule } from './employee-routing.module';\r\nimport { EmployeeComponent } from './employee.component';\r\n\r\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\n\r\nimport {EmployeeService} from './employee.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {ToastModule} from 'primeng/toast';\r\nimport { ViewEmployeeComponent } from './view-employee/view-employee.component';\r\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\r\n\r\n@NgModule({\r\n  declarations: [EmployeeComponent, CreateEmployeeComponent, EmployeeListComponent, ViewEmployeeComponent, EditEmployeeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeeRoutingModule,HttpClientModule,ReactiveFormsModule,ToastModule\r\n  ],\r\n  providers:[EmployeeService]\r\n})\r\nexport class EmployeeModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserService } from 'src/app/Services/user.service';\r\n@Injectable()\r\nexport class EmployeeService {\r\n\r\n  constructor(private httpClient: HttpClient, private userService: UserService) { }\r\n\r\n  GetEmployeeData = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.employeeData);\r\n  }\r\n\r\n  GetEmployeeById = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getEmployeeData, { employeeId: id });\r\n  }\r\n\r\n  GetDepartments = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getDepartment);\r\n  }\r\n\r\n  GetDepartment = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getDepartmentById + id);\r\n  }\r\n\r\n  GetDesignation = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.GetDesignations, { designationId: id });\r\n  }\r\n\r\n  GetRolesForDepartmentId = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.GetDesignations, { departmentId: id });\r\n  }\r\n\r\n  CreateEmployee = function (data) {\r\n    data.createdBy=this.userService.LoggedInUser.Id;\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.AddEmployee, data);\r\n  }\r\n\r\n  UpdateEmployee = function (data) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.updateEmployee, data);\r\n  }\r\n  getOperations = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getOperations);\r\n  }\r\n\r\n  getElements = function () {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getElements);\r\n  }\r\n\r\n  getRolePermissions = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getDesignationElementMapping + id);\r\n  }\r\n\r\n  deleteEmployee = function (id) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.deleteEmployee, { employeeId: id })\r\n  }\r\n\r\n  getEmployeeElementMapping = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.getEmployeeElementsMapping + id);\r\n  }\r\n  GetSkillsMappedToEmployee = function (employeeIdData) {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getEmployeeSkill, { employeeId: employeeIdData });\r\n  }\r\n  GetAllTheSkills = function () {\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getSkill, {});\r\n  }\r\n\r\n  CreateSignUp = function (data) {\r\n    return this.httpClient.post(environment.url + environment.signup, data);\r\n  }\r\n\r\n  GetProjectListById = function (id) {\r\n    return this.httpClient.get(this.userService.LoggedInUser.PortalName + environment.ProjectList + id);\r\n  }\r\n\r\n  getTeam = function () {\r\n\r\n    return this.httpClient.post(this.userService.LoggedInUser.PortalName + environment.getTeam,{});\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../employee.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmployeePermissions } from 'src/app/Entities/EmployeePermissions';\r\n@Component({\r\n  selector: 'app-view-employee',\r\n  templateUrl: './view-employee.component.html',\r\n  styleUrls: ['./view-employee.component.css']\r\n})\r\nexport class ViewEmployeeComponent implements OnInit {\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  Employee;\r\n  DepartmentName;\r\n  DesignationName;\r\n  Operations: any[];\r\n  Elements: any[];\r\n  Permissions: any[];\r\n  EmployeeSkills: any[];\r\n  projectList: any[];\r\n  TeamList: any[];\r\n  Skills: any[];\r\n  ngOnInit(): void {\r\n    this.route.queryParamMap.subscribe(params => {\r\n      var id = params.get(\"id\");\r\n\r\n      this.employeeService.GetEmployeeById(id).subscribe((res) => {\r\n        if (res.errorCode == 0) {\r\n          this.Employee = res.dataObj[0];\r\n          this.GetDesignationById(this.Employee.designationId);\r\n          this.GetDepartmentById(this.Employee.departmentId);\r\n          this.employeeService.getOperations().subscribe(res => {\r\n            if (res.errorCode == 0) {\r\n              this.Operations = res.dataObj;\r\n              this.employeeService.getElements().subscribe(res => {\r\n                if (res.errorCode == 0) {\r\n                  this.Elements = res.dataObj;\r\n                  this.employeeService.getEmployeeElementMapping(id).subscribe(res => {\r\n                    if (res.errorCode == 0) {\r\n                      this.Permissions = res.dataObj.employeeElementMappingList;\r\n                      this.getEmployeeSkills(id);\r\n                      this.getAllEmployeeSkills();\r\n                      //MapPermissionsList(res.dataObj.employeeElementMappingList);\r\n                    }\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  MapPermissionsList(data) {\r\n    if (data) {\r\n      for (let index = 0; index < data.length; index++) {\r\n        const element = data[index];\r\n        for (let index2 = 0; index2 < element.employeeElementOprationList.length; index2++) {\r\n          const operation = element.employeeElementOprationList[index2];\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getEmployeeSkills(id) {\r\n    console.log(\"skill called\");\r\n    this.employeeService.GetSkillsMappedToEmployee(id)\r\n      .subscribe(res => {\r\n        if (res.errorCode == 0) {\r\n          console.log(res.dataObj);\r\n          this.EmployeeSkills = res.dataObj;\r\n        }\r\n        else {\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllEmployeeSkills() {\r\n    this.employeeService.GetAllTheSkills()\r\n      .subscribe(res => {\r\n        if (res.errorCode == 0) {\r\n          console.log(res.dataObj);\r\n          this.Skills = res.dataObj;\r\n        }\r\n        else {\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  getSkillNameById(id) {\r\n    if (this.Skills) {\r\n      for (let index = 0; index < this.Skills.length; index++) {\r\n        const element = this.Skills[index];\r\n        if (element.skillId == id) {\r\n          return element.skillName;\r\n        }\r\n      }\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getProjectList() {\r\n    var id = -1;\r\n    this.employeeService.GetProjectListById(id).subscribe((res) => {\r\n      console.log(res);\r\n      this.projectList = res.dataObj;\r\n      console.log(this.projectList);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  getTeamList() {\r\n    this.employeeService.getTeam().subscribe((res) => {\r\n      if (res.errorCode == 0) {\r\n        this.TeamList = res.dataObj;\r\n        console.log(this.TeamList);\r\n\r\n      }\r\n      else {\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  GetOperationName(id) {\r\n    for (let index = 0; index < this.Operations.length; index++) {\r\n      const operation = this.Operations[index];\r\n      if (operation.operationId == id) {\r\n        return operation.operationName;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetElementName(id) {\r\n    for (let index = 0; index < this.Elements.length; index++) {\r\n      const element = this.Elements[index];\r\n      if (element.elementId == id) {\r\n        return element.elementName;\r\n      }\r\n    }\r\n  }\r\n\r\n  GetDesignationById(id) {\r\n    this.employeeService.GetDesignation(id).subscribe(res => {\r\n      this.DepartmentName = res.dataObj[0].departmentName;\r\n    })\r\n  }\r\n\r\n  GetDepartmentById(id) {\r\n    this.employeeService.GetDepartment(id).subscribe(res => {\r\n      this.DesignationName = res.dataObj[0].designationName;\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"main-panel\">\r\n  <div class=\"content\" style=\"background-color:#DAEBEB;\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <ul class=\"nav nav-tabs\">\r\n            <li class=\"active\"><a data-toggle=\"tab\" href=\"#feedback-request\">Employee Details</a></li>\r\n            <li><a data-toggle=\"tab\" (click)=\"getProjectList()\" href=\"#my-feedback\">Projects</a></li>\r\n            <li><a data-toggle=\"tab\" (click)=\"getTeamList()\"href=\"#team-feedback\">Teams</a></li>\r\n            <li><a data-toggle=\"tab\" href=\"#skill-feedback\">Skills</a></li>\r\n          </ul>\r\n          <div class=\"tab-content\">\r\n            <div id=\"feedback-request\" class=\"tab-pane fade in active\">\r\n              <div class=\"table-full-width\">\r\n\r\n                <ul class=\"feedback-list\" style=\"margin-bottom: 0px;\">\r\n                  <li>\r\n                    <div class=\"media\">\r\n                      <div class=\"media-left\">\r\n                        <a href=\"#\">\r\n                          <img class=\"media-object\" src=\"assets/img/faces/face-1.jpg\" alt=\"...\">\r\n                        </a>\r\n                      </div>\r\n                      <div class=\"media-body\">\r\n                        <h4 class=\"media-heading\">{{Employee.employeeFname+\" \"+Employee.employeeMname}} </h4>\r\n                        <p class=\"gray-text\">{{DepartmentName}} . {{DesignationName}}</p>\r\n                        <p><a href=\"'mailto:'+{{Employee.employeeEmail}}\">{{Employee.employeeEmail}}</a>\r\n                        </p>\r\n                        <p>{{Employee.employeeMobileNo}}</p>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n\r\n                </ul>\r\n              </div>\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-12 col-xs-12\">\r\n                  <h4>Employee Permission</h4>\r\n                  <div class=\"panel-group\" id=\"accordion\">\r\n\r\n\r\n                    <div class=\"panel panel-default\" id=\"panel2\" [attr.data-toggle]=\"'collapse'+element.elementId\"\r\n                      *ngFor=\"let element of Permissions\" [attr.data-target]=\"'#collapse'+element.elementId\">\r\n                      <div class=\"panel-heading\" data-toggle=\"collapse\"\r\n                        [attr.data-target]=\"'#collapse'+element.elementId\">\r\n                        <h4 class=\"panel-title\"><a style=\"font-weight:bold\" data-toggle=\"collapse\"\r\n                            [attr.data-target]=\"'#collapse'+element.elementId\"\r\n                            class=\"collapsed\">{{GetElementName(element.elementId)}}</a></h4>\r\n                      </div>\r\n                      <div [attr.id]=\"'collapse'+element.elementId\" class=\"panel-collapse collapse fade\">\r\n                        <div class=\"panel-body\">\r\n                          <div class=\"content\">\r\n                            <div class=\"permission-list\">\r\n                              <ul>\r\n                                <li *ngFor=\"let operation of element.employeeElementOprationList\">\r\n                                  {{GetOperationName(operation.operationId)}}</li>\r\n                              </ul>\r\n\r\n                            </div>\r\n\r\n\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <!-- panel3 -->\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <div id=\"my-feedback\" class=\"tab-pane fade\">\r\n              <div class=\"table-full-width\">\r\n                <ul class=\"checkbox-list\">\r\n                  <li>\r\n                    <table class=\"table\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style=\"width:280px;\"> Projects Name</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">Start Date</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">Due Date</td>\r\n                          <td style=\"width: 140px;\" class=\"gray-text\">Team</td>\r\n                          <td style=\"width: 104px;\">Priorities</td>\r\n                          <td style=\"width: 110px;\">\r\n                            Status\r\n                          </td>\r\n                          <td style=\"width: 180px;\" class=\"gray-text\"> Action</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </li>\r\n                  <li *ngFor=\"let project of projectList\">\r\n                    <table class=\"table\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style=\"width:292px;\">{{project.projectName}}</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">{{project.projectStartDate}}</td>\r\n                          <td style=\"width: 150px;\" class=\"gray-text\">{{project.projectDueDate}}</td>\r\n                          <td style=\"width: 140px;\" class=\"gray-text projectthumb\">\r\n                            <div class=\"team-thumb\"></div>\r\n                            <div class=\"team-thumb\"></div>\r\n                            <div class=\"more-thumb\">\r\n                              3+</div>\r\n                          </td>\r\n                          <td style=\"width: 92px;\"><span class=\"prioritybox\"\r\n                              [ngClass]=\"{'completedcolor':project.projectStatus=='Completed',\r\n                                              'yellowcolor':project.projectStatus!='Completed' && project.projectPriority=='Low',\r\n                                              'purplecolor':project.projectStatus!='Completed' && project.projectPriority=='Medium',\r\n                                              'redcolor':project.projectStatus!='Completed' && project.projectPriority=='High'}\">{{project.projectPriority}}</span>\r\n                          </td>\r\n                          <td style=\"width: 110px;\">\r\n                            <span class=\"statusbox\"\r\n                              [ngClass]=\"{\r\n                                            'redcolor':project.projectStatus=='Delayed',\r\n                                            'greencolor':project.projectStatus=='Completed',\r\n                                            'purplecolor':project.projectStatus=='In Progress'}\">{{project.projectStatus}}</span>\r\n                          </td>\r\n\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"table-full-width\">\r\n\r\n              </div>\r\n            </div>\r\n            <div id=\"team-feedback\" class=\"tab-pane fade\">\r\n              <div class=\"table-full-width\" *ngIf=\"TeamList && TeamList.length>0\">\r\n                <div class=\"emlist\">\r\n                  <ul class=\"team-member team-listvew\">\r\n                    <li class=\"team-heading\">\r\n                      <ul>\r\n                        <li>\r\n                          Team Name\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n                    <li class=\"team-heading list-content\" *ngFor=\"let data of TeamList\">\r\n\r\n                      <ul>\r\n                        <li>\r\n                          {{data.teamName}}\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n                  </ul>\r\n\r\n                </div>\r\n              </div>\r\n              <h3 style=\"text-align: center;padding-top: 20%;\" *ngIf=\"!TeamList || TeamList.length==0\">Not tagged to any team</h3>\r\n\r\n            </div>\r\n            <div id=\"skill-feedback\" class=\"tab-pane fade\">\r\n              <div class=\"table-full-width\" *ngIf=\"EmployeeSkills && EmployeeSkills.length>0\">\r\n                <ul class=\"feedback-list\">\r\n                  <li>\r\n                    <div class=\"row skill-list\">\r\n                      <div class=\"col-md-6\" *ngFor=\"let skill of EmployeeSkills\">\r\n\r\n                        <div class=\"skill-slider\">\r\n                          <span>{{getSkillNameById(skill.skillId)}}</span>\r\n                          <span id=\"ex1CurrentSliderValLabel\" class=\"skill-value\"><span\r\n                              id=\"ex1SliderVal\">67</span>%</span>\r\n                          <div class=\"slider slider-horizontal\" id=\"\">\r\n                            <div class=\"slider-track\">\r\n                              <div class=\"slider-track-low\" style=\"left: 0px; width: 0%;\">\r\n                              </div>\r\n                              <div class=\"slider-selection\" style=\"left: 0%; width: 67%;\">\r\n                              </div>\r\n                              <div class=\"slider-track-high\" style=\"right: 0px; width: 46%;\"></div>\r\n                            </div>\r\n                            <div class=\"tooltip tooltip-main top\" role=\"presentation\" style=\"left: 54%;\">\r\n                              <div class=\"tooltip-arrow\"></div>\r\n                              <div class=\"tooltip-inner\">54</div>\r\n                            </div>\r\n                            <div class=\"tooltip tooltip-min top\" role=\"presentation\" style=\"display: none;\">\r\n                              <div class=\"tooltip-arrow\"></div>\r\n                              <div class=\"tooltip-inner\"></div>\r\n                            </div>\r\n                            <div class=\"tooltip tooltip-max top\" role=\"presentation\" style=\"display: none;\">\r\n                              <div class=\"tooltip-arrow\"></div>\r\n                              <div class=\"tooltip-inner\"></div>\r\n                            </div>\r\n                            <div class=\"slider-handle max-slider-handle round hide\" role=\"slider\" aria-valuemin=\"0\"\r\n                              aria-valuemax=\"100\" aria-valuenow=\"0\" tabindex=\"0\" style=\"left: 0%;\"></div>\r\n                          </div><input id=\"ex1\" type=\"text\" data-slider-min=\"0\" data-slider-max=\"100\"\r\n                            data-slider-step=\"1\" data-slider-value=\"100\" [attr.data-value]=\"skill.skillProficiency\"\r\n                            value=\"{{skill.skillProficiency}}\" style=\"display: none;\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </li>\r\n\r\n                </ul>\r\n              </div>\r\n              <h3 *ngIf=\"!EmployeeSkills || EmployeeSkills.length==0\" style=\"text-align: center;padding-top: 20%;\">No\r\n                skills mapped</h3>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}